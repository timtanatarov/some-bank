{"version":3,"file":"static/js/306.8bcbc9d5.chunk.js","mappings":"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","sources":["images/cardCovers/creditCoverBlue.svg","components/MainPage/Credits/CreditDetails.tsx","components/MainPage/utils.ts","shared/cards/Credit.tsx"],"sourcesContent":["var _g, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCreditCoverBlue(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 260,\n    height: 166,\n    viewBox: \"0 0 260 166\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_11297_186332)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 260,\n    height: 166,\n    rx: 16,\n    fill: \"#55AAB0\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 1,\n    y: 1,\n    width: 258,\n    height: 164,\n    rx: 15,\n    stroke: \"url(#paint0_linear_11297_186332)\",\n    strokeWidth: 2\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.1\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.237 140.227L263.487 20\",\n    stroke: \"white\",\n    strokeWidth: 9,\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M274.5 118.213C274.5 131.552 263.471 142.5 249.697 142.5C235.924 142.5 224.895 131.552 224.895 118.213C224.895 104.875 235.924 93.9268 249.697 93.9268C263.471 93.9268 274.5 104.875 274.5 118.213Z\",\n    stroke: \"white\",\n    strokeWidth: 9\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M202.105 48.7867C202.105 62.1248 191.076 73.0733 177.303 73.0733C163.529 73.0733 152.5 62.1248 152.5 48.7867C152.5 35.4485 163.529 24.5 177.303 24.5C191.076 24.5 202.105 35.4485 202.105 48.7867Z\",\n    stroke: \"white\",\n    strokeWidth: 9\n  })))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_11297_186332\",\n    x1: -0.00000113777,\n    y1: 72.625,\n    x2: 260.001,\n    y2: 74.1391,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"white\",\n    stopOpacity: 0.31\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"white\",\n    stopOpacity: 0.3\n  })), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_11297_186332\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 260,\n    height: 166,\n    fill: \"white\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCreditCoverBlue);\nexport default __webpack_public_path__ + \"static/media/creditCoverBlue.ef94b533da240fbb32c2f92db62c7865.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useMemo } from 'react';\nimport { useParams, Link as RouterLink } from 'react-router-dom';\n\nimport { Box, Stack, Typography, Button, Link } from '@mui/material';\n\nimport { separateStringByN, formatAmountOutput } from 'src/utils/inputFormatters';\n\nimport { BackArrowButton } from 'src/shared/BackArrowButton';\n\nimport { AppRoutes } from 'src/constants';\nimport { colors } from 'src/theme';\n\nimport { useGetCreditInfoQuery } from 'src/redux/apis/creditService';\n\nimport { CreditCard } from 'src/shared/cards/Credit';\n\nimport { ComingSoonModal } from 'src/shared/ComingSoonModal';\nimport { Plate } from 'src/shared/Plate';\n\nimport { useTabTitle } from 'src/hooks/useTabTitle';\n\nimport { InfoTable } from 'src/shared/InfoTable';\n\nexport const CreditDetails = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const { id = '' } = useParams();\n    const { data: creditDetails, isError, isLoading } = useGetCreditInfoQuery(id);\n\n    useTabTitle(creditDetails?.name || '');\n\n    const handleOpen = () => {\n        setIsOpen(true);\n    };\n\n    const handleClose = () => {\n        setIsOpen(false);\n    };\n\n    const creditTableData = useMemo(() => {\n        return creditDetails\n            ? [\n                  {\n                      id: 1,\n                      title: 'Сумма кредита',\n                      info: `${formatAmountOutput(String(creditDetails.principalDebt))} RUB`,\n                      copyButton: false,\n                  },\n                  {\n                      id: 2,\n                      title: 'Срок действия кредита',\n                      info: String(creditDetails.terminationDate),\n                      copyButton: false,\n                  },\n                  { id: 3, title: 'Ставка годовых', info: `${creditDetails.interestRate}%`, copyButton: false },\n                  {\n                      id: 4,\n                      title: 'Номер договора',\n                      info: separateStringByN(String(creditDetails.accountNumber), 4),\n                      copyButton: true,\n                  },\n                  { id: 5, title: 'Номер счета', info: separateStringByN('1234123412341234', 4), copyButton: true },\n              ]\n            : null;\n    }, [creditDetails]);\n\n    if (isError) {\n        return <Plate message=\"Произошла ошибка\" />;\n    }\n\n    if (isLoading) {\n        return <Plate message=\"Загружаем данные\" />;\n    }\n\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n                alignItems: 'flex-start',\n                gap: '48px',\n                padding: { tablet: '0 36px', mobile: '0 24px' },\n            }}\n        >\n            <Stack spacing=\"44px\">\n                <Link component={RouterLink} to={AppRoutes.creditsRoute} underline=\"none\">\n                    <BackArrowButton sx={{ color: colors.primary, svg: { color: colors.primary } }} />\n                </Link>\n                {!creditDetails ? (\n                    <Plate message=\"Нет информации по данному кредиту\" />\n                ) : (\n                    <>\n                        <Typography variant=\"subtitle2Semibold\" sx={{ lineHeight: '30px' }}>\n                            {creditDetails.name}\n                        </Typography>\n                        <Stack direction=\"row\" spacing={2}>\n                            <Stack spacing=\"56px\" alignItems=\"flex-start\">\n                                <Stack spacing=\"24px\" maxWidth=\"282px\">\n                                    <CreditCard\n                                        name={creditDetails.name}\n                                        currencyCode=\"RUB\"\n                                        principalDebt={creditDetails.principalDebt}\n                                        size=\"large\"\n                                    />\n                                    <Button variant=\"primary\" onClick={handleOpen}>\n                                        Пополнить\n                                    </Button>\n                                    <Button variant=\"secondary\" onClick={handleOpen}>\n                                        Погасить досрочно\n                                    </Button>\n                                </Stack>\n                            </Stack>\n                            <Stack>\n                                <Plate\n                                    message={`Необходимо оплатить ${creditDetails.paymentInterest.toFixed(2)} RUB, до ${\n                                        creditDetails.paymentDate\n                                    }`}\n                                />\n                                <InfoTable data={creditTableData} />\n                            </Stack>\n                        </Stack>\n                    </>\n                )}\n            </Stack>\n            <ComingSoonModal isOpen={isOpen} onClose={handleClose} />\n        </Box>\n    );\n};\n","import { mockOperationsData } from './Operations/constants';\n\nexport const operationDateFormatter = (date: string) => {\n    const incomingDate = new Date(date);\n    const time = incomingDate.toTimeString().slice(0, 5);\n    const options: Intl.DateTimeFormatOptions = { year: '2-digit', month: '2-digit', day: '2-digit' };\n    const yymmdd = incomingDate.toLocaleDateString('en-GB', options);\n    const midnight = new Date().setHours(0, 0, 0);\n\n    if (incomingDate.getTime() < midnight - 86400000) {\n        return yymmdd + ' ' + time;\n    } else if (incomingDate.getTime() < midnight) {\n        return `Вчера ${time}`;\n    } else {\n        return time;\n    }\n};\n\nexport const balanceFormatter = (balance: number, type: string) => {\n    const isCardBalance = type === 'card';\n    return String(balance).replace(/(\\d)(?=(\\d{3})+([^\\d]|$))/g, isCardBalance ? '$1,' : '$1 ');\n};\n\nexport const cardDateFormatter = (date: string) => {\n    return date.slice(5, 7) + '/' + date.slice(2, 4);\n};\n\nexport const cardNumberFormatter = (cardNumber: string) => {\n    return '**** ' + cardNumber.slice(-4);\n};\n\nexport const getNameOfSender = (payeeId: string) => {\n    const name = payeeId.split(' ');\n    return name[0] + ' ' + name[1].slice(0, 1) + '.';\n};\n\nexport const operationTitleFormatter = (payeeId: string, operationName: string) => {\n    switch (operationName) {\n        case 'incoming':\n            return `Перевод от ${getNameOfSender(payeeId)}`;\n        case 'internal':\n            return 'Перевод между счетами';\n        case 'withdraw':\n            return 'Снятие наличных';\n        case 'purchase':\n            return payeeId;\n        default:\n            return payeeId;\n    }\n};\n\nexport const filterTransactions = (searchText: string, data: mockOperationsData) => {\n    if (!searchText) {\n        return data;\n    }\n    return data.filter(({ payeeId }) => payeeId.toLowerCase().includes(searchText.toLowerCase()));\n};\n","import { Typography, Stack } from '@mui/material';\n\nimport { colors } from 'src/theme';\n\nimport { balanceFormatter } from 'src/components/MainPage/utils';\nimport { currencyData, currencyKeys } from 'src/services/exchangeRatesService/currencyData';\nimport creditCoverBlue from 'src/images/cardCovers/creditCoverBlue.svg';\n\nimport { BaseCard } from './Base';\n\ntype CreditProps = {\n    name: string;\n    principalDebt: number;\n    currencyCode: currencyKeys;\n    size?: 'normal' | 'large';\n    periodMonths?: number;\n    amount?: number;\n};\n\nexport const CreditCard = ({ name, principalDebt, currencyCode, size = 'normal', periodMonths }: CreditProps) => {\n    return (\n        <BaseCard cardCover={{ imgSrc: creditCoverBlue, defaultBackgroundColor: colors.creditCoverBlue }} size={size}>\n            <Typography\n                variant=\"descriptionSemiBold\"\n                component=\"h4\"\n                sx={{\n                    fontSize: '16px',\n                    height: '28px',\n                    width: '128px',\n                }}\n            >\n                {`«${name}»`}\n            </Typography>\n\n            <Stack\n                spacing=\"15px\"\n                style={{ marginTop: '25px' }}\n                sx={{\n                    color: colors.neutral0,\n                }}\n            >\n                <Typography>Остаток основного долга</Typography>\n                <Typography variant=\"descriptionSemiBold\" sx={{ lineHeight: '8px', fontSize: '24px' }}>\n                    {currencyData[currencyCode].symbol} {balanceFormatter(principalDebt, '')}\n                </Typography>\n                <Typography>{periodMonths} месяцев</Typography>\n            </Stack>\n        </BaseCard>\n    );\n};\n"],"names":["CreditDetails","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","_useParams$id","useParams","id","_useGetCreditInfoQuer","useGetCreditInfoQuery","creditDetails","data","isError","isLoading","useTabTitle","name","handleOpen","creditTableData","useMemo","title","info","concat","formatAmountOutput","String","principalDebt","copyButton","terminationDate","interestRate","separateStringByN","accountNumber","_jsx","Plate","message","_jsxs","Box","sx","display","alignItems","gap","padding","tablet","mobile","children","Stack","spacing","Link","component","RouterLink","to","AppRoutes","underline","BackArrowButton","color","colors","svg","_Fragment","Typography","variant","lineHeight","direction","maxWidth","CreditCard","currencyCode","size","Button","onClick","paymentInterest","toFixed","paymentDate","InfoTable","ComingSoonModal","onClose","operationDateFormatter","date","incomingDate","Date","time","toTimeString","slice","yymmdd","toLocaleDateString","year","month","day","midnight","setHours","getTime","balanceFormatter","balance","type","isCardBalance","replace","cardDateFormatter","cardNumberFormatter","cardNumber","operationTitleFormatter","payeeId","operationName","split","getNameOfSender","filterTransactions","searchText","filter","_ref","toLowerCase","includes","_ref$size","periodMonths","BaseCard","cardCover","imgSrc","creditCoverBlue","defaultBackgroundColor","fontSize","height","width","style","marginTop","currencyData","symbol"],"sourceRoot":""}