{"version":3,"file":"static/js/84.c2a32dec.chunk.js","mappings":"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","sources":["components/ProfilePage/constants.ts","components/ProfilePage/Profile.tsx","hooks/useMatchesScreen.ts","utils/inputFormatters.ts","../node_modules/@mui/material/styles/useTheme.js","../node_modules/@mui/material/useMediaQuery/useMediaQuery.js","../node_modules/@mui/material/utils/useEnhancedEffect.js"],"sourcesContent":["export const profileFieldsConfig = [\n    { label: 'Имя', name: 'firstName' },\n    { label: 'Фамилия', name: 'lastName' },\n    { label: 'Отчество', name: 'middleName' },\n    { label: 'Номер телефона', name: 'mobilePhone' },\n    { label: 'Налоговый статус', name: 'countryOfResidence' },\n];\n","import { Stack, Typography, useTheme } from '@mui/material';\n\nimport { useAppSelector } from 'src/redux/hooks';\nimport { selectClientId } from 'src/redux/selectors';\n\nimport { colors } from 'src/theme';\nimport { useGetUserInfoQuery } from 'src/redux/apis/userService';\nimport { formatPhoneNumberOutput } from 'src/utils/inputFormatters';\n\nimport { useMatchesScreen } from 'src/hooks/useMatchesScreen';\n\nimport { profileFieldsConfig } from './constants';\n\nexport const ProfileBlock = () => {\n    const theme = useTheme();\n    const { isMobile, isTablet, isLaptop } = useMatchesScreen();\n    const clientId = useAppSelector(selectClientId);\n    const isLowerThanLaptop = isMobile || isTablet;\n    const { userInfo } = useGetUserInfoQuery(clientId, {\n        selectFromResult: ({ data }) => ({\n            userInfo: {\n                firstName: data?.firstName,\n                lastName: data?.lastName,\n                middleName: data?.middleName,\n                mobilePhone: data?.mobilePhone && formatPhoneNumberOutput(data?.mobilePhone.slice(1)),\n                countryOfResidence: data?.residentOfRussia ? 'Резидент РФ' : 'Нерезидент РФ',\n            },\n        }),\n    });\n\n    return (\n        <Stack spacing=\"24px\">\n            {!(isTablet || isLaptop) && (\n                <Typography variant={isLowerThanLaptop ? 'subtitle2Semibold' : 'bold24'}>Профиль</Typography>\n            )}\n            <Typography\n                variant=\"descriptionSemiBold\"\n                sx={{\n                    [theme.breakpoints.down('laptop')]: { fontSize: '20px', lineHeight: '30px', fontWeight: 400 },\n                    [theme.breakpoints.down('tablet')]: { fontSize: '16px', lineHeight: '20px' },\n                }}\n            >\n                Личная информация\n            </Typography>\n            <Stack spacing=\"20px\">\n                {userInfo &&\n                    profileFieldsConfig.map(\n                        (item) =>\n                            userInfo[item.name as keyof typeof userInfo] && (\n                                <Stack spacing=\"8px\" key={item.name}>\n                                    <Typography variant=\"regular14_20\" sx={{ color: colors.neutral600 }}>\n                                        {item.label}\n                                    </Typography>\n                                    <Typography variant=\"descriptionRegular\">\n                                        {userInfo[item.name as keyof typeof userInfo]}\n                                    </Typography>\n                                </Stack>\n                            )\n                    )}\n            </Stack>\n        </Stack>\n    );\n};\n","import { useTheme } from '@mui/material/styles';\nimport { Options, useMediaQuery } from '@mui/material';\n\nconst options: Options = {\n    noSsr: true,\n};\n\nexport const useMatchesScreen = () => {\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.between('mobile', 'tablet'), options);\n    const isTablet = useMediaQuery(theme.breakpoints.between('tablet', 'laptop'), options);\n    const isLaptop = useMediaQuery(theme.breakpoints.between('laptop', 'desktop'), options);\n    const isDesktop = useMediaQuery(theme.breakpoints.up('desktop'), options);\n\n    return { isMobile, isTablet, isLaptop, isDesktop };\n};\n","export const formatNumberToSpacingString = (num: number) => {\n    return new Intl.NumberFormat('ru-RU', { maximumFractionDigits: 2 }).format(num);\n};\n\nexport const formatInputToSpacingString = (str: string) => {\n    if (str.match(/[^\\s\\d.,]/)) return '';\n    if (Number(str.match(/[,.]/g)?.length) > 1) return '';\n    const dividerPosition = str.match(/[,.]/);\n    if (dividerPosition && Number(dividerPosition.index) < str.length - 3) return '';\n    return str.replaceAll(' ', '').replace(/(\\d)(?=(\\d{3})+([^\\d]|$))/g, '$1 ');\n};\n\nexport const convertToNumber = (value: string) => +value.replaceAll(/\\s/g, '').replace(',', '.');\n\nexport const formatPhoneNumberOutput = (phoneNumber: string) => {\n    const pattern = new RegExp(`(^\\\\d{${phoneNumber.length % 10}})(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2}$)`);\n    return phoneNumber.replace(pattern, '+$1 ($2) $3 $4 $5');\n};\n\nexport const formatAmountOutput = (value: string) => value.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, `$1 `);\n\nexport const separateStringByN = (string: string, n: number) => {\n    let result = '';\n    for (let i = 0; i < string.length; i++) {\n        result += string[i];\n        if ((i + 1) % n === 0 && i < string.length - 1) result += ' ';\n    }\n    return result;\n};\n","import * as React from 'react';\nimport { useTheme as useThemeSystem } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nexport default function useTheme() {\n  const theme = useThemeSystem(defaultTheme);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  return theme;\n}","import * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    const queryList = matchMedia(query);\n\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch(); // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n  return match;\n} // eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\n\n\nconst maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\n\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return () => {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\n\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme(); // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n\n  return match;\n}","import { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nexport default useEnhancedEffect;"],"names":["profileFieldsConfig","label","name","ProfileBlock","_ref2","theme","useTheme","_useMatchesScreen","useMatchesScreen","isMobile","isTablet","isLaptop","clientId","useAppSelector","selectClientId","isLowerThanLaptop","userInfo","useGetUserInfoQuery","selectFromResult","_ref","data","firstName","lastName","middleName","mobilePhone","formatPhoneNumberOutput","slice","countryOfResidence","residentOfRussia","_jsxs","Stack","spacing","children","_jsx","Typography","variant","sx","_defineProperty","breakpoints","down","fontSize","lineHeight","fontWeight","map","item","color","colors","options","noSsr","useMediaQuery","between","isDesktop","up","formatNumberToSpacingString","num","Intl","NumberFormat","maximumFractionDigits","format","formatInputToSpacingString","str","_str$match","match","Number","length","dividerPosition","index","replaceAll","replace","convertToNumber","value","phoneNumber","pattern","RegExp","concat","formatAmountOutput","separateStringByN","string","n","result","i","useThemeSystem","defaultTheme","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","supportMatchMedia","window","_React$useState","React","matches","_React$useState2","_slicedToArray","setMatch","useEnhancedEffect","active","queryList","updateMatch","addListener","removeListener","maybeReactUseSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","getServerSnapshot","_React$useMemo","mediaQueryList","notify","_React$useMemo2","getSnapshot","subscribe","queryInput","arguments","undefined","_getThemeProps","getThemeProps","props","_getThemeProps$defaul","_getThemeProps$matchM","_getThemeProps$ssrMat","useMediaQueryImplementation"],"sourceRoot":""}