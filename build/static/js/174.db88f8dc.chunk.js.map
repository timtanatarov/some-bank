{"version":3,"file":"static/js/174.db88f8dc.chunk.js","mappings":"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","sources":["shared/icons/Edit.tsx","components/ProfilePage/Notifications/ChangeEmail.tsx","components/ProfilePage/Notifications/index.tsx","hooks/useMatchesScreen.ts","shared/CustomInput/utils.ts","shared/CustomInput/index.tsx","shared/WarningModal.tsx","utils/isServerError.ts","../node_modules/@mui/material/useMediaQuery/useMediaQuery.js"],"sourcesContent":["import SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon';\n\nimport { colors } from 'src/theme';\n\nexport const EditIcon = (props: SvgIconProps) => (\n    <SvgIcon {...props}>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n                d=\"M17.7143 7.42832L18.8571 8.57118M19.4286 4.57118C19.6537 4.79627 19.8324 5.06353 19.9542 5.35767C20.0761 5.65181 20.1388 5.96708 20.1388 6.28546C20.1388 6.60385 20.0761 6.91911 19.9542 7.21325C19.8324 7.5074 19.6537 7.77465 19.4286 7.99975L8.57143 18.8569L4 19.9997L5.14286 15.4923L16.0046 4.57575C16.4327 4.14554 17.0069 3.89205 17.6133 3.86558C18.2196 3.83912 18.8137 4.04162 19.2777 4.43289L19.4286 4.57118Z\"\n                stroke={colors.secondary800}\n                strokeWidth=\"1.7\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </svg>\n    </SvgIcon>\n);\n","import { FC, useEffect } from 'react';\nimport { Stack, Button } from '@mui/material';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useUpdEmailMutation } from 'src/redux/apis/userService';\n\nimport { CustomInput } from 'src/shared/CustomInput';\n\nconst emailValidationSchema = (oldEmail: string) =>\n    Yup.object().shape({\n        email: Yup.string()\n            .max(320, 'Слишком длинный email')\n            .email('Невалидный email')\n            .required('Обязательное поле')\n            .notOneOf([oldEmail], 'Вы уже используете этот E-mail'),\n    });\n\ntype ChangeEmailProps = {\n    oldEmail: string;\n    onReturn: VoidFunction;\n};\n\nexport const ChangeEmail: FC<ChangeEmailProps> = ({ oldEmail, onReturn }) => {\n    const [patchEmail, { isLoading: isEmailUpdating, isSuccess: isEmailSuccess, isError: isEmailError }] =\n        useUpdEmailMutation();\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n        },\n        validationSchema: () => emailValidationSchema(oldEmail),\n        validateOnChange: false,\n        validateOnBlur: true,\n        onSubmit: (values) => {},\n    });\n\n    const handleClearClick = () => {\n        formik.resetForm();\n    };\n\n    const handleUpdEmailClick = () => {\n        !isEmailUpdating && patchEmail(formik.values.email);\n    };\n\n    if (isEmailSuccess) onReturn();\n\n    const { setFieldError } = formik;\n\n    useEffect(() => {\n        if (isEmailError) setFieldError('email', 'Кажется, что-то пошло не так, повторите запрос');\n    }, [isEmailError, setFieldError]);\n\n    return (\n        <Stack direction=\"column\" spacing=\"24px\" alignItems=\"stretch\" mt=\"40px\" sx={{ width: '416px' }}>\n            <CustomInput\n                id=\"email\"\n                type=\"email\"\n                label=\"Введите ваш E-mail\"\n                name=\"email\"\n                fullWidth={true}\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                isClearable={true}\n                error={!!formik.errors.email}\n                helperText={formik.errors.email}\n                onClear={handleClearClick}\n                onFocus={() => {\n                    formik.setFieldError('email', '');\n                }}\n                onBlur={formik.handleBlur}\n            />\n            <Button\n                variant=\"primary\"\n                fullWidth={true}\n                disabled={\n                    !formik.values.email || !!formik.errors.email || formik.values.email === oldEmail || isEmailUpdating\n                }\n                onClick={handleUpdEmailClick}\n            >\n                Сохранить\n            </Button>\n            <Button variant=\"secondary\" fullWidth={true} onClick={onReturn}>\n                Отмена\n            </Button>\n        </Stack>\n    );\n};\n","import { useState, useEffect } from 'react';\n\nimport { Box, Stack, Typography, Switch, useTheme } from '@mui/material';\n\nimport { useMatchesScreen } from 'src/hooks/useMatchesScreen';\nimport { colors } from 'src/theme';\n\nimport {\n    useGetNotificationsQuery,\n    useUpdEmailNotificationsMutation,\n    useUpdSmsNotificationsMutation,\n    useUpdPushNotificationsMutation,\n} from 'src/redux/apis/userService';\n\nimport { EditIcon } from 'src/shared/icons/Edit';\n\nimport { isServerError } from 'src/utils/isServerError';\nimport { WarningModal } from 'src/shared/WarningModal';\n\nimport { ChangeEmail } from './ChangeEmail';\n\nconst switchStyle = {\n    '& .MuiButtonBase-root': {\n        '&.MuiSwitch-switchBase': {\n            color: colors.neutral0,\n            '&:hover': {\n                background: 'none',\n            },\n            '& + .MuiSwitch-track': {\n                background: colors.neutral400,\n            },\n            '&.Mui-checked': {\n                color: colors.secondary600,\n                '& + .MuiSwitch-track': {\n                    background: colors.secondary200,\n                },\n            },\n        },\n    },\n};\n\nexport const NotificationsSettingsBlock = () => {\n    const theme = useTheme();\n    const { isMobile, isTablet, isLaptop } = useMatchesScreen();\n    const isLowerThanLaptop = isMobile || isTablet;\n    const [isEditEmail, setIsEditEmail] = useState(false);\n    const [emailSub, setEmailSub] = useState(false);\n    const [smsSub, setSmsSub] = useState(false);\n    const [pushSub, setPushSub] = useState(false);\n    const [isErrorModalOpened, setIsErrorModalOpened] = useState(false);\n    const { data: notifications, isFetching, error } = useGetNotificationsQuery();\n    const [patchEmailNotifications] = useUpdEmailNotificationsMutation();\n    const [patchSmsNotifications] = useUpdSmsNotificationsMutation();\n    const [patchPushNotifications] = useUpdPushNotificationsMutation();\n\n    const isNotificationsServerError: boolean = isServerError(error);\n\n    const handleEmailSubChange = () => {\n        setEmailSub((sub) => !sub);\n        notifications?.email && patchEmailNotifications({ email: notifications.email, notificationStatus: !emailSub });\n    };\n    const handleSmsSubChange = () => {\n        setSmsSub((sub) => !sub);\n        notifications && patchSmsNotifications(!smsSub);\n    };\n\n    const handlePushSubChange = () => {\n        setPushSub((sub) => !sub);\n        notifications && patchPushNotifications(!pushSub);\n    };\n\n    useEffect(() => {\n        if (notifications) {\n            setEmailSub(notifications.emailSubscription);\n            setPushSub(notifications.pushNotification);\n            setSmsSub(notifications.smsNotification);\n        }\n    }, [notifications]);\n\n    useEffect(() => {\n        if (isNotificationsServerError) {\n            setIsErrorModalOpened(true);\n        }\n    }, [isNotificationsServerError]);\n\n    return (\n        <Stack spacing=\"24px\" component=\"form\">\n            {!(isTablet || isLaptop) && (\n                <Typography variant={isLowerThanLaptop ? 'subtitle2Semibold' : 'bold24'}>Уведомления </Typography>\n            )}\n            <Typography\n                variant=\"descriptionSemiBold\"\n                sx={{\n                    [theme.breakpoints.down('laptop')]: { fontSize: '20px', lineHeight: '30px', fontWeight: 400 },\n                    [theme.breakpoints.down('tablet')]: { fontSize: '16px', lineHeight: '20px' },\n                }}\n            >\n                E-mail для получения рассылки новостей\n            </Typography>\n            {isEditEmail ? (\n                <ChangeEmail\n                    oldEmail={notifications?.email || ''}\n                    onReturn={() => {\n                        setIsEditEmail(false);\n                    }}\n                />\n            ) : (\n                <>\n                    <Stack spacing=\"8px\">\n                        <Typography variant=\"regular14\" color={colors.neutral600}>\n                            Ваш E-mail\n                        </Typography>\n                        <Box sx={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                            <Typography variant=\"descriptionRegular\">\n                                {isFetching && !notifications\n                                    ? 'Загрузка...'\n                                    : notifications?.email || 'Email не задан'}\n                            </Typography>\n                            <EditIcon\n                                sx={{ cursor: 'pointer', color: colors.secondary800 }}\n                                onClick={() => setIsEditEmail(true)}\n                            />\n                        </Box>\n                    </Stack>\n                    {[\n                        { text: 'E-mail рассылка', checked: emailSub, onChange: handleEmailSubChange },\n                        {\n                            text: 'SMS-уведомления',\n                            checked: smsSub,\n                            onChange: handleSmsSubChange,\n                        },\n                        {\n                            text: 'PUSH-уведомления',\n                            checked: pushSub,\n                            onChange: handlePushSubChange,\n                        },\n                    ].map((item) => (\n                        <Stack direction=\"row\" spacing=\"8px\" key={item.text} alignItems=\"center\">\n                            <Typography variant=\"descriptionRegular\">{item.text}</Typography>\n                            <Switch\n                                sx={switchStyle}\n                                disableRipple={true}\n                                checked={item.checked}\n                                onChange={item.onChange}\n                            />\n                        </Stack>\n                    ))}\n                </>\n            )}\n            {isNotificationsServerError && (\n                <WarningModal\n                    message=\"Сервис временно недоступен.\"\n                    isOpen={isErrorModalOpened}\n                    onClose={() => setIsErrorModalOpened(false)}\n                />\n            )}\n        </Stack>\n    );\n};\n","import { useTheme } from '@mui/material/styles';\nimport { Options, useMediaQuery } from '@mui/material';\n\nconst options: Options = {\n    noSsr: true,\n};\n\nexport const useMatchesScreen = () => {\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.between('mobile', 'tablet'), options);\n    const isTablet = useMediaQuery(theme.breakpoints.between('tablet', 'laptop'), options);\n    const isLaptop = useMediaQuery(theme.breakpoints.between('laptop', 'desktop'), options);\n    const isDesktop = useMediaQuery(theme.breakpoints.up('desktop'), options);\n\n    return { isMobile, isTablet, isLaptop, isDesktop };\n};\n","import { BeforeMaskedStateChangeStates } from 'react-input-mask';\n\nconst getIsStartNumber = (startSymbol: string): boolean => {\n    switch (startSymbol) {\n        case '8':\n            return true;\n        case '9':\n            return true;\n        default:\n            return false;\n    }\n};\n\nexport function beforeMaskedStateChange({ nextState, currentState }: BeforeMaskedStateChangeStates) {\n    let { value } = nextState;\n    let selection = nextState.selection;\n    const cursorPosition = selection ? selection.start : null;\n    const lengthWithPlusSeven = 30;\n    const lengthWithEightOrNine = 29;\n\n    const startValueWithPlusSeven = currentState.value.slice(4, 6) === '+7';\n\n    const startSymbol = currentState.value.slice(4, 5);\n\n    const isStartNumber = getIsStartNumber(startSymbol);\n\n    if (currentState.value.length === lengthWithPlusSeven && startValueWithPlusSeven) {\n        value = currentState.value.slice(4, 16);\n    }\n    if (currentState.value.length === lengthWithEightOrNine && isStartNumber) {\n        value = '+7' + currentState.value.slice(5, 15);\n    }\n    if (cursorPosition && !value.includes('_')) {\n        selection = { start: value.length, end: value.length };\n    }\n\n    return {\n        value,\n        selection,\n    };\n}\n","import React, { useState } from 'react';\nimport InputMask from 'react-input-mask';\n\nimport { FormControl, FormHelperText, InputBase, InputLabel, InputBaseProps } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { DeleteIcon, ShowPassIcon, HidePassIcon } from 'src/shared/icons';\nimport { colors } from 'src/theme';\n\nimport { beforeMaskedStateChange } from './utils';\n\ntype MyInputProps = InputBaseProps & {\n    id: string;\n    label?: string;\n    value?: string;\n    type: string;\n    mask?: string;\n    helperText?: string | boolean;\n    isClearable?: boolean;\n    onClear?: VoidFunction;\n    defaultMaskedValue?: string;\n};\n\nexport const CustomInput = ({\n    id,\n    label,\n    value,\n    type,\n    error,\n    helperText,\n    isClearable,\n    onClear,\n    mask,\n    onChange,\n    defaultMaskedValue = '',\n    ...rest\n}: MyInputProps) => {\n    const [isCapslockOn, setIsCapslockOn] = useState<boolean>(false);\n    const [isShowPassword, setShowPassword] = useState(false);\n    const theme = useTheme();\n    const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        setIsCapslockOn(e.getModifierState('CapsLock'));\n    };\n    const handleTogglePasswordClick = () => {\n        setShowPassword(!isShowPassword);\n    };\n\n    const passwordShowButton = isShowPassword ? (\n        <HidePassIcon data-testid={`${id}-hideIcon`} onClick={handleTogglePasswordClick} sx={{ cursor: 'pointer' }} />\n    ) : (\n        <ShowPassIcon data-testid={`${id}-showIcon`} onClick={handleTogglePasswordClick} sx={{ cursor: 'pointer' }} />\n    );\n\n    const endAdornmentAttributes =\n        value && isClearable && value !== defaultMaskedValue ? (\n            <DeleteIcon data-testid={`${id}-deleteIcon`} onMouseDown={onClear} sx={{ cursor: 'pointer' }} />\n        ) : !isClearable && type === 'password' ? (\n            passwordShowButton\n        ) : (\n            rest.endAdornment\n        );\n\n    const style = {\n        'label + &': {\n            marginTop: 3,\n        },\n        '&.MuiInputBase-root': {\n            [theme.breakpoints.down('tablet')]: {\n                fontSize: '14px',\n                lineHeight: '24px',\n            },\n            height: '44px',\n            borderRadius: '4px',\n            border: `1px solid ${colors.neutral400}`,\n            fontSize: 16,\n            padding: '10px 16px',\n            fontFamily: 'SF Pro Display, sans-serif',\n            '&.Mui-error': {\n                border: `1px solid ${colors.alert}`,\n            },\n            '&.Mui-focused': {\n                border: `1px solid ${colors.neutral600}`,\n                '&.Mui-error': {\n                    border: `1px solid ${colors.alert}`,\n                },\n            },\n        },\n    };\n\n    const combinedHelperText = helperText || (isCapslockOn && 'Включен CapsLock');\n    return mask ? (\n        <InputMask\n            mask={mask}\n            maskPlaceholder=\"_\"\n            alwaysShowMask={true}\n            onChange={onChange}\n            type={type}\n            beforeMaskedStateChange={type === 'tel' ? beforeMaskedStateChange : undefined}\n        >\n            <FormControl variant=\"standard\">\n                <InputLabel shrink={true} htmlFor={id}>\n                    {label}\n                </InputLabel>\n                <InputBase\n                    id={id}\n                    aria-describedby={`${id}-helper-text`}\n                    error={error}\n                    value={value || defaultMaskedValue}\n                    onKeyDown={handleKeyPress}\n                    {...rest}\n                    endAdornment={endAdornmentAttributes}\n                    inputProps={{ ...rest.inputProps }}\n                    sx={style}\n                />\n                <FormHelperText error={error} id={`${id}-helper-text`} data-testid={`${id}-helpText`}>\n                    {helperText}\n                </FormHelperText>\n            </FormControl>\n        </InputMask>\n    ) : (\n        <FormControl fullWidth={rest.fullWidth} variant=\"standard\">\n            <InputLabel shrink={true} htmlFor={id}>\n                {label}\n            </InputLabel>\n            <InputBase\n                id={id}\n                aria-describedby={`${id}-helper-text`}\n                value={value}\n                type={type === 'password' && isShowPassword ? 'text' : type}\n                onChange={onChange}\n                error={error || isCapslockOn}\n                onKeyDown={handleKeyPress}\n                {...rest}\n                endAdornment={endAdornmentAttributes}\n                inputProps={{ ...rest.inputProps }}\n                sx={style}\n                data-testid={`${id}-inputWrap`}\n            />\n            <FormHelperText error={error || isCapslockOn} id={`${id}-helper-text`} data-testid={`${id}-helpText`}>\n                {combinedHelperText}\n            </FormHelperText>\n        </FormControl>\n    );\n};\n","import { Box, Dialog, IconButton, Paper, Stack, Typography } from '@mui/material';\nimport errorImg from 'src/images/routesError/errorImg.png';\nimport { colors } from 'src/theme';\n\nimport { CloseIcon } from './icons';\n\nexport type WarningModalProps = {\n    message: string;\n    isOpen: boolean;\n    onClose: VoidFunction;\n};\nexport const WarningModal = ({ message, isOpen, onClose }: WarningModalProps) => {\n    return (\n        <Dialog sx={{ zIndex: 100000 }} onClose={onClose} open={isOpen}>\n            <Paper\n                elevation={0}\n                sx={{\n                    height: { tablet: '445px', mobile: 'auto' },\n                    width: { tablet: '416px', mobile: 'auto' },\n                    p: { tablet: '60px 37px', mobile: '60px 37px 50px' },\n                    borderRadius: '4px',\n                }}\n            >\n                <IconButton onClick={onClose} sx={{ position: 'absolute', right: '16px', top: '16px' }}>\n                    <CloseIcon fontSize=\"medium\" />\n                </IconButton>\n                <Stack spacing=\"24px\" alignItems=\"center\" justifyContent=\"center\">\n                    <Box\n                        component=\"img\"\n                        src={errorImg}\n                        sx={{ width: '168px', height: '176px', mb: { tablet: '0', mobile: '8px' } }}\n                    />\n                    <Stack\n                        spacing=\"8px\"\n                        alignItems=\"center\"\n                        sx={{ textAlign: 'center', color: colors.primary, whiteSpace: 'pre' }}\n                    >\n                        <Typography component=\"div\" variant=\"subtitle2Semibold\" sx={{ mb: { tablet: '8px' } }}>\n                            {message}\n                        </Typography>\n                        <Typography component=\"div\" variant=\"descriptionRegular\">\n                            {`Приносим свои извинения \\nза доставленные неудобства.`}\n                        </Typography>\n                    </Stack>\n                </Stack>\n            </Paper>\n        </Dialog>\n    );\n};\n","import type { SerializedError } from '@reduxjs/toolkit';\nimport type { FetchBaseQueryError } from '@reduxjs/toolkit/dist/query/fetchBaseQuery';\n\nexport const isServerError = (serverError: SerializedError | FetchBaseQueryError | undefined): boolean => {\n    return serverError\n        ? !!(\n              'status' in serverError &&\n              typeof serverError?.status === 'number' &&\n              serverError.status >= 500 &&\n              serverError.status <= 599\n          )\n        : false;\n};\n","import * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    const queryList = matchMedia(query);\n\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch(); // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n  return match;\n} // eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\n\n\nconst maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\n\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return () => {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\n\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme(); // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n\n  return match;\n}"],"names":["EditIcon","props","_jsx","SvgIcon","_objectSpread","children","width","height","viewBox","fill","xmlns","d","stroke","colors","strokeWidth","strokeLinecap","strokeLinejoin","ChangeEmail","_ref","oldEmail","onReturn","_useUpdEmailMutation","useUpdEmailMutation","_useUpdEmailMutation2","_slicedToArray","patchEmail","_useUpdEmailMutation3","isEmailUpdating","isLoading","isEmailSuccess","isSuccess","isEmailError","isError","formik","useFormik","initialValues","email","validationSchema","Yup","shape","max","required","notOneOf","emailValidationSchema","validateOnChange","validateOnBlur","onSubmit","values","setFieldError","useEffect","_jsxs","Stack","direction","spacing","alignItems","mt","sx","CustomInput","id","type","label","name","fullWidth","value","onChange","handleChange","isClearable","error","errors","helperText","onClear","resetForm","onFocus","onBlur","handleBlur","Button","variant","disabled","onClick","switchStyle","color","background","NotificationsSettingsBlock","theme","useTheme","_useMatchesScreen","useMatchesScreen","isMobile","isTablet","isLaptop","isLowerThanLaptop","_useState","useState","_useState2","isEditEmail","setIsEditEmail","_useState3","_useState4","emailSub","setEmailSub","_useState5","_useState6","smsSub","setSmsSub","_useState7","_useState8","pushSub","setPushSub","_useState9","_useState10","isErrorModalOpened","setIsErrorModalOpened","_useGetNotificationsQ","useGetNotificationsQuery","notifications","data","isFetching","_useUpdEmailNotificat","useUpdEmailNotificationsMutation","patchEmailNotifications","_useUpdSmsNotificatio","useUpdSmsNotificationsMutation","patchSmsNotifications","_useUpdPushNotificati","useUpdPushNotificationsMutation","patchPushNotifications","isNotificationsServerError","isServerError","emailSubscription","pushNotification","smsNotification","component","Typography","_defineProperty","breakpoints","down","fontSize","lineHeight","fontWeight","_Fragment","Box","display","gap","cursor","text","checked","sub","notificationStatus","map","item","Switch","disableRipple","WarningModal","message","isOpen","onClose","options","noSsr","useMediaQuery","between","isDesktop","up","beforeMaskedStateChange","nextState","currentState","selection","cursorPosition","start","startValueWithPlusSeven","slice","isStartNumber","startSymbol","getIsStartNumber","length","includes","end","_MuiInputBaseRoot","mask","_ref$defaultMaskedVal","defaultMaskedValue","rest","_objectWithoutProperties","_excluded","isCapslockOn","setIsCapslockOn","isShowPassword","setShowPassword","handleKeyPress","e","getModifierState","handleTogglePasswordClick","passwordShowButton","HidePassIcon","concat","ShowPassIcon","endAdornmentAttributes","DeleteIcon","onMouseDown","endAdornment","style","marginTop","border","combinedHelperText","InputMask","maskPlaceholder","alwaysShowMask","undefined","FormControl","InputLabel","shrink","htmlFor","InputBase","onKeyDown","inputProps","FormHelperText","Dialog","zIndex","open","Paper","elevation","tablet","mobile","p","borderRadius","IconButton","position","right","top","CloseIcon","justifyContent","src","errorImg","mb","textAlign","whiteSpace","serverError","status","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","supportMatchMedia","window","_React$useState","React","matches","_React$useState2","match","setMatch","useEnhancedEffect","active","queryList","updateMatch","addListener","removeListener","maybeReactUseSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","getServerSnapshot","_React$useMemo","mediaQueryList","notify","_React$useMemo2","getSnapshot","subscribe","queryInput","arguments","_getThemeProps","getThemeProps","_getThemeProps$defaul","_getThemeProps$matchM","_getThemeProps$ssrMat","replace","useMediaQueryImplementation"],"sourceRoot":""}