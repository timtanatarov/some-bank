{"version":3,"file":"static/js/314.368e8733.chunk.js","mappings":"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","sources":["components/MainPage/CardMenu/index.tsx","components/MainPage/CardMenu/utils.tsx","components/MainPage/Operations/index.tsx","components/MainPage/PopularPayments/PopularPayment.tsx","components/MainPage/PopularPayments/constants.tsx","components/MainPage/PopularPayments/index.tsx","components/MainPage/MainContent.tsx","components/MainPage/Operations/Operation.tsx","components/MainPage/Operations/constants.ts","shared/CurrencyTable.tsx"],"sourcesContent":["import { useState, useMemo } from 'react';\n\nimport { useAppSelector } from 'src/redux/hooks';\nimport { selectClientId } from 'src/redux/selectors';\n\nimport { Stack, Typography, Box, Link, Skeleton } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { ComingSoonModal } from 'src/shared/ComingSoonModal';\n\nimport { colors } from 'src/theme';\n\nimport { Slider } from 'src/shared/Slider';\nimport { Plate } from 'src/shared/Plate';\n\nimport { PaymentCard } from 'src/shared/cards/Payment';\n\nimport { useGetClientsCreditCardsQuery } from 'src/redux/apis/creditService';\nimport { useGetClientsDepositCardsQuery } from 'src/redux/apis/depositService';\n\nimport { getCardsData } from './utils';\n\nexport const CardMenu = () => {\n    const clientId = useAppSelector(selectClientId);\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const skeletons = useMemo(\n        () =>\n            [0, 0, 0, 0, 0].map((_, i) => (\n                <Skeleton sx={{ borderRadius: '16px' }} variant=\"rectangular\" key={i}>\n                    <PaymentCard\n                        type=\"\"\n                        currency=\"RUB\"\n                        currentBalance={0}\n                        cardNumber=\"\"\n                        expirationDate=\"\"\n                        paymentSystem=\"\"\n                    />\n                </Skeleton>\n            )),\n        []\n    );\n\n    const { data: depositCards, isLoading: depositCardsIsLoading } = useGetClientsDepositCardsQuery(clientId);\n    const { data: creditCards, isLoading: creditCardsIsLoading } = useGetClientsCreditCardsQuery(clientId);\n\n    const preparedCards = useMemo(\n        () => (depositCards && creditCards ? getCardsData(depositCards, creditCards) : []),\n        [depositCards, creditCards]\n    );\n\n    return (\n        <Stack spacing={{ laptop: '32px', tablet: '24px' }}>\n            <Box\n                sx={{\n                    margin: {\n                        tablet: '36px 36px 0 36px',\n                        mobile: '24px 24px 0 24px',\n                    },\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                }}\n            >\n                <Typography variant=\"bold24\" sx={{ color: colors.primary }}>\n                    Мои карты\n                </Typography>\n                <Link\n                    href=\"#\"\n                    onClick={handleOpen}\n                    underline=\"none\"\n                    sx={{ textAlign: 'right', color: colors.neutral600 }}\n                >\n                    <Typography variant=\"descriptionRegular\">Добавить</Typography>\n                </Link>\n            </Box>\n            <Box sx={{ minHeight: '196px', height: '1px' }}>\n                {!preparedCards.length ? (\n                    <Plate\n                        message=\"На данный момент у вас нет карт. Вы можете ознакомиться с картами и подать заявку на получение.\"\n                        sx={{ margin: '0 36px', borderRadius: '4px' }}\n                    />\n                ) : (\n                    <Slider>\n                        {depositCardsIsLoading || creditCardsIsLoading\n                            ? skeletons\n                            : preparedCards.map((item) => (\n                                  <Link component={RouterLink} to={`${item.id}`} key={item.id} underline=\"none\">\n                                      <PaymentCard\n                                          key={item.id}\n                                          type={item.type}\n                                          currency={item.currencyCode}\n                                          currentBalance={item.currentBalance}\n                                          cardNumber={item.cardNumber}\n                                          expirationDate={item.expirationDate}\n                                          paymentSystem={item.paymentSystem}\n                                      />\n                                  </Link>\n                              ))}\n                    </Slider>\n                )}\n            </Box>\n            <ComingSoonModal isOpen={open} onClose={handleClose} />\n        </Stack>\n    );\n};\n","import { DepositCardInfo } from 'src/redux/apis/depositService/types';\nimport { CreditCardInfo } from 'src/redux/apis/creditService/types';\n\nexport const getCardsData = (debit: DepositCardInfo[], credit: CreditCardInfo[]) => {\n    const depositCards = debit.map(\n        ({ currencyCode, balance: currentBalance, cardNumber, expirationDate, paymentSystem }, i) => ({\n            id: String(i),\n            type: 'debit',\n            currencyCode,\n            currentBalance,\n            cardNumber,\n            expirationDate,\n            paymentSystem,\n        })\n    );\n\n    const creditCards = credit.map(\n        ({ currencyCode, balance: currentBalance, cardNumber, expirationDate, paymentSystem }, i) => ({\n            id: String(i),\n            type: 'credit',\n            currencyCode,\n            currentBalance,\n            cardNumber,\n            expirationDate,\n            paymentSystem,\n        })\n    );\n\n    const currencies = ['RUB', 'EUR', 'USD', 'CNY'];\n\n    const sortedData = [...depositCards, ...creditCards].sort((a, b) => {\n        if (a.currencyCode === b.currencyCode) return a.expirationDate > b.expirationDate ? 1 : -1;\n        return currencies.indexOf(a.currencyCode) - currencies.indexOf(b.currencyCode);\n    });\n\n    return sortedData;\n};\n","import { useState, useMemo } from 'react';\nimport { Stack, Box, Typography, Link, Skeleton } from '@mui/material';\nimport { ComingSoonModal } from 'src/shared/ComingSoonModal';\n\nimport { colors } from 'src/theme';\n\nimport { Operation } from './Operation';\n\nimport { operationsData } from './constants';\n\nconst RESULTS_LIMIT = 6;\n\nexport const OperationsHistory = () => {\n    const isLoading = false;\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const skeletons = useMemo(\n        () =>\n            [0, 0, 0, 0, 0].map((_, i) => (\n                <Skeleton sx={{ borderRadius: '4px', width: '100%', height: '56px' }} variant=\"rectangular\" key={i} />\n            )),\n        []\n    );\n\n    return (\n        <Stack spacing=\"40px\" sx={{ padding: '40px 36px' }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"bold24\" sx={{ color: colors.primary }}>\n                    История операций\n                </Typography>\n                <Link\n                    href=\"#\"\n                    onClick={handleOpen}\n                    underline=\"none\"\n                    sx={{ textAlign: 'right', color: colors.neutral600 }}\n                >\n                    <Typography variant=\"descriptionRegular\">Еще</Typography>\n                </Link>\n            </Box>\n            <Stack spacing=\"8px\">\n                {isLoading\n                    ? skeletons\n                    : operationsData\n                          .slice(0, RESULTS_LIMIT)\n                          .map((item, index) => (\n                              <Operation\n                                  key={index}\n                                  date={item.createadAt}\n                                  payeeId={item.payeeId}\n                                  sum={item.sum}\n                                  typeName={item.typeName}\n                                  currencyCode={item.currencyCode}\n                              />\n                          ))}\n            </Stack>\n            <ComingSoonModal isOpen={open} onClose={handleClose} />\n        </Stack>\n    );\n};\n","import { FC } from 'react';\n\nimport { Box, Button, Grid, Typography, useTheme } from '@mui/material';\n\nimport { colors } from 'src/theme';\n\ntype Props = {\n    title: string;\n    icon: React.ReactNode;\n    onClick: () => void;\n};\n\nexport const PopularPayment: FC<Props> = ({ title, onClick, icon }) => {\n    const theme = useTheme();\n    return (\n        <Grid\n            item={true}\n            key={title}\n            mobile={6}\n            tablet={4}\n            laptop={4}\n            desktop={4}\n            sx={{\n                width: 'auto',\n                borderRadius: '4px',\n            }}\n        >\n            <Button\n                onClick={onClick}\n                variant=\"textButton\"\n                key={title}\n                sx={{\n                    width: '100%',\n                    height: '116px',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    background: colors.neutral100,\n                    p: '16px',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    textDecoration: 'none',\n                    '&:hover': {\n                        textDecoration: 'none',\n                        background: colors.neutral100,\n                    },\n                    [theme.breakpoints.down('laptop')]: {\n                        minWidth: '135px',\n                        maxWidth: 'none',\n                        height: '120px',\n                    },\n                }}\n            >\n                <Box sx={{ color: colors.secondary600 }}>{icon}</Box>\n                <Box sx={{ display: 'flex', alignItems: 'center', flexGrow: 1 }}>\n                    <Typography sx={{ textAlign: 'center' }}>{title}</Typography>\n                </Box>\n            </Button>\n        </Grid>\n    );\n};\n","import { CreditCardIcon, CreditsIcon, EthernetIcon, HomeIcon, MobilePhoneIcon, UserIcon } from 'src/shared/icons';\n\nexport const paymentsData = [\n    { icon: <MobilePhoneIcon />, title: 'Мобильная связь' },\n    { icon: <EthernetIcon />, title: 'Интернет' },\n    { icon: <HomeIcon />, title: 'Оплата ЖКХ' },\n    { icon: <CreditsIcon />, title: 'Оплатить кредит' },\n    { icon: <UserIcon />, title: 'Налоги и штрафы' },\n    { icon: <CreditCardIcon />, title: 'Перевод на карту' },\n];\n","import { useMemo, useState } from 'react';\n\nimport { Box, Grid, Typography, Skeleton, useTheme } from '@mui/material';\n\nimport { ComingSoonModal } from 'src/shared/ComingSoonModal';\n\nimport { PopularPayment } from './PopularPayment';\n\nimport { paymentsData } from './constants';\n\nexport const PopularPayments = () => {\n    const theme = useTheme();\n    const isLoading = false;\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleOpen = () => {\n        setIsOpen(true);\n    };\n\n    const handleClose = () => {\n        setIsOpen(false);\n    };\n\n    const skeletons = useMemo(\n        () =>\n            [0, 0, 0, 0, 0, 0].map((_, i) => (\n                <Grid item={true} key={i} mobile={6} tablet={4} laptop={4} desktop={4}>\n                    <Skeleton\n                        sx={{\n                            width: '100%',\n                            height: '116px',\n                            [theme.breakpoints.down('laptop')]: {\n                                minWidth: '135px',\n                                maxWidth: 'none',\n                                height: '120px',\n                            },\n                        }}\n                        variant=\"rectangular\"\n                    />\n                </Grid>\n            )),\n        [theme.breakpoints]\n    );\n\n    return (\n        <Box>\n            <Typography variant=\"h5\" sx={{ mb: '32px' }}>\n                Популярные платежи\n            </Typography>\n            <Grid\n                container={true}\n                rowSpacing={{ mobile: '8px', tablet: '16px', laptop: '14px', desktop: '14px' }}\n                columnSpacing={{ mobile: '16px', tablet: '14px', laptop: '14px', desktop: '14px' }}\n            >\n                {isLoading\n                    ? skeletons\n                    : paymentsData.map((item) => (\n                          <PopularPayment key={item.title} onClick={handleOpen} title={item.title} icon={item.icon} />\n                      ))}\n            </Grid>\n            <ComingSoonModal isOpen={isOpen} onClose={handleClose} />\n        </Box>\n    );\n};\n","import { Box, Paper, Typography, useTheme } from '@mui/material';\n\nimport { CurrencyTable } from 'src/shared/CurrencyTable';\n\nimport { CardMenu } from './CardMenu';\nimport { OperationsHistory } from './Operations';\nimport { PopularPayments } from './PopularPayments';\n\nexport const MainContent = () => {\n    const theme = useTheme();\n    return (\n        <Box\n            sx={{\n                height: '100%',\n                display: 'grid',\n                flex: '1 1 auto',\n                gridTemplateColumns: 'auto minmax(400px, 448px)',\n                gridTemplateRows: '1fr auto',\n                gap: '24px',\n                padding: '24px 56px 46px 56px',\n                [theme.breakpoints.down('laptop')]: {\n                    padding: '24px 56px 44px',\n                    gridTemplateColumns: '1fr',\n                    gridTemplateRows: 'auto',\n                },\n                [theme.breakpoints.down('tablet')]: {\n                    padding: '24px 16px 44px',\n                    minWidth: '328px',\n                },\n            }}\n        >\n            <Paper\n                elevation={0}\n                sx={{\n                    minWidth: '343px',\n                    gridRow: 'span 2',\n                    height: { laptop: 'auto', mobile: 'fit-content' },\n                }}\n            >\n                <CardMenu />\n                <OperationsHistory />\n            </Paper>\n            <Paper elevation={0} sx={{ padding: { tablet: '36px', mobile: '24px' } }}>\n                <PopularPayments />\n            </Paper>\n            <Paper\n                elevation={0}\n                sx={{\n                    padding: { tablet: '36px', mobile: '24px' },\n                    minWidth: '300px',\n                }}\n            >\n                <Typography variant=\"bold24\" component=\"h5\" sx={{ mb: { laptop: '32px', mobile: '24px' } }}>\n                    Курсы валют\n                </Typography>\n                <CurrencyTable variant=\"small\" />\n            </Paper>\n        </Box>\n    );\n};\n","import { Box, Typography, Stack, useTheme } from '@mui/material';\nimport { FC } from 'react';\nimport { currencyData } from 'src/services/exchangeRatesService/currencyData';\n\nimport { colors } from 'src/theme';\n\nimport { operationTypeImg, operationTypeLabel, operationTypeSum } from '../constants';\nimport { balanceFormatter, operationDateFormatter, operationTitleFormatter } from '../utils';\n\nexport type OperationProps = {\n    date: string;\n    payeeId: string;\n    sum: number;\n    typeName: string;\n    currencyCode: string;\n};\n\nexport const Operation: FC<OperationProps> = ({ date, payeeId, sum, typeName, currencyCode }) => {\n    const theme = useTheme();\n    return (\n        <Box\n            sx={{\n                padding: {\n                    tablet: '0 0 10px',\n                    mobile: '0 0 8px',\n                },\n                display: 'flex',\n                justifyContent: 'space-between',\n                '&:not(:last-child)': {\n                    borderBottom: `1px solid ${colors.neutral200}`,\n                },\n            }}\n        >\n            <Stack direction=\"row\" spacing={1}>\n                <Box\n                    component=\"img\"\n                    src={operationTypeImg[typeName as keyof typeof operationTypeImg]}\n                    alt=\"operation type\"\n                    sx={{ alignSelf: 'flex-start' }}\n                />\n                <Stack>\n                    <Typography\n                        variant=\"descriptionRegular\"\n                        sx={{\n                            color: colors.primary,\n                            [theme.breakpoints.down('tablet')]: {\n                                width: '154px',\n                                fontSize: '14px',\n                                lineHeight: '20px',\n                                overflow: 'hidden',\n                                textOverflow: 'ellipsis',\n                                whiteSpace: 'nowrap',\n                            },\n                        }}\n                    >\n                        {operationTitleFormatter(payeeId, typeName)}\n                    </Typography>\n                    <Typography\n                        variant=\"labelRegular12\"\n                        sx={{\n                            fontSize: '14px',\n                            lineHeight: '20px',\n                            color: colors.neutral600,\n                            [theme.breakpoints.down('tablet')]: { fontSize: '12px', lineHeight: '16px' },\n                        }}\n                    >\n                        {operationTypeLabel[typeName as keyof typeof operationTypeLabel]}\n                    </Typography>\n                </Stack>\n            </Stack>\n            <Stack sx={{ alignItems: 'flex-end' }}>\n                <Stack\n                    direction=\"row\"\n                    spacing={1}\n                    sx={{ color: typeName === 'incoming' ? colors.secondary600 : colors.primary }}\n                >\n                    <Typography variant=\"descriptionSemiBold\">\n                        {operationTypeSum[typeName as keyof typeof operationTypeSum]}\n                        {balanceFormatter(sum, 'operation')}\n                        {' ' + currencyData[currencyCode as keyof typeof currencyData].symbol}\n                    </Typography>\n                </Stack>\n                <Typography\n                    variant=\"labelRegular12\"\n                    sx={{\n                        fontSize: '14px',\n                        lineHeight: '20px',\n                        color: colors.neutral600,\n                        textAlign: 'right',\n                        whiteSpace: 'nowrap',\n                        [theme.breakpoints.down('tablet')]: {\n                            fontSize: '12px',\n                            lineHeight: '16px',\n                        },\n                    }}\n                >\n                    {operationDateFormatter(date)}\n                </Typography>\n            </Stack>\n        </Box>\n    );\n};\n","export type mockOperationsData = {\n    transferOrderID: string;\n    createadAt: string;\n    purpose: string;\n    payeeId: string;\n    sum: number;\n    completedAt: string;\n    status: string;\n    typeName: string;\n    currencyCode: string;\n}[];\n\nexport const operationsData: mockOperationsData = [\n    {\n        transferOrderID: '0',\n        createadAt: '2023-02-09 07:01:54+00',\n        purpose: 'own account transfer',\n        payeeId: 'internal',\n        sum: 4600,\n        completedAt: '2022-12-08 7:01:54+00',\n        status: 'completed',\n        typeName: 'internal',\n        currencyCode: 'RUB',\n    },\n    {\n        transferOrderID: '1',\n        createadAt: '2023-02-08 05:56:54+00',\n        purpose: 'interbank transfer',\n        payeeId: 'Алексей Алексеев',\n        sum: 10000,\n        completedAt: '2022-12-08 05:56:54+00',\n        status: 'completed',\n        typeName: 'incoming',\n        currencyCode: 'RUB',\n    },\n    {\n        transferOrderID: '2',\n        createadAt: '2023-01-15 16:30:54+00',\n        purpose: 'interbank transfer',\n        payeeId: 'withdraw',\n        sum: 5000,\n        completedAt: '2022-12-07 16:30:54+00',\n        status: 'completed',\n        typeName: 'withdraw',\n        currencyCode: 'RUB',\n    },\n\n    {\n        transferOrderID: '3',\n        createadAt: '2022-06-26 17:09:54+00',\n        purpose: 'purchase',\n        payeeId: 'Dodo Pizza',\n        sum: 2799,\n        completedAt: '2022-06-26 17:09:54+00',\n        status: 'completed',\n        typeName: 'purchase',\n        currencyCode: 'RUB',\n    },\n    {\n        transferOrderID: '4',\n        createadAt: '2022-06-26: 17:09:54+00',\n        purpose: 'purchase',\n        payeeId: 'Dodo Pizza',\n        sum: 2099,\n        completedAt: '2022-06-26 17:09:54+00',\n        status: 'completed',\n        typeName: 'purchase',\n        currencyCode: 'RUB',\n    },\n    {\n        transferOrderID: '5',\n        createadAt: '2022-06-26 17:09:54+00',\n        purpose: 'purchase',\n        payeeId: 'Dodo Pizza',\n        sum: 584,\n        completedAt: '2022-06-26 17:09:54+00',\n        status: 'completed',\n        typeName: 'purchase',\n        currencyCode: 'RUB',\n    },\n\n    {\n        transferOrderID: '6',\n        createadAt: '2022-06-26 17:09:54+00',\n        purpose: 'purchase',\n        payeeId: 'Dodo Pizza',\n        sum: 799,\n        completedAt: '2022-06-26 17:09:54+00',\n        status: 'completed',\n        typeName: 'purchase',\n        currencyCode: 'RUB',\n    },\n    {\n        transferOrderID: '7',\n        createadAt: '2022-06-26 17:09:54+00',\n        purpose: 'purchase',\n        payeeId: 'Dodo Pizza',\n        sum: 1499,\n        completedAt: '2022-06-26 17:09:54+00',\n        status: 'completed',\n        typeName: 'purchase',\n        currencyCode: 'RUB',\n    },\n    {\n        transferOrderID: '8',\n        createadAt: '2022-06-26 17:09:54+00',\n        purpose: 'purchase',\n        payeeId: 'Dodo Pizza',\n        sum: 1299,\n        completedAt: '2022-06-26 17:09:54+00',\n        status: 'completed',\n        typeName: 'purchase',\n        currencyCode: 'RUB',\n    },\n    {\n        transferOrderID: '8',\n        createadAt: '2022-06-26 17:09:54+00',\n        purpose: 'purchase',\n        payeeId: 'Dodo Pizza',\n        sum: 967,\n        completedAt: '2022-06-26 17:09:54+00',\n        status: 'completed',\n        typeName: 'purchase',\n        currencyCode: 'RUB',\n    },\n    {\n        transferOrderID: '9',\n        createadAt: '2023-01-26 17:09:54+00',\n        purpose: 'purchase',\n        payeeId: 'Спортмастер',\n        sum: 32799,\n        completedAt: '2022-06-26 17:09:54+00',\n        status: 'completed',\n        typeName: 'purchase',\n        currencyCode: 'RUB',\n    },\n    {\n        transferOrderID: '10',\n        createadAt: '2022-06-26 17:09:54+00',\n        purpose: 'purchase',\n        payeeId: 'Лента',\n        sum: 5555,\n        completedAt: '2022-06-26 17:09:54+00',\n        status: 'completed',\n        typeName: 'purchase',\n        currencyCode: 'RUB',\n    },\n    {\n        transferOrderID: '11',\n        createadAt: '2022-06-26 17:09:54+00',\n        purpose: 'purchase',\n        payeeId: 'Пятерочка',\n        sum: 1999,\n        completedAt: '2022-06-26 17:09:54+00',\n        status: 'completed',\n        typeName: 'purchase',\n        currencyCode: 'RUB',\n    },\n    {\n        transferOrderID: '11',\n        createadAt: '2022-06-26 17:09:54+00',\n        purpose: 'purchase',\n        payeeId: 'Магнит',\n        sum: 1299,\n        completedAt: '2022-06-26 17:09:54+00',\n        status: 'completed',\n        typeName: 'purchase',\n        currencyCode: 'RUB',\n    },\n];\n","import { FC, useMemo } from 'react';\n\nimport { Table, TableHead, TableRow, TableBody, TableCell, Typography, Box, Skeleton, useTheme } from '@mui/material';\n\nimport { currencyData } from 'src/services/exchangeRatesService/currencyData';\n\nimport { ArrowUpIcon, ArrowDownIcon } from 'src/shared/icons';\nimport { useGetCurrenciesQuery } from 'src/redux/apis/currencies';\n\nimport { colors } from 'src/theme';\n\nimport { Plate } from './Plate';\n\ntype CurrencyTableProps = {\n    variant?: 'wide' | 'small';\n};\n\nexport const CurrencyTable: FC<CurrencyTableProps> = ({ variant = 'wide' }) => {\n    const theme = useTheme();\n    const { data, isLoading, isError } = useGetCurrenciesQuery(undefined, {\n        selectFromResult: ({ data, isSuccess, isLoading, isError }) => ({\n            data: data\n                ? data\n                      .filter((el) => el.currencyCode in currencyData)\n                      .sort(\n                          (a, b) =>\n                              ['USD', 'EUR', 'CNY'].indexOf(a.currencyCode) -\n                              ['USD', 'EUR', 'CNY'].indexOf(b.currencyCode)\n                      )\n                : undefined,\n            isSuccess,\n            isLoading,\n            isError,\n        }),\n    });\n\n    const skeletons = useMemo(\n        () =>\n            [0, 0, 0].map((_, i) => (\n                <Skeleton\n                    data-cy={`CurrencyTable-skeleton${i}`}\n                    sx={{ width: '100%', height: '48px' }}\n                    key={i}\n                    component=\"div\"\n                />\n            )),\n        []\n    );\n\n    if (isLoading) {\n        return <Box>{skeletons}</Box>;\n    }\n\n    if (isError || !data || !data?.length) {\n        return (\n            <Plate sx={{ height: '50px', border: `1px solid ${colors.alert}` }} message=\"Сервис временно недоступен\" />\n        );\n    }\n\n    const renderPriceCell = (newPrice: number, oldPrice: number) => (\n        <Box\n            sx={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: '7px',\n                justifyContent: 'space-between',\n            }}\n        >\n            <Typography variant=\"descriptionSemiBold\">{newPrice.toFixed(2)}</Typography>\n            {newPrice >= oldPrice ? (\n                <ArrowUpIcon sx={{ color: colors.secondary600 }} />\n            ) : (\n                <ArrowDownIcon sx={{ color: colors.alert }} />\n            )}\n        </Box>\n    );\n\n    return (\n        <Table>\n            <TableHead>\n                <TableRow\n                    sx={{\n                        borderColor: 'transparent',\n                        '& :first-of-type': { width: '55%' },\n                        '& .MuiTableCell-root': {\n                            padding: '4px 0px',\n                        },\n                        '& > th': {\n                            border: 'none',\n                        },\n                    }}\n                >\n                    {['Валюта', 'Покупка', 'Продажа'].map((el) => (\n                        <TableCell key={el}>\n                            <Typography variant=\"descriptionRegular\" sx={{ color: colors.neutral600 }}>\n                                {el}\n                            </Typography>\n                        </TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n            <TableBody\n                sx={{\n                    '& td': {\n                        borderBottom: 'none',\n                    },\n                }}\n            >\n                {data?.map((el) => (\n                    <TableRow\n                        key={el.currencyCode}\n                        sx={{\n                            '& .MuiTableCell-root': {\n                                padding: {\n                                    tablet: `4px ${variant === 'wide' ? '42px' : '21px'} 4px 0px`,\n                                    mobile: '4px 8px 4px 0',\n                                },\n                                borderBottom: {\n                                    laptop: `1px solid ${colors.neutral200}`,\n                                    mobile: 'none',\n                                },\n                                '&:last-of-type': {\n                                    pr: '0px',\n                                },\n                            },\n                        }}\n                    >\n                        <TableCell>\n                            <Box sx={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\n                                <Box\n                                    component=\"img\"\n                                    src={currencyData[el.currencyCode as keyof typeof currencyData].icon}\n                                />\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        alignItems: variant === 'wide' ? 'center' : 'start',\n                                        columnGap: '10px',\n                                        flexDirection: variant === 'wide' ? 'row' : 'column',\n                                    }}\n                                >\n                                    <Typography variant=\"descriptionSemiBold\" sx={{ color: '#212529', mr: '6px' }}>\n                                        {el.currencyCode}\n                                    </Typography>\n                                    <Typography\n                                        variant=\"labelRegular12\"\n                                        sx={{\n                                            color: '#212529',\n                                            [theme.breakpoints.down('tablet')]: {\n                                                width: '90px',\n                                                overflow: 'hidden',\n                                                textOverflow: 'ellipsis',\n                                                whiteSpace: 'nowrap',\n                                            },\n                                        }}\n                                    >\n                                        {currencyData[el.currencyCode as keyof typeof currencyData].name}\n                                    </Typography>\n                                </Box>\n                            </Box>\n                        </TableCell>\n                        <TableCell>{renderPriceCell(el.buyingRateNew, el.buyingRateOld)}</TableCell>\n                        <TableCell>{renderPriceCell(el.sellingRateNew, el.sellingRateOld)}</TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    );\n};\n"],"names":["CardMenu","clientId","useAppSelector","selectClientId","_useState","useState","_useState2","_slicedToArray","open","setOpen","skeletons","useMemo","map","_","i","_jsx","Skeleton","sx","borderRadius","variant","children","PaymentCard","type","currency","currentBalance","cardNumber","expirationDate","paymentSystem","_useGetClientsDeposit","useGetClientsDepositCardsQuery","depositCards","data","depositCardsIsLoading","isLoading","_useGetClientsCreditC","useGetClientsCreditCardsQuery","creditCards","creditCardsIsLoading","preparedCards","debit","credit","_ref","currencyCode","balance","id","String","_ref2","currencies","concat","_toConsumableArray","sort","a","b","indexOf","getCardsData","_jsxs","Stack","spacing","laptop","tablet","Box","margin","mobile","display","justifyContent","alignItems","Typography","color","colors","Link","href","onClick","underline","textAlign","minHeight","height","length","Slider","item","component","RouterLink","to","Plate","message","ComingSoonModal","isOpen","onClose","OperationsHistory","width","padding","operationsData","index","Operation","date","createadAt","payeeId","sum","typeName","PopularPayment","title","icon","theme","useTheme","Grid","desktop","Button","_defineProperty","flexDirection","background","p","textDecoration","breakpoints","down","minWidth","maxWidth","flexGrow","paymentsData","MobilePhoneIcon","EthernetIcon","HomeIcon","CreditsIcon","UserIcon","CreditCardIcon","PopularPayments","setIsOpen","handleOpen","mb","container","rowSpacing","columnSpacing","MainContent","flex","gridTemplateColumns","gridTemplateRows","gap","Paper","elevation","gridRow","CurrencyTable","borderBottom","direction","src","operationTypeImg","alt","alignSelf","fontSize","lineHeight","overflow","textOverflow","whiteSpace","operationTitleFormatter","operationTypeLabel","operationTypeSum","balanceFormatter","currencyData","symbol","operationDateFormatter","transferOrderID","purpose","completedAt","status","_ref$variant","_useGetCurrenciesQuer","useGetCurrenciesQuery","undefined","selectFromResult","isSuccess","isError","filter","el","border","renderPriceCell","newPrice","oldPrice","toFixed","ArrowUpIcon","ArrowDownIcon","Table","TableHead","TableRow","borderColor","TableCell","TableBody","pr","columnGap","mr","name","buyingRateNew","buyingRateOld","sellingRateNew","sellingRateOld"],"sourceRoot":""}