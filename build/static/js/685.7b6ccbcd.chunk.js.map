{"version":3,"file":"static/js/685.7b6ccbcd.chunk.js","mappings":"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","sources":["shared/Congrats.tsx","shared/Stepper/Connector.tsx","shared/Stepper/StepIcon.tsx","shared/Stepper/index.tsx","components/IndexPage/StepwiseFormContainer.tsx","shared/CreatePasswordForm/constants.ts","shared/CreatePasswordForm/index.tsx","shared/SmsCodeForm/SmsCodeInput.tsx","shared/SmsCodeForm/SmsTimer.tsx","shared/SmsCodeForm/index.tsx","components/IndexPage/ResetPasswordBlock/PasportIdForm/constants.ts","components/IndexPage/ResetPasswordBlock/constants.tsx","components/IndexPage/ResetPasswordBlock/PasportIdForm/index.tsx","components/IndexPage/ResetPasswordBlock/index.tsx","components/IndexPage/Carousel/CallToAction.tsx","components/IndexPage/Carousel/index.tsx","components/IndexPage/LoginForm/constants.ts","components/IndexPage/LoginForm/index.tsx","components/IndexPage/DownloadAppBlock.tsx","components/IndexPage/constants.ts","shared/ResidenceRadio.tsx","components/IndexPage/RegistrationBlock/PersonalInfoForm/constants.ts","components/IndexPage/RegistrationBlock/constants.ts","components/IndexPage/RegistrationBlock/PersonalInfoForm/index.tsx","components/IndexPage/RegistrationBlock/UserPhoneCheckForm/Agreement.tsx","components/IndexPage/RegistrationBlock/UserPhoneCheckForm/index.tsx","components/IndexPage/RegistrationBlock/index.tsx","components/IndexPage/index.tsx","shared/BackArrowButton.tsx","shared/ControlQuestion/constants.ts","shared/ControlQuestion/utils.ts","shared/ControlQuestion/index.tsx","shared/CustomInput/utils.ts","shared/CustomInput/index.tsx","shared/SwitchDots/Dot.tsx","shared/SwitchDots/index.tsx","hooks/useEvent.ts","utils/inputFormatters.ts","utils/validators.ts"],"sourcesContent":["import { FC } from 'react';\nimport { Box, Button, Stack, Typography } from '@mui/material';\n\nimport CongratsImg from 'src/images/resetPassImages/Congrats.png';\nimport { useAppDispatch } from 'src/redux/hooks';\nimport { clearAllResetData } from 'src/redux/slices/resetPass';\n\ntype CongratsProps = { title: string; bodyText: string; buttonText: string; onClose: VoidFunction };\n\nexport const Congrats: FC<CongratsProps> = ({ title, bodyText, buttonText, onClose }) => {\n    const dispatch = useAppDispatch();\n    const handleSuccessButton = () => {\n        dispatch(clearAllResetData());\n        onClose();\n    };\n\n    return (\n        <Stack spacing={4} sx={{ display: 'flex', alignItems: 'center' }}>\n            <Box\n                component=\"img\"\n                src={CongratsImg}\n                alt=\"congrats\"\n                sx={{\n                    ml: '14px',\n                    width: '188px',\n                    height: '196px',\n                }}\n            />\n            <Stack spacing={2} sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\n                <Typography variant=\"subtitle2Semibold\">{title}</Typography>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        width: '78%',\n                    }}\n                >\n                    <Typography variant=\"descriptionRegular\" sx={{ textAlign: 'center' }}>\n                        {bodyText}\n                    </Typography>\n                </Box>\n            </Stack>\n            <Button fullWidth={true} variant=\"primary\" onClick={handleSuccessButton}>\n                {buttonText}\n            </Button>\n        </Stack>\n    );\n};\n","import { styled } from '@mui/material';\nimport StepConnector, { stepConnectorClasses } from '@mui/material/StepConnector';\nimport { theme, colors } from 'src/theme';\n\nexport const Connector = styled(StepConnector)(({ left, right }: { left?: string; right?: string }) => ({\n    [`&.${stepConnectorClasses.alternativeLabel}`]: {\n        left: `calc(-50% + ${left})`,\n        right: `calc(50% + ${right})`,\n        height: '2px',\n        color: colors.neutral200,\n        border: 'none',\n        span: {\n            borderColor: colors.neutral200,\n        },\n        [theme.breakpoints.down('tablet')]: {\n            width: '99px',\n            left: 'calc(-50% + -34px)',\n        },\n    },\n    [`&.${stepConnectorClasses.active}`]: {\n        [`& .${stepConnectorClasses.line}`]: {\n            borderColor: colors.secondary200,\n            color: colors.secondary200,\n            span: {\n                borderColor: colors.secondary200,\n                color: colors.secondary200,\n            },\n        },\n    },\n    [`&.${stepConnectorClasses.completed}`]: {\n        [`& .${stepConnectorClasses.line}`]: {\n            borderColor: colors.secondary200,\n            color: colors.secondary200,\n            span: {\n                borderColor: colors.secondary200,\n                color: colors.secondary200,\n            },\n        },\n    },\n    [`& .${stepConnectorClasses.line}`]: {\n        borderColor: colors.neutral200,\n        span: {\n            borderColor: colors.neutral200,\n        },\n    },\n}));\n","import { Box, styled } from '@mui/material';\nimport { StepIconProps } from '@mui/material/StepIcon';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\n\nimport { colors } from 'src/theme';\n\nconst StepIconRoot = styled('div')<{ ownerState: { active?: boolean } }>(({ ownerState }) => ({\n    color: colors.neutral200,\n    ...(ownerState.active && {\n        color: '#A6D7AB',\n    }),\n    '& .StepIcon-completedIcon': {\n        color: '#A6D7AB',\n        width: 20,\n        height: 20,\n    },\n    '& .StepIcon-circle': {\n        marginTop: '4px',\n        width: 16,\n        height: 16,\n        borderRadius: '50%',\n        backgroundColor: 'currentColor',\n    },\n}));\n\nexport const StepIcon = ({ active, completed, className }: StepIconProps) => {\n    return (\n        <StepIconRoot ownerState={{ active }} className={className}>\n            {completed ? (\n                <CheckCircleIcon className=\"StepIcon-completedIcon\" viewBox=\"2 2 20 20\" />\n            ) : (\n                <Box className=\"StepIcon-circle\" />\n            )}\n        </StepIconRoot>\n    );\n};\n","import React, { memo } from 'react';\nimport { Stepper as MuiStepper, Step, StepLabel } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { colors } from 'src/theme';\n\nimport { Connector } from './Connector';\n\nimport { StepIcon } from './StepIcon';\n\ntype StepperProps = {\n    'data-testid'?: string;\n    activeStep: number;\n    gap?: string;\n    connectorLeft?: string;\n    connectorRight?: string;\n    stepData: {\n        step: number;\n        label: string;\n    }[];\n};\n\nexport const Stepper = memo(\n    ({ 'data-testid': dataTestId, activeStep, gap, connectorLeft, connectorRight, stepData }: StepperProps) => {\n        const theme = useTheme();\n        return (\n            <MuiStepper\n                data-testid={dataTestId}\n                activeStep={activeStep}\n                alternativeLabel={true}\n                connector={<Connector left={connectorLeft} right={connectorRight} />}\n                sx={{\n                    width: '100%',\n                    padding: '0',\n                    justifyContent: 'space-between',\n                    gap: { gap },\n                    [theme.breakpoints.down('tablet')]: {\n                        columnGap: '51px',\n                    },\n                }}\n            >\n                {stepData.map((item) => (\n                    <Step data-testid={`${dataTestId}-step-${item.step}`} key={item.label} sx={{ width: '80px' }}>\n                        <StepLabel\n                            StepIconComponent={StepIcon}\n                            sx={{\n                                '.MuiStepLabel-labelContainer': {\n                                    width: '80px',\n                                },\n                                '.MuiStepLabel-label.MuiStepLabel-alternativeLabel': {\n                                    marginTop: '8px',\n                                    height: '24px',\n                                    width: '80px',\n                                    lineHeight: '1',\n                                    fontFamily: 'SF Pro Text',\n                                    fontWeight: '400',\n                                    fontSize: '12px',\n                                    color: colors.neutral600,\n                                },\n                                '.MuiStepLabel-label': {\n                                    height: '24px',\n                                    lineHeight: '1',\n                                    fontFamily: 'SF Pro Text',\n                                    fontWeight: '400',\n                                    fontSize: '12px',\n                                    marginTop: '8px',\n                                    color: colors.neutral600,\n                                },\n                                '.MuiStepLabel-label.Mui-active': {\n                                    color: colors.primary,\n                                    marginTop: '8px',\n                                },\n                                '.MuiStepLabel-label.Mui-completed': {\n                                    marginTop: '0',\n                                    color: colors.primary,\n                                },\n                            }}\n                        >\n                            {item.label}\n                        </StepLabel>\n                    </Step>\n                ))}\n            </MuiStepper>\n        );\n    }\n);\n","import { Stack, Typography } from '@mui/material';\n\nimport { stepDataCLient, stepDataNotCLient } from './RegistrationBlock/constants';\n\nimport { stepData } from './ResetPasswordBlock/constants';\n\nexport type ExtraInfo = {\n    mobilePhone: string;\n    currentBlock: string;\n};\n\ntype StepwiseFormContainerProps = {\n    stepData: typeof stepData[number] | typeof stepDataNotCLient[number] | typeof stepDataCLient[number];\n    onContinue: (value: {}) => void;\n    errorMessage?: string;\n    extraInfo?: ExtraInfo;\n};\n\nexport const StepwiseFormContainer = ({\n    stepData,\n    onContinue,\n    extraInfo,\n    errorMessage,\n}: StepwiseFormContainerProps) => {\n    const FormComponent = stepData.component;\n    return (\n        <Stack spacing={3}>\n            <Typography variant=\"descriptionSemiBold\">{stepData.stepInfo}</Typography>\n            <FormComponent errorMessage={errorMessage} onContinue={onContinue} extraInfo={extraInfo} />\n        </Stack>\n    );\n};\n","import * as Yup from 'yup';\nimport { passwordSchema } from 'src/utils/validators';\n\nexport const CreatePasswordValidSchema = Yup.object().shape({\n    newPassword: passwordSchema,\n    confirmPassword: Yup.string().oneOf([Yup.ref('newPassword')], 'Пароли не совпадают'),\n});\n","import { FC, useState } from 'react';\nimport { useFormik } from 'formik';\n\nimport { Box, Stack, Button } from '@mui/material';\n\nimport { CustomInput } from 'src/shared/CustomInput';\n\nimport { CreatePasswordValidSchema } from './constants';\n\nexport type CreatePasswordFormProps = {\n    buttonText?: string;\n    errorMessage?: string;\n    onContinue: (value: { newPassword: string }) => void;\n};\n\nexport const CreatePasswordForm: FC<CreatePasswordFormProps> = ({ onContinue, buttonText = 'Продолжить' }) => {\n    const [isFocusNewPassword, setIsFocusNewPassword] = useState(false);\n    const formik = useFormik({\n        initialValues: {\n            newPassword: '',\n            confirmPassword: '',\n        },\n        validationSchema: CreatePasswordValidSchema,\n        onSubmit: (value) => {\n            onContinue({ newPassword: value.newPassword });\n        },\n    });\n\n    const handleNewPasswordFocus = () => {\n        setIsFocusNewPassword(!isFocusNewPassword);\n    };\n    return (\n        <Box component=\"form\" onSubmit={formik.handleSubmit}>\n            <Stack spacing={4}>\n                <Stack spacing={2}>\n                    <CustomInput\n                        id=\"newPassword\"\n                        label=\"Введите новый пароль\"\n                        name=\"newPassword\"\n                        type=\"password\"\n                        fullWidth={true}\n                        value={formik.values.newPassword}\n                        onBlur={handleNewPasswordFocus}\n                        onFocus={handleNewPasswordFocus}\n                        onChange={formik.handleChange}\n                        error={!!formik.errors.newPassword}\n                        helperText={\n                            formik.errors.newPassword ||\n                            (isFocusNewPassword &&\n                                !formik.values.newPassword &&\n                                `Пароль должен содержать символы следующих групп: \n                        заглавные и строчные буквы латиницы, цифры, \n                        специальные`)\n                        }\n                    />\n                    <CustomInput\n                        id=\"confirmPassword\"\n                        fullWidth={true}\n                        label=\"Повторите пароль\"\n                        name=\"confirmPassword\"\n                        value={formik.values.confirmPassword}\n                        type=\"password\"\n                        error={!!formik.errors.confirmPassword}\n                        helperText={formik.errors.confirmPassword}\n                        onChange={formik.handleChange}\n                    />\n                </Stack>\n                <Button\n                    fullWidth={true}\n                    variant=\"primary\"\n                    type=\"submit\"\n                    disabled={!formik.values.newPassword || !formik.values.confirmPassword || !formik.isValid}\n                >\n                    {buttonText}\n                </Button>\n            </Stack>\n        </Box>\n    );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Box, FormHelperText, Input } from '@mui/material';\nimport { colors } from 'src/theme';\n\ntype SmsCodeInputProps = {\n    inputLength: number;\n    sendedText: string;\n    error: boolean;\n    helperText: string | boolean;\n    onInputFinished: (value: string) => void;\n};\n\nconst cutAllButDigits = (str: string) => str.replace(/\\D/g, '');\n\nexport const SmsCodeInput = ({ inputLength, sendedText, error, helperText, onInputFinished }: SmsCodeInputProps) => {\n    const [code, setCode] = useState('');\n    const [activeIndex, setActiveIndex] = useState<number | null>(null);\n    const activeInputRef = useRef<HTMLInputElement>();\n\n    useEffect(() => {\n        activeIndex !== null && activeInputRef.current?.focus();\n    }, [activeIndex]);\n\n    //We only want code value in dependency array, so linter is disabled, since it wants to add callback in array, which causes infinite rerenders\n    useEffect(() => {\n        if (code.length === 6 && !/\\D/.test(code) && onInputFinished) {\n            onInputFinished(code);\n        } else {\n            onInputFinished('');\n        }\n    }, [code]); //eslint-disable-line\n\n    const handleCellChange = (i: number) => (e: React.ChangeEvent<HTMLInputElement>) => {\n        const val = cutAllButDigits(e.target.value);\n        const isDeletionCase = !e.target.value;\n        const isOverwritingCase = !!(code[i] && code[i] !== ' ' && val);\n\n        if (isOverwritingCase) return;\n\n        if (val) {\n            setActiveIndex(i > code.length ? code.length + 1 : i + 1);\n            setCode((value) => value.slice(0, i) + val[val.length - 1] + value.slice(i + 1));\n        } else if (isDeletionCase) {\n            i === code.length - 1\n                ? setCode((value) => value.slice(0, -1))\n                : setCode((value) => value.slice(0, i) + ' ' + value.slice(i + 1));\n        }\n    };\n\n    const handleKeyDown = (i: number) => (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Backspace' && (code[i] === ' ' || !code[i]) && activeIndex) {\n            e.preventDefault();\n            e.stopPropagation();\n            setActiveIndex(i - 1);\n        }\n    };\n    const handlePaste = (e: React.ClipboardEvent) => {\n        const pastedText = cutAllButDigits(e.clipboardData.getData('Text')).slice(0, inputLength);\n        setCode(pastedText);\n        setActiveIndex(pastedText.length === inputLength ? inputLength - 1 : pastedText.length);\n    };\n\n    return (\n        <Box sx={{ width: 'min-content' }}>\n            <Box\n                component=\"label\"\n                htmlFor=\"cell0\"\n                sx={{\n                    display: 'block',\n                    fontFamily: 'SF Pro Text',\n                    fontStyle: 'normal',\n                    fontWeight: 400,\n                    fontSize: '14px',\n                    lineHeight: '24px',\n                    marginBottom: '16px',\n                    color: colors.neutral600,\n                }}\n            >\n                {sendedText}\n            </Box>\n            <Box sx={{ display: 'flex', gap: '12px' }} onPaste={handlePaste}>\n                {Array(inputLength)\n                    .fill(0)\n                    .map((el, i) => (\n                        <Input\n                            key={i}\n                            type=\"tel\"\n                            id={'cell' + i}\n                            inputProps={{\n                                sx: {\n                                    textAlign: 'center',\n                                    fontFamily: 'SF Pro Text',\n                                    fontWeight: 400,\n                                    fontSize: '20px',\n                                    lineHeight: '32px',\n                                },\n                            }}\n                            autoComplete=\"off\"\n                            inputRef={i === activeIndex ? activeInputRef : null}\n                            disableUnderline={true}\n                            value={code[i] === ' ' ? '' : code[i] || ''}\n                            onChange={handleCellChange(i)}\n                            onKeyDown={handleKeyDown(i)}\n                            onPaste={(e) => e.preventDefault()}\n                            sx={{\n                                height: '44px',\n                                width: '47px',\n                                textAlign: 'center',\n                                background: `linear-gradient(172.09deg, rgba(241, 241, 241, 0.6) -6.78%, ${colors.neutral200} 93.9%)`,\n                                borderRadius: '4px',\n                            }}\n                        />\n                    ))}\n            </Box>\n            <FormHelperText\n                error={error}\n                sx={{\n                    fontFamily: 'SF Pro Text',\n                    fontStyle: 'normal',\n                    fontWeight: 400,\n                    fontSize: '14px',\n                    lineHeight: '24px',\n                    marginTop: '8px',\n                }}\n            >\n                {helperText}\n            </FormHelperText>\n        </Box>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { Box, Link, Typography } from '@mui/material';\nimport { colors } from 'src/theme';\n\ntype SmsTimerProps = {\n    minutes: number;\n    seconds: number;\n    tryCounter: number;\n    onRefreshSms: () => void;\n};\n\nexport const SmsTimer = ({ minutes, seconds, tryCounter, onRefreshSms }: SmsTimerProps) => {\n    const [isOver, setIsOver] = useState(false);\n    const [[m, s], setTime] = useState([minutes, seconds]);\n\n    const tick = () => {\n        if (isOver) return;\n        if (m === 0 && s === 0) {\n            setIsOver(true);\n        } else if (s === 0) {\n            setTime([m - 1, 59]);\n        } else {\n            setTime([m, s - 1]);\n        }\n    };\n\n    const reset = (min: number, sec: number) => {\n        setTime([min, sec]);\n        setIsOver(false);\n    };\n\n    useEffect(() => {\n        const timerID = setInterval(() => tick(), 1000);\n        return () => clearInterval(timerID);\n    });\n\n    useEffect(() => {\n        if (!tryCounter) reset(10, 0);\n    }, [tryCounter]);\n\n    const handleUpdateTimer = () => {\n        reset(0, 30);\n        onRefreshSms();\n    };\n\n    return (\n        <Box>\n            {!isOver ? (\n                <Typography variant=\"regular14\" sx={{ color: colors.neutral600 }}>\n                    {`Повторная отправка через ${m.toString().padStart(1, '0')}:${s.toString().padStart(2, '0')}`}\n                </Typography>\n            ) : (\n                <Link component=\"button\" onClick={handleUpdateTimer}>\n                    <Typography variant=\"regular14\" sx={{ color: colors.primary }}>\n                        Отправить заново\n                    </Typography>\n                </Link>\n            )}\n        </Box>\n    );\n};\n","import { FC, useState, useEffect } from 'react';\n\nimport { Box, Stack, Button } from '@mui/material';\n\nimport { useFormik } from 'formik';\n\nimport { useAppDispatch } from 'src/redux/hooks';\n\nimport { useGetSmsCodeQuery, userService } from 'src/redux/apis/userService';\n\nimport { formatPhoneNumberOutput } from 'src/utils/inputFormatters';\n\nimport { ExtraInfo } from '../../components/IndexPage/StepwiseFormContainer';\n\nimport { SmsCodeInput } from './SmsCodeInput';\nimport { SmsTimer } from './SmsTimer';\n\nexport type SmsCodeFormProps = {\n    errorMessage?: string;\n    onContinue: (value: { smsCode: string }) => void;\n    extraInfo?: ExtraInfo;\n};\n\nexport const SmsCodeForm: FC<SmsCodeFormProps> = ({ onContinue, extraInfo }) => {\n    const [tryCounter, setTryCounter] = useState(3);\n    const [isSmsCodeError, setIsSmsCodeError] = useState(false);\n    const { data, isSuccess, refetch } = useGetSmsCodeQuery(extraInfo?.mobilePhone);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        return () => {\n            dispatch(userService.util.resetApiState());\n        };\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (isSuccess) alert(data?.verificationCode);\n    }, [data, isSuccess]);\n\n    const formik = useFormik({\n        initialValues: {\n            smsCode: '',\n        },\n        validationSchema: '',\n        onSubmit: (value) => {\n            if (data?.verificationCode === value.smsCode) {\n                setIsSmsCodeError(false);\n                onContinue({ smsCode: value.smsCode });\n            }\n        },\n    });\n\n    const setFormikSmsCode = (value: string) => formik.setFieldValue('smsCode', value, true);\n\n    const handleRefreshSms = () => {\n        setIsSmsCodeError(false);\n        setTryCounter(3);\n        refetch();\n    };\n\n    const handleCheckSmsCode = () => {\n        if (data?.verificationCode !== formik.values.smsCode) {\n            setIsSmsCodeError(true);\n            if (tryCounter !== 0) {\n                setTryCounter((prev) => prev - 1);\n            }\n        }\n    };\n\n    const inputPhone = extraInfo ? extraInfo.mobilePhone.slice(1) : '';\n\n    const sendedText =\n        extraInfo?.currentBlock === 'signUp'\n            ? `Мы отправили СМС с 6-значным кодом подтверждения на номер ${formatPhoneNumberOutput(inputPhone)}`\n            : 'На ваш номер телефона отправлен 6-значный код подтверждения';\n\n    const smsErrorHelperText =\n        isSmsCodeError && tryCounter !== 0\n            ? `Неверный код. У Вас осталось ${tryCounter} попытк${tryCounter === 1 ? 'а' : 'и'}`\n            : isSmsCodeError && 'Слишком много неудачных попыток. Вы можете запросить код повторно через 10 минут.';\n\n    return (\n        <Box component=\"form\" onSubmit={formik.handleSubmit}>\n            <Stack spacing={1}>\n                <SmsCodeInput\n                    inputLength={6}\n                    sendedText={sendedText}\n                    error={isSmsCodeError}\n                    helperText={smsErrorHelperText}\n                    onInputFinished={setFormikSmsCode}\n                />\n                <SmsTimer minutes={0} seconds={30} tryCounter={tryCounter} onRefreshSms={handleRefreshSms} />\n            </Stack>\n            <Button\n                fullWidth={true}\n                disabled={!tryCounter}\n                variant=\"primary\"\n                onClick={handleCheckSmsCode}\n                type=\"submit\"\n                sx={{ mt: 3 }}\n            >\n                Продолжить\n            </Button>\n        </Box>\n    );\n};\n","import * as Yup from 'yup';\n\nimport { passportMaxLengthErrorText, minLengthErrorText, passportPattern } from 'src/utils/validators';\n\nexport const PasportValidSchema = Yup.object().shape({\n    passNumber: Yup.string()\n        .matches(passportPattern, 'Использованы недопустимые символы')\n        .matches(/\\d+/, 'В номере паспорта должна быть минимум 1 цифра')\n        .min(3, minLengthErrorText)\n        .max(15, passportMaxLengthErrorText),\n});\n","import { CreatePasswordForm } from 'src/shared/CreatePasswordForm';\nimport { SmsCodeForm } from 'src/shared/SmsCodeForm';\n\nimport { PasportIdForm } from './PasportIdForm';\n\nexport const stepData = [\n    { step: 0, label: 'Паспорт', stepInfo: 'Шаг 1/3. Введите номер паспорта', component: PasportIdForm },\n    {\n        step: 1,\n        label: 'Код из СМС',\n        stepInfo: 'Шаг 2/3. Введите код из СМС',\n        component: SmsCodeForm,\n    },\n    {\n        step: 2,\n        label: 'Пароль',\n        stepInfo: 'Шаг 3/3. Придумайте новый пароль',\n        component: CreatePasswordForm,\n    },\n];\n","import { FC } from 'react';\nimport { useFormik } from 'formik';\n\nimport { Box, Button, Stack } from '@mui/material';\n\nimport { CustomInput } from 'src/shared/CustomInput';\n\nimport { useAppDispatch } from 'src/redux/hooks';\n\nimport { clearErrorMessage } from 'src/redux/slices/resetPass';\n\nimport { PasportValidSchema } from './constants';\n\nexport type PasportIdFormProps = {\n    errorMessage?: string;\n    onContinue: (value: { passNumber: string }) => void;\n};\n\nexport const PasportIdForm: FC<PasportIdFormProps> = ({ errorMessage, onContinue }) => {\n    const dispatch = useAppDispatch();\n    const formik = useFormik({\n        initialValues: {\n            passNumber: '',\n        },\n        validationSchema: PasportValidSchema,\n        onSubmit: onContinue,\n    });\n\n    const handleClearClick = () => {\n        formik.setFieldValue('passNumber', '');\n    };\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (errorMessage) dispatch(clearErrorMessage());\n        formik.setFieldValue('passNumber', e.target.value);\n    };\n\n    return (\n        <Box component=\"form\" onSubmit={formik.handleSubmit}>\n            <Stack spacing={4}>\n                <CustomInput\n                    id=\"resetInputs\"\n                    fullWidth={true}\n                    label=\"Номер паспорта\"\n                    name=\"passNumber\"\n                    value={formik.values.passNumber}\n                    type=\"text\"\n                    error={!!formik.errors.passNumber || !!errorMessage}\n                    helperText={\n                        (errorMessage &&\n                            'Пользователь с таким номером паспорта не найден. Пожалуйста, проверьте свой номер паспорта или свяжитесь с банком') ||\n                        formik.errors.passNumber\n                    }\n                    onChange={handleChange}\n                    isClearable={true}\n                    onClear={handleClearClick}\n                />\n                <Button\n                    fullWidth={true}\n                    variant=\"primary\"\n                    type=\"submit\"\n                    disabled={!formik.values.passNumber || !formik.isValid}\n                >\n                    Продолжить\n                </Button>\n            </Stack>\n        </Box>\n    );\n};\n","import { FC, useEffect, useState } from 'react';\n\nimport { Box, Stack, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport {\n    clearAllResetData,\n    requestChangePassword,\n    requestPhoneNumber,\n    requestVerificateStatus,\n} from 'src/redux/slices/resetPass';\nimport { useAppDispatch, useAppSelector } from 'src/redux/hooks';\nimport { selectResetPassData } from 'src/redux/selectors';\n\nimport { BackArrowButton } from 'src/shared/BackArrowButton';\nimport { Congrats } from 'src/shared/Congrats';\nimport { Stepper } from 'src/shared/Stepper';\nimport { StepwiseFormContainer } from 'src/components/IndexPage/StepwiseFormContainer';\n\nimport { stepData } from './constants';\n\ntype ResetPasswordProps = { onClose: VoidFunction };\n\nexport const ResetPasswordBlock: FC<ResetPasswordProps> = ({ onClose }) => {\n    const [activeStep, setStep] = useState(0);\n    const theme = useTheme();\n\n    const dispatch = useAppDispatch();\n\n    const { mobilePhone, token, successMsg, errorMessage } = useAppSelector(selectResetPassData);\n\n    useEffect(() => {\n        if (mobilePhone !== '') {\n            setStep((prev) => prev + 1);\n        }\n    }, [dispatch, mobilePhone]);\n\n    const handleContinue = (value: { passNumber?: string; smsCode?: string; newPassword?: string }) => {\n        if (activeStep === 0) {\n            dispatch(requestPhoneNumber({ passportNumber: value.passNumber }));\n        } else if (activeStep === 1) {\n            if (value.smsCode) {\n                dispatch(\n                    requestVerificateStatus({\n                        mobilePhone,\n                        smsVerificationCode: value.smsCode,\n                        needTokenInReturn: true,\n                    })\n                );\n                setStep((prev) => prev + 1);\n            }\n        } else if (activeStep === 2) {\n            if (successMsg === '' && value.newPassword) {\n                dispatch(requestChangePassword({ token, mobilePhone, newPassword: value.newPassword }));\n            }\n        }\n    };\n\n    const handleBack = () => {\n        if (activeStep === 2) {\n            setStep(activeStep - 1);\n        } else if (activeStep === 1) {\n            dispatch(clearAllResetData());\n            setStep(activeStep - 1);\n        } else if (activeStep === 0) {\n            onClose();\n        }\n    };\n\n    return successMsg ? (\n        <Box sx={{ width: '416px' }}>\n            <Congrats\n                title=\"Пароль успешно изменен\"\n                bodyText=\"Пожалуйста, выполните вход повторно\"\n                buttonText=\"Войти\"\n                onClose={onClose}\n            />\n        </Box>\n    ) : (\n        <Stack\n            spacing={4}\n            sx={{\n                width: '416px',\n                [theme.breakpoints.down('laptop')]: {\n                    margin: '150px 0 0',\n                },\n                [theme.breakpoints.down('tablet')]: {\n                    width: '342px',\n                    margin: '95px 0 0',\n                },\n            }}\n        >\n            <Box\n                sx={{\n                    width: '100%',\n                    display: 'flex',\n                }}\n            >\n                <BackArrowButton onClick={handleBack} />\n            </Box>\n            <Typography\n                variant=\"h3\"\n                sx={{ [theme.breakpoints.down('tablet')]: { fontSize: '20px', lineHeight: '32px' } }}\n            >\n                Восстановление пароля\n            </Typography>\n            <Stepper\n                data-testid=\"reset-password-stepper\"\n                activeStep={activeStep}\n                stepData={stepData}\n                gap=\"88px\"\n                connectorLeft=\"-71px\"\n                connectorRight=\"17px\"\n            />\n            <StepwiseFormContainer\n                stepData={stepData[activeStep]}\n                onContinue={handleContinue}\n                errorMessage={errorMessage}\n                extraInfo={{ mobilePhone: mobilePhone, currentBlock: 'reset' }}\n            />\n        </Stack>\n    );\n};\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\n\nexport type CallToActionProps = {\n    opacity: number;\n    title: string;\n    subtitle: string;\n    link: string;\n    image: string;\n};\n\nexport const CallToAction = ({ opacity, title, subtitle, image, link }: CallToActionProps) => {\n    const theme = useTheme();\n    return (\n        <Box\n            sx={{\n                maxWidth: '480px',\n                height: '100%',\n                color: '#FFF',\n                opacity: opacity,\n                position: opacity ? 'static' : 'absolute',\n                bottom: '0px',\n                left: 0,\n                transition: 'opacity 1s',\n            }}\n        >\n            <Box\n                component=\"img\"\n                src={image}\n                alt=\"logotype\"\n                sx={{\n                    display: 'block',\n                    marginBottom: '44px',\n                    [theme.breakpoints.down('tablet')]: {\n                        width: '168px',\n                        height: '176px',\n                        margin: '68px auto 24px',\n                    },\n                }}\n            />\n            <Typography\n                data-cy=\"slider-title\"\n                variant=\"h2New\"\n                component=\"h2\"\n                sx={{\n                    [theme.breakpoints.down('tablet')]: {\n                        fontSize: '24px',\n                        width: '260px',\n                        margin: 'auto',\n                        lineHeight: '32px',\n                        textAlign: 'center',\n                    },\n                }}\n            >\n                {title}\n            </Typography>\n            <Typography\n                variant=\"subtitle2New\"\n                component=\"h6\"\n                sx={{\n                    letterSpacing: 'normal',\n                    margin: '16px 0 44px 0',\n                    width: '378px',\n                    [theme.breakpoints.down('tablet')]: {\n                        width: '342px',\n                        fontSize: '20px',\n                        lineHeight: '32px',\n                        textAlign: 'center',\n                    },\n                }}\n            >\n                {subtitle}\n            </Typography>\n        </Box>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport { useTheme } from '@mui/material/styles';\n\nimport { useMatchesScreen } from 'src/hooks/useMatchesScreen';\n\nimport { SwitchDots } from 'src/shared/SwitchDots';\n\nimport { ArrowBackIcon, ArrowForwardIcon } from 'src/shared/icons';\n\nimport { CallToAction } from './CallToAction';\n\ntype CarouselProps = {\n    carouselData: {\n        title: string;\n        subtitle: string;\n        link: string;\n        image: string;\n    }[];\n    hasSwitchDots?: boolean;\n    interval?: number;\n};\n\nexport const Carousel = ({ carouselData, hasSwitchDots = false, interval = 3500 }: CarouselProps) => {\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const theme = useTheme();\n    const { isMobile, isTablet } = useMatchesScreen();\n    const isLowerThanLaptop = isMobile || isTablet;\n    const carouselItemsQuantity = carouselData.length;\n\n    const switchHandler = (checkedRadioIndex: number) => {\n        setCurrentIndex(checkedRadioIndex);\n    };\n\n    useEffect(() => {\n        const slideInterval = setTimeout(() => {\n            const nextIndex = (currentIndex + 1) % carouselItemsQuantity;\n\n            setCurrentIndex(nextIndex);\n        }, interval);\n\n        return () => {\n            clearTimeout(slideInterval);\n        };\n    }, [currentIndex, interval, carouselItemsQuantity]);\n\n    const handleForwardClick = () => setCurrentIndex((index) => (index === carouselItemsQuantity - 1 ? 0 : index + 1));\n    const handleBackClick = () => setCurrentIndex((index) => (index ? index - 1 : carouselItemsQuantity - 1));\n\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n                alignItems: 'end',\n                [theme.breakpoints.down('laptop')]: {\n                    justifyContent: 'center',\n                },\n            }}\n        >\n            {!isLowerThanLaptop && (\n                <IconButton\n                    data-cy=\"slider-left-button\"\n                    disableRipple={true}\n                    disableTouchRipple={true}\n                    sx={{\n                        margin: '0 24px 259px 0',\n                        padding: '12px',\n                        position: 'relative',\n                        zIndex: 10,\n                        width: 'fit-content',\n                    }}\n                    onClick={handleBackClick}\n                >\n                    <ArrowBackIcon\n                        viewBox=\"0 0 16 28\"\n                        sx={{\n                            height: '28px',\n                            width: '16px',\n                            color: 'white',\n                            [theme.breakpoints.down('desktop')]: { marginLeft: '18px' },\n                        }}\n                    />\n                </IconButton>\n            )}\n            <Box\n                sx={{\n                    position: 'relative',\n                    width: '480px',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'flex-end',\n                    alignItems: 'flex-start',\n                    [theme.breakpoints.down('laptop')]: {\n                        width: '480px',\n                    },\n                    [theme.breakpoints.down('tablet')]: {\n                        width: '342px',\n                    },\n                }}\n            >\n                <Box\n                    sx={{\n                        position: 'relative',\n                        width: '100%',\n                        [theme.breakpoints.down('desktop')]: {\n                            h2: {\n                                fontSize: '38px',\n                            },\n                            h6: {\n                                fontSize: '20px',\n                            },\n                        },\n                        [theme.breakpoints.down('laptop')]: {\n                            h2: {\n                                fontSize: '48px',\n                            },\n                            h6: {\n                                fontSize: '20px',\n                            },\n                        },\n                        [theme.breakpoints.down('tablet')]: {\n                            width: '342px',\n                            h2: {\n                                fontSize: '24px',\n                            },\n                        },\n                    }}\n                >\n                    {carouselData.map((item, index) => (\n                        <CallToAction\n                            opacity={index === currentIndex ? 1 : 0}\n                            title={item.title}\n                            subtitle={item.subtitle}\n                            link={item.link}\n                            image={item.image}\n                            key={index}\n                        />\n                    ))}\n                </Box>\n\n                {hasSwitchDots && (\n                    <Box\n                        sx={{\n                            position: 'relative',\n                            zIndex: 10,\n                            marginBottom: '44px',\n                            [theme.breakpoints.down('tablet')]: {\n                                margin: 'auto',\n                            },\n                        }}\n                    >\n                        <SwitchDots\n                            itemsQuantity={carouselItemsQuantity}\n                            currentIndex={currentIndex}\n                            switchHandler={switchHandler}\n                        />\n                    </Box>\n                )}\n                <Button\n                    component={RouterLink}\n                    to={carouselData[currentIndex].link}\n                    variant=\"primary\"\n                    sx={{\n                        zIndex: 10,\n                        [theme.breakpoints.down('tablet')]: {\n                            width: '165px',\n                            height: '48px',\n                            margin: '40px auto 60px',\n                            fontSize: '16px',\n                        },\n                    }}\n                >\n                    Узнать больше\n                </Button>\n            </Box>\n            {!isLowerThanLaptop && (\n                <IconButton\n                    data-cy=\"slider-right-button\"\n                    disableRipple={true}\n                    disableTouchRipple={true}\n                    sx={{\n                        padding: '12px',\n                        margin: '0 18px 259px 24px',\n                        position: 'relative',\n                        zIndex: 10,\n                    }}\n                    onClick={handleForwardClick}\n                >\n                    <ArrowForwardIcon viewBox=\"0 0 16 28\" sx={{ height: '28px', width: '16px', color: 'white' }} />\n                </IconButton>\n            )}\n            <button onClick={() => {\n                const a: any = {};\n                a.a.a = 10;\n            }}>\n                Сгенерировать ошибку\n            </button>\n        </Box>\n    );\n};\n","import * as Yup from 'yup';\nimport { minLengthErrorText, passportPattern, passwordSchema } from 'src/utils/validators';\n\nexport const LoginSchema = Yup.object().shape({\n    passport: Yup.string().max(10, minLengthErrorText).matches(passportPattern, 'Недопустимые символы'),\n    password: passwordSchema,\n});\n","import { FC, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\n\nimport { Box, Button, Stack, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { selectAuthToken } from 'src/redux/selectors';\nimport { useAppSelector } from 'src/redux/hooks';\nimport { useLogInMutation } from 'src/redux/apis/userService';\n\nimport { CustomInput } from 'src/shared/CustomInput';\nimport { ErrCircleIcon } from 'src/shared/icons';\n\nimport { colors } from 'src/theme';\nimport { AppRoutes } from 'src/constants';\n\nimport { LoginSchema } from './constants';\n\ntype LoginFormProps = { onResetPasswordClick: VoidFunction; onRegistrationClick: VoidFunction };\n\nexport const LoginForm: FC<LoginFormProps> = ({ onResetPasswordClick, onRegistrationClick }) => {\n    const [isFocusPassword, setIsFocusPassword] = useState(false);\n    const navigate = useNavigate();\n    const theme = useTheme();\n\n    const auth = useAppSelector(selectAuthToken);\n\n    const [loginUser, { isLoading, isError }] = useLogInMutation();\n\n    const formik = useFormik({\n        initialValues: {\n            phone: '',\n            password: '',\n        },\n        validationSchema: LoginSchema,\n        onSubmit: (values) => {\n            handleLoginClick(values.phone, values.password);\n        },\n    });\n\n    useEffect(() => {\n        if (auth) {\n            navigate(AppRoutes.mainRoute, { replace: true });\n        }\n    }, [navigate, auth]);\n\n    const handleLoginClick = (phone: string, password: string) => {\n        const formattedPhone = phone.replace(/[\\s\\(\\)']/g, '');\n        loginUser({\n            mobilePhone: formattedPhone,\n            password: password,\n        });\n    };\n\n    const handleClearClick = () => {\n        formik.setFieldValue('phone', '');\n    };\n\n    const handlePasswordFocus = () => {\n        setIsFocusPassword(!isFocusPassword);\n    };\n\n    const isPhoneInvalid = formik.values.phone.includes('_');\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <Stack\n                spacing={4}\n                sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    width: '416px',\n                    [theme.breakpoints.down('laptop')]: {\n                        marginTop: '170px',\n                    },\n                    [theme.breakpoints.down('tablet')]: {\n                        width: '342px',\n                        marginTop: '105px',\n                    },\n                }}\n            >\n                <Typography\n                    sx={{\n                        alignSelf: 'flex-start',\n                        [theme.breakpoints.down('tablet')]: { fontSize: '20px', lineHeight: '32px' },\n                    }}\n                    variant=\"h3\"\n                >\n                    Войти в онлайн-банк\n                </Typography>\n                <Stack\n                    spacing={2}\n                    sx={{\n                        width: '100%',\n                        [theme.breakpoints.down('tablet')]: {\n                            width: '342px',\n                        },\n                    }}\n                >\n                    {isError && (\n                        <Box\n                            sx={{\n                                display: 'flex',\n                                alignItems: 'center',\n                                height: '44px',\n                                width: '100%',\n                                background: colors.alert,\n                                color: colors.neutral0,\n                                borderRadius: '4px',\n                                paddingLeft: '18px',\n                            }}\n                            data-cy=\"invalid-auth-message\"\n                        >\n                            <ErrCircleIcon />\n                            <Typography sx={{ paddingLeft: '14px' }} variant=\"descriptionRegular\">\n                                Неверный логин или пароль\n                            </Typography>\n                        </Box>\n                    )}\n                    <CustomInput\n                        id=\"login\"\n                        fullWidth={true}\n                        label=\"Номер телефона\"\n                        type=\"tel\"\n                        name=\"phone\"\n                        mask=\"+7 (999) 999 99 99\"\n                        defaultMaskedValue=\"+7 (___) ___ __ __\"\n                        value={formik.values.phone}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        onFocus={() => formik.setFieldTouched('phone', false)}\n                        error={!!formik.errors.phone || isError || (isPhoneInvalid && formik.touched.phone)}\n                        helperText={\n                            formik.errors.phone ||\n                            (isPhoneInvalid &&\n                                formik.touched.phone &&\n                                'Номер телефона должен быть не короче 10 символов')\n                        }\n                        isClearable={true}\n                        onClear={handleClearClick}\n                    />\n                    <CustomInput\n                        id=\"password\"\n                        label=\"Пароль\"\n                        name=\"password\"\n                        type=\"password\"\n                        fullWidth={true}\n                        value={formik.values.password}\n                        onBlur={handlePasswordFocus}\n                        onFocus={handlePasswordFocus}\n                        onChange={formik.handleChange}\n                        error={!!formik.errors.password || isError}\n                        helperText={\n                            formik.errors.password ||\n                            (isFocusPassword &&\n                                !formik.values.password &&\n                                `Пароль должен содержать символы следующих групп: \n                        заглавные и строчные буквы латиницы, цифры, \n                        специальные`)\n                        }\n                    />\n                </Stack>\n                <Button variant=\"textButton\" onClick={onResetPasswordClick}>\n                    Забыли пароль?\n                </Button>\n                <Button\n                    data-cy=\"button-submit-login\"\n                    fullWidth={true}\n                    variant=\"primary\"\n                    disabled={!(formik.values.phone && formik.values.password) || !formik.isValid || isLoading}\n                    type=\"submit\"\n                >\n                    Войти\n                </Button>\n                <Box sx={{ display: 'flex' }}>\n                    <Typography variant=\"descriptionRegular\">Нет аккаунта?</Typography>\n                    <Button variant=\"textButton\" sx={{ ml: '8px' }} onClick={onRegistrationClick}>\n                        Зарегистрируйтесь\n                    </Button>\n                </Box>\n            </Stack>\n        </form>\n    );\n};\n","import { Stack } from '@mui/material';\n\nimport { MobileStoreButtons } from 'src/shared/MobileStoreButtons';\nimport { useTheme } from '@mui/material/styles';\n\nexport const DownloadAppBlock = () => {\n    const theme = useTheme();\n    return (\n        <Stack\n            spacing={2}\n            sx={{\n                display: 'flex',\n                width: '339px',\n                flexDirection: 'column',\n                alignItems: 'flex-start',\n                [theme.breakpoints.down('tablet')]: {\n                    width: '100%',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    marginBottom: '30px',\n                },\n            }}\n        >\n            <MobileStoreButtons />\n        </Stack>\n    );\n};\n","import DollarLogoBlack from 'src/images/sliderLogos/DollarLogoBlack.png';\nimport PercentLogoBlack from 'src/images/sliderLogos/PercentLogoBlack.png';\nimport PersonLogoBlack from 'src/images/sliderLogos/PersonLogoBlack.png';\n\nexport const carouselData = [\n    {\n        title: 'Платежи и переводы без комиссий',\n        subtitle: 'Совершай платежи с карты на карту или по номеру телефона',\n        link: '#',\n        image: DollarLogoBlack,\n    },\n    {\n        title: 'Кредит без визита в отделение',\n        subtitle: 'Оформляй онлайн не выходя из дома.\\nОтвет банка за 7 секунд',\n        link: '#',\n        image: PercentLogoBlack,\n    },\n    {\n        title: 'Индивидуальный курс валют',\n        subtitle: 'Предложи банку свой курс обмена валют',\n        link: '#',\n        image: PersonLogoBlack,\n    },\n];\n","import { FC } from 'react';\nimport { RadioGroup, Radio, FormControlLabel } from '@mui/material';\nimport { colors } from 'src/theme';\n\ntype ResidenceRadioType = {\n    currentResidence: boolean;\n    onChange: (value: boolean) => void;\n    disabled?: boolean;\n};\n\nconst radioStyle = {\n    pr: '16px',\n    color: colors.neutral600,\n    '&:hover': { background: 'none' },\n    '&.Mui-checked': { color: colors.secondary600 },\n};\n\nexport const ResidenceRadio: FC<ResidenceRadioType> = ({ currentResidence, onChange, disabled }) => {\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        onChange(event.target.value === 'ru');\n    };\n    return (\n        <RadioGroup row={true}>\n            <FormControlLabel\n                control={\n                    <Radio\n                        disableRipple={true}\n                        disabled={disabled}\n                        checked={currentResidence}\n                        onChange={handleChange}\n                        value=\"ru\"\n                        sx={radioStyle}\n                    />\n                }\n                label=\"Резидент РФ\"\n                sx={{ mr: '65px' }}\n            />\n            <FormControlLabel\n                control={\n                    <Radio\n                        disableRipple={true}\n                        disabled={disabled}\n                        checked={!currentResidence}\n                        onChange={handleChange}\n                        value=\"not ru\"\n                        sx={radioStyle}\n                    />\n                }\n                label=\"Нерезидент РФ\"\n            />\n        </RadioGroup>\n    );\n};\n","import * as Yup from 'yup';\n\nimport { passportMaxLengthErrorText, minLengthErrorText, passportPattern, userInfoPattern } from 'src/utils/validators';\n\nconst userInfoValidation = Yup.string()\n    .min(2, 'Недостаточное количество символов')\n    .max(30, 'Длина должна быть не более 30 символов')\n    .matches(userInfoPattern, 'Использованы недопустимые символы');\n\nexport const PersonalInfoFormValidSchema = Yup.object().shape({\n    firstName: userInfoValidation,\n    lastName: userInfoValidation,\n    middleName: userInfoValidation,\n    pasNumber: Yup.string()\n        .min(3, minLengthErrorText)\n        .max(15, passportMaxLengthErrorText)\n        .matches(passportPattern, 'Использованы недопустимые символы'),\n});\n","import { ControlQuestion } from 'src/shared/ControlQuestion';\nimport { CreatePasswordForm } from 'src/shared/CreatePasswordForm';\nimport { SmsCodeForm } from 'src/shared/SmsCodeForm';\n\nimport { PersonalInfoForm } from './PersonalInfoForm';\n\nexport const stepDataNotCLient = [\n    { step: 0, label: 'Введите СМС-код', stepInfo: 'Шаг 1. Введите СМС-код', component: SmsCodeForm },\n    {\n        step: 1,\n        label: 'Заполните информацию',\n        stepInfo: 'Шаг 2. Заполните информацию',\n        component: PersonalInfoForm,\n    },\n    {\n        step: 2,\n        label: 'Придумайте пароль',\n        stepInfo: 'Шаг 3. Придумайте пароль',\n        component: CreatePasswordForm,\n    },\n    {\n        step: 3,\n        label: 'Контрольный вопрос',\n        stepInfo: 'Шаг 4. Контрольный вопрос',\n        component: ControlQuestion,\n    },\n];\n\nexport const stepDataCLient = [\n    { step: 0, label: 'Введите СМС-код', stepInfo: 'Шаг 1. Введите СМС-код', component: SmsCodeForm },\n    {\n        step: 1,\n        label: 'Придумайте пароль',\n        stepInfo: 'Шаг 2. Придумайте пароль',\n        component: CreatePasswordForm,\n    },\n    {\n        step: 2,\n        label: 'Контрольный вопрос',\n        stepInfo: 'Шаг 3. Контрольный вопрос',\n        component: ControlQuestion,\n    },\n];\n","import { FC, useState } from 'react';\nimport { Box, Button, Stack } from '@mui/material';\nimport { CustomInput } from 'src/shared/CustomInput';\nimport { useFormik } from 'formik';\n\nimport { ResidenceRadio } from 'src/shared/ResidenceRadio';\n\nimport { PersonalInfoFormValidSchema } from './constants';\n\ntype PersonalInfoFormType = {\n    onContinue: (value: {\n        firstName: string;\n        lastName: string;\n        middleName: string;\n        pasNumber: string;\n        residence: boolean;\n    }) => void;\n};\n\nexport const PersonalInfoForm: FC<PersonalInfoFormType> = ({ onContinue }) => {\n    const [selectedResidence, setSelectedResidence] = useState(true);\n    const formik = useFormik({\n        initialValues: {\n            firstName: '',\n            lastName: '',\n            middleName: '',\n            pasNumber: '',\n        },\n        validationSchema: PersonalInfoFormValidSchema,\n        onSubmit: (value) => {\n            onContinue({\n                firstName: value.firstName,\n                lastName: value.lastName,\n                middleName: value.middleName,\n                pasNumber: value.pasNumber,\n                residence: selectedResidence,\n            });\n        },\n    });\n\n    const handleToggleResidence = (currentResidence: boolean) => {\n        setSelectedResidence(currentResidence);\n    };\n\n    const handleClearClick = (value: string) => {\n        formik.setFieldValue(value, '');\n    };\n\n    const isButtonDisabled =\n        !formik.values.firstName || !formik.values.lastName || !formik.values.pasNumber || !formik.isValid;\n\n    return (\n        <Box component=\"form\" onSubmit={formik.handleSubmit}>\n            <Stack spacing={1.6}>\n                <CustomInput\n                    id=\"firstName\"\n                    fullWidth={true}\n                    label=\"Ваше имя\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    value={formik.values.firstName}\n                    error={!!formik.errors.firstName}\n                    helperText={formik.errors.firstName}\n                    onChange={formik.handleChange}\n                    isClearable={true}\n                    onClear={() => handleClearClick('firstName')}\n                />\n                <CustomInput\n                    id=\"lastName\"\n                    fullWidth={true}\n                    label=\"Ваша фамилия\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    value={formik.values.lastName}\n                    error={!!formik.errors.lastName}\n                    helperText={formik.errors.lastName}\n                    onChange={formik.handleChange}\n                    isClearable={true}\n                    onClear={() => handleClearClick('lastName')}\n                />\n                <CustomInput\n                    id=\"middleName\"\n                    fullWidth={true}\n                    label=\"Ваше отчество (необязательно)\"\n                    type=\"text\"\n                    name=\"middleName\"\n                    value={formik.values.middleName}\n                    error={!!formik.errors.middleName}\n                    helperText={formik.errors.middleName}\n                    onChange={formik.handleChange}\n                    isClearable={true}\n                    onClear={() => handleClearClick('middleName')}\n                />\n                <CustomInput\n                    id=\"pasNumber\"\n                    fullWidth={true}\n                    label=\"Номер паспорта\"\n                    type=\"text\"\n                    name=\"pasNumber\"\n                    value={formik.values.pasNumber}\n                    error={!!formik.errors.pasNumber}\n                    helperText={formik.errors.pasNumber}\n                    onChange={formik.handleChange}\n                    isClearable={true}\n                    onClear={() => handleClearClick('pasNumber')}\n                />\n                <ResidenceRadio currentResidence={selectedResidence} onChange={handleToggleResidence} />\n                <Button\n                    sx={{ marginTop: '60px' }}\n                    fullWidth={true}\n                    variant=\"primary\"\n                    type=\"submit\"\n                    disabled={isButtonDisabled}\n                >\n                    Продолжить\n                </Button>\n            </Stack>\n        </Box>\n    );\n};\n","import { FC, useEffect, useRef, useState, Suspense } from 'react';\n\nimport { Dialog, Box, Button, DialogContent, Typography } from '@mui/material';\nimport { Close } from '@mui/icons-material';\n\nimport { useMatchesScreen } from 'src/hooks/useMatchesScreen';\n\ntype AgreementProps = {\n    linkText: string;\n    defaultFontSize?: boolean;\n    children?: React.ReactNode;\n};\n\nexport const Agreement: FC<AgreementProps> = ({ linkText, children, defaultFontSize }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [isStartVisible, setIsStartVisible] = useState(true);\n    const [isEndVisible, setIsEndVisible] = useState(true);\n    const [isDialogLoaded, setIsDialogLoaded] = useState(false);\n    const dialogRef = useRef(null);\n    const startRef = useRef<HTMLElement | null>(null);\n    const endRef = useRef<HTMLElement | null>(null);\n    const { isMobile } = useMatchesScreen();\n\n    const handleClose = () => {\n        setIsOpen(false);\n        setIsDialogLoaded(false);\n    };\n    const handleStartIntersect = (entries: IntersectionObserverEntry[]) => {\n        setIsStartVisible(entries[0].isIntersecting);\n    };\n\n    const handleEndIntersect = (entries: IntersectionObserverEntry[]) => {\n        setIsEndVisible(entries[0].isIntersecting);\n    };\n\n    useEffect(() => {\n        const options = {\n            root: dialogRef.current,\n            rootMargin: '0px',\n            threshold: 1.0,\n        };\n\n        const startObserver = new IntersectionObserver(handleStartIntersect, options);\n        const endObserver = new IntersectionObserver(handleEndIntersect, options);\n\n        const startElem = startRef.current;\n        const endElem = endRef.current;\n        startElem && startObserver.observe(startElem);\n        endElem && endObserver.observe(endElem);\n\n        return () => {\n            startElem && startObserver.unobserve(startElem);\n            endElem && endObserver.unobserve(endElem);\n        };\n    }, [isDialogLoaded]);\n\n    return (\n        <>\n            <Button\n                variant=\"textButton\"\n                sx={{\n                    display: 'inline-block',\n                    textAlign: 'inherit',\n                    lineHeight: 'inherit',\n                    verticalAlign: 'baseline',\n                    ...(!defaultFontSize ? { fontSize: 'inherit' } : {}),\n                }}\n                onClick={() => setIsOpen(!isOpen)}\n            >\n                {linkText}\n            </Button>\n\n            <Dialog\n                open={isOpen}\n                onClose={handleClose}\n                onTransitionEnd={() => {\n                    isOpen && setIsDialogLoaded(true);\n                }}\n                sx={{\n                    zIndex: 1000000,\n                    overflow: 'hidden',\n                    '& .MuiDialog-container': {\n                        backdropFilter: 'blur(8px)',\n                        p: { mobile: '139px 0px', tablet: '169px 0px', desktop: '97px 0px 132px' },\n                    },\n                    '& .MuiPaper-root.MuiPaper-elevation': {\n                        maxHeight: '100%',\n                        margin: {\n                            mobile: 'auto 16px',\n                            tablet: 'auto 56px',\n                            desktop: 'auto',\n                        },\n                    },\n                }}\n            >\n                <Suspense>\n                    <DialogContent\n                        ref={dialogRef}\n                        sx={{\n                            position: 'relative',\n                            p: { mobile: '0px 6px 0px 24px', tablet: '0px 6px 0px 40px' },\n                            maxWidth: '698px',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            height: '100%',\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                position: 'absolute',\n                                top: 0,\n                                left: 0,\n                                height: { mobile: '29px', tablet: '57px' },\n                                width: '100%',\n                                background: 'linear-gradient(0deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.18) 100%)',\n                                opacity: isStartVisible ? 0 : 1,\n                                pointerEvents: 'none',\n                                transition: 'opacity 0.5s',\n                            }}\n                        />\n                        <Close\n                            sx={{\n                                position: 'absolute',\n                                top: { mobile: '16px', tablet: '24px' },\n                                right: '24px',\n                                cursor: 'pointer',\n                                zIndex: 1,\n                            }}\n                            onClick={handleClose}\n                        />\n                        <Box\n                            sx={{\n                                position: 'absolute',\n                                bottom: 0,\n                                left: 0,\n                                height: { mobile: '29px', tablet: '57px' },\n                                width: '100%',\n                                background: 'linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.18) 100%)',\n                                opacity: isEndVisible ? 0 : 1,\n                                transition: 'opacity 0.5s',\n                                pointerEvents: 'none',\n                            }}\n                        />\n                        <Box\n                            sx={{\n                                height: '100%',\n                                position: 'relative',\n                                overflow: 'auto',\n                                flexShrink: 1,\n                            }}\n                        >\n                            <Box sx={{ mr: { mobile: '16px', tablet: '24px', desktop: '32px' } }}>\n                                <Box\n                                    ref={startRef}\n                                    sx={{\n                                        background: 'transparent',\n                                        pointerEvents: 'none',\n                                        height: '0px',\n                                        width: '0px',\n                                    }}\n                                />\n                                <Typography\n                                    component=\"div\"\n                                    variant={isMobile ? 'regular14' : 'descriptionRegular'}\n                                    sx={{\n                                        py: {\n                                            mobile: '24px',\n                                            tablet: '32px',\n                                        },\n                                    }}\n                                >\n                                    {children}\n                                </Typography>\n                                <Box\n                                    ref={endRef}\n                                    sx={{\n                                        background: 'transparent',\n                                        pointerEvents: 'none',\n                                        height: '0px',\n                                        width: '0px',\n                                    }}\n                                />\n                            </Box>\n                        </Box>\n                    </DialogContent>\n                </Suspense>\n            </Dialog>\n        </>\n    );\n};\n","import { useState, useEffect, FC } from 'react';\n\nimport { lazilyLoadNameExportedComponent } from 'src/utils/lazilyLoadNameExportedComponent';\n\nimport { Box, Button, Checkbox, Stack, Typography } from '@mui/material';\nimport { useFormik } from 'formik';\n\nimport { useAppDispatch, useAppSelector } from 'src/redux/hooks';\nimport { selectRegistrationData } from 'src/redux/selectors';\nimport { checkUserInfo, clearAllRegisterData } from 'src/redux/slices/registration';\n\nimport { CustomInput } from 'src/shared/CustomInput';\nimport { CheckedIcon, NonCheckedIcon } from 'src/shared/icons';\nimport { colors } from 'src/theme';\n\nimport { Agreement } from './Agreement';\n\nconst { PrivacyPolicy } = lazilyLoadNameExportedComponent(\n    () => import('src/components/IndexPage/RegistrationBlock/UserPhoneCheckForm/PrivacyPolicy'),\n    'PrivacyPolicy'\n);\nconst { TermsAndConditions } = lazilyLoadNameExportedComponent(\n    () => import('src/components/IndexPage/RegistrationBlock/UserPhoneCheckForm/TermsAndConditions'),\n    'TermsAndConditions'\n);\n\ntype UserPhoneCheckFormProps = { onConfirmedUser: VoidFunction };\n\nexport const UserPhoneCheckForm: FC<UserPhoneCheckFormProps> = ({ onConfirmedUser }) => {\n    const [checked, setChecked] = useState(false);\n    const dispatch = useAppDispatch();\n    const { clientStatus, mobilePhone } = useAppSelector(selectRegistrationData);\n\n    const formik = useFormik({\n        initialValues: {\n            userPhone: mobilePhone.replace(/(\\d{1})(\\d{3})(\\d{3})(\\d{2})(\\d{2}$)/, '$1 ($2) $3 $4 $5') || '',\n        },\n        onSubmit: (value) => {\n            if (value.userPhone && !isUserPhoneInvalid) {\n                dispatch(checkUserInfo({ mobilePhone: value.userPhone.replace(/[\\s\\(\\)']/g, '') }));\n            }\n        },\n    });\n\n    const isUserPhoneInvalid = formik.values.userPhone.includes('_');\n\n    useEffect(() => {\n        if (clientStatus && clientStatus !== 'ACTIVE') onConfirmedUser();\n    }, [dispatch, clientStatus, onConfirmedUser]);\n\n    const handleClearClick = () => {\n        if (clientStatus === 'ACTIVE') dispatch(clearAllRegisterData());\n        formik.setFieldValue('userPhone', '');\n    };\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (clientStatus === 'ACTIVE') dispatch(clearAllRegisterData());\n        formik.setFieldValue('userPhone', e.target.value);\n    };\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <Stack spacing={3}>\n                <Typography variant=\"descriptionSemiBold\">Введите номер телефона</Typography>\n                <CustomInput\n                    id=\"login\"\n                    label=\"Номер телефона\"\n                    type=\"text\"\n                    name=\"userPhone\"\n                    mask=\"+7 (999) 999 99 99\"\n                    defaultMaskedValue=\"+7 (___) ___ __ __\"\n                    fullWidth={true}\n                    isClearable={true}\n                    value={formik.values.userPhone}\n                    error={!!formik.errors.userPhone || (isUserPhoneInvalid && formik.touched.userPhone)}\n                    helperText={\n                        formik.errors.userPhone ||\n                        (isUserPhoneInvalid &&\n                            formik.touched.userPhone &&\n                            'Номер телефона должен быть не короче 10 символов')\n                    }\n                    onChange={handleChange}\n                    onBlur={formik.handleBlur}\n                    onFocus={() => formik.setFieldTouched('userPhone', false)}\n                    onClear={handleClearClick}\n                />\n                <Box sx={{ display: 'flex', pt: 1, pb: 2 }}>\n                    <Checkbox\n                        disableRipple={true}\n                        checked={checked}\n                        onChange={() => setChecked(!checked)}\n                        icon={<NonCheckedIcon />}\n                        checkedIcon={<CheckedIcon />}\n                        sx={{ alignSelf: 'flex-start', padding: '0 16px 0 0' }}\n                    />\n                    <Typography variant=\"regular14_20\" sx={{ color: colors.neutral600 }}>\n                        Нажав кнопку «Продолжить», Вы соглашаетесь с\n                        <Agreement linkText=\"Политикой конфиденициальности\">\n                            <PrivacyPolicy />\n                        </Agreement>{' '}\n                        и{' '}\n                        <Agreement linkText=\"Правилами дистанционного банковского обслуживания\">\n                            <TermsAndConditions />\n                        </Agreement>\n                    </Typography>\n                </Box>\n                <Button\n                    sx={{ marginTop: '60px' }}\n                    fullWidth={true}\n                    disabled={!checked || clientStatus === 'ACTIVE' || !formik.values.userPhone || isUserPhoneInvalid}\n                    variant=\"primary\"\n                    type=\"submit\"\n                >\n                    Продолжить\n                </Button>\n            </Stack>\n        </form>\n    );\n};\n","import { useState, FC } from 'react';\n\nimport { Box, Stack, Typography, Button } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { useAppDispatch, useAppSelector } from 'src/redux/hooks';\nimport { useCreateNewUserMutation, useCreateUserMutation } from 'src/redux/apis/userService';\nimport { selectRegistrationData } from 'src/redux/selectors';\n\nimport { BackArrowButton } from 'src/shared/BackArrowButton';\nimport { Congrats } from 'src/shared/Congrats';\nimport { Stepper } from 'src/shared/Stepper';\nimport { StepwiseFormContainer } from 'src/components/IndexPage/StepwiseFormContainer';\n\nimport { clearDataExcludingPhone } from 'src/redux/slices/registration';\n\nimport { stepDataCLient, stepDataNotCLient } from './constants';\n\nimport { UserPhoneCheckForm } from './UserPhoneCheckForm';\n\nexport type RegContinueType = {\n    firstName?: string;\n    lastName?: string;\n    middleName?: string;\n    pasNumber?: string;\n    residence?: boolean;\n    newPassword?: string;\n    securityQuestion?: string;\n    securityAnswer?: string;\n    smsCode?: string;\n};\n\ntype RegistrationBlockProps = { onClose: VoidFunction; isOpen: boolean };\n\nexport const RegistrationBlock: FC<RegistrationBlockProps> = ({ onClose, isOpen }) => {\n    const [activeStep, setStep] = useState(0);\n    const [userInfo, setUserInfo] = useState<RegContinueType>({\n        firstName: '',\n        lastName: '',\n        middleName: '',\n        pasNumber: '',\n        residence: true,\n        newPassword: '',\n        securityQuestion: '',\n        securityAnswer: '',\n    });\n    const [isConfirmedUser, setIsConfirmedUser] = useState(false);\n    const theme = useTheme();\n    const dispatch = useAppDispatch();\n    const { mobilePhone, clientStatus } = useAppSelector(selectRegistrationData);\n    const [createNewUser, { isSuccess: isNewUserSuccess }] = useCreateNewUserMutation();\n    const [createUser, { isSuccess: isUserSuccess }] = useCreateUserMutation();\n\n    const sendNewUser = async (\n        mobilePhone: string,\n        user: RegContinueType,\n        securityQuestion?: string,\n        securityAnswer?: string\n    ) => {\n        await createNewUser({\n            mobilePhone: mobilePhone,\n            passwordEncoded: user.newPassword,\n            securityQuestion: securityQuestion,\n            securityAnswer: securityAnswer,\n            email: '',\n            firstName: user.firstName,\n            lastName: user.lastName,\n            middleName: user.middleName,\n            identificationPassportNumber: user.pasNumber,\n            residentOfRussia: user.residence,\n        });\n    };\n\n    const sendUser = async (\n        mobilePhone: string,\n        password?: string,\n        securityQuestion?: string,\n        securityAnswer?: string\n    ) => {\n        await createUser({\n            phoneNumber: mobilePhone,\n            passwordEncoded: password,\n            securityQuestion: securityQuestion,\n            securityAnswer: securityAnswer,\n            email: '',\n        });\n    };\n\n    const handleContinue = (value: RegContinueType) => {\n        if (activeStep === 0) {\n            setStep((prev) => prev + 1);\n        } else if (activeStep === 1) {\n            if (clientStatus === 'NOT_REGISTERED') {\n                setUserInfo((state) => ({\n                    ...state,\n                    newPassword: value.newPassword,\n                }));\n                setStep((prev) => prev + 1);\n            } else {\n                setUserInfo((state) => ({\n                    ...state,\n                    firstName: value.firstName,\n                    lastName: value.lastName,\n                    middleName: value.middleName,\n                    pasNumber: value.pasNumber,\n                    residence: value.residence,\n                }));\n                setStep((prev) => prev + 1);\n            }\n        } else if (activeStep === 2) {\n            if (clientStatus === 'NOT_REGISTERED') {\n                sendUser(mobilePhone, userInfo.newPassword, value.securityQuestion, value.securityAnswer);\n            } else {\n                setUserInfo((state) => ({\n                    ...state,\n                    newPassword: value.newPassword,\n                }));\n                setStep((prev) => prev + 1);\n            }\n        } else if (activeStep === 3) {\n            sendNewUser(mobilePhone, { ...userInfo }, value.securityQuestion, value.securityAnswer);\n        }\n    };\n\n    const handleBack = () => {\n        if (activeStep >= 1) {\n            setStep(activeStep - 1);\n        } else if (activeStep === 0 && isConfirmedUser) {\n            dispatch(clearDataExcludingPhone());\n            setIsConfirmedUser(false);\n        } else if (!isConfirmedUser) {\n            onClose();\n        }\n    };\n\n    return isNewUserSuccess || isUserSuccess ? (\n        <Box sx={{ width: '416px' }}>\n            <Congrats\n                title=\"Поздравляем!\"\n                bodyText=\"Вы успешно зарегистрировались в А-Tink bank\"\n                buttonText=\"Продолжить\"\n                onClose={onClose}\n            />\n        </Box>\n    ) : (\n        <Stack\n            spacing={4}\n            sx={{\n                width: '416px',\n                [theme.breakpoints.down('laptop')]: {\n                    margin: '150px 0 0',\n                },\n                [theme.breakpoints.down('tablet')]: {\n                    width: '342px',\n                    margin: '95px 0 0',\n                },\n            }}\n        >\n            <Box\n                sx={{\n                    width: '100%',\n                    display: 'flex',\n                }}\n            >\n                <BackArrowButton onClick={handleBack} />\n            </Box>\n            <Typography\n                variant=\"h3\"\n                sx={{ [theme.breakpoints.down('tablet')]: { fontSize: '20px', lineHeight: '32px' } }}\n            >\n                Регистрация\n            </Typography>\n            {!isConfirmedUser ? (\n                <UserPhoneCheckForm onConfirmedUser={() => setIsConfirmedUser(true)} />\n            ) : (\n                <>\n                    <Stepper\n                        activeStep={activeStep}\n                        stepData={clientStatus === 'NOT_REGISTERED' ? stepDataCLient : stepDataNotCLient}\n                        gap={clientStatus === 'NOT_REGISTERED' ? '88px ' : '0'}\n                        connectorLeft={clientStatus === 'NOT_REGISTERED' ? '-71px' : '16px'}\n                        connectorRight={clientStatus === 'NOT_REGISTERED' ? '17px ' : '16px'}\n                    />\n                    <StepwiseFormContainer\n                        stepData={\n                            clientStatus === 'NOT_REGISTERED'\n                                ? stepDataCLient[activeStep]\n                                : stepDataNotCLient[activeStep]\n                        }\n                        onContinue={handleContinue}\n                        extraInfo={{ mobilePhone: mobilePhone, currentBlock: 'signUp' }}\n                    />\n                </>\n            )}\n            <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n                <Typography variant=\"descriptionRegular\">Уже есть аккаунт?</Typography>\n                <Button variant=\"textButton\" sx={{ ml: '8px' }} onClick={onClose}>\n                    Войти\n                </Button>\n            </Box>\n        </Stack>\n    );\n};\n","import { useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\n\nimport { PageContainer } from 'src/shared/containers/PageContainer';\n\nimport { useMatchesScreen } from 'src/hooks/useMatchesScreen';\nimport { colors } from 'src/theme';\n\nimport { useTabTitle } from 'src/hooks/useTabTitle';\n\nimport { ResetPasswordBlock } from './ResetPasswordBlock';\nimport { Carousel } from './Carousel';\nimport { LoginForm } from './LoginForm';\nimport { DownloadAppBlock } from './DownloadAppBlock';\nimport { carouselData } from './constants';\nimport { RegistrationBlock } from './RegistrationBlock';\n\nexport const IndexPage = () => {\n    const [isResetPage, setIsResetPage] = useState(false);\n    const [isRegistrationPage, setIsRegistrationPage] = useState(false);\n    const theme = useTheme();\n    const { isMobile, isTablet } = useMatchesScreen();\n    const isLowerThanLaptop = isMobile || isTablet;\n    const handleToggleReset = () => {\n        setIsResetPage(!isResetPage);\n    };\n    const handleToggleRegistration = () => {\n        setIsRegistrationPage(!isRegistrationPage);\n    };\n\n    useTabTitle(isRegistrationPage ? 'Регистрация' : 'Вход');\n\n    return (\n        <PageContainer\n            theme=\"black\"\n            headerPosition={isLowerThanLaptop || isTablet ? 'static' : 'absolute'}\n            headerProps={{ background: 'white' }}\n        >\n            <Box\n                component=\"section\"\n                sx={{\n                    position: 'relative',\n                    background:\n                        'radial-gradient(ellipse 55% 67% at 118.47% 0%, hsla(60, 60%, 61%, 0.35), transparent), radial-gradient(ellipse 49.44% 81.4% at 13% 11.5%, #105651 20%, transparent), radial-gradient(ellipse 50% 70% at 102.57% 119.14%,hsla(60, 60%, 61%, 0.3), transparent ) #1E1E1E',\n                    overflow: 'hidden',\n                    [theme.breakpoints.down('laptop')]: {\n                        height: 'auto',\n                        overflowX: 'hidden',\n                        overflowY: 'visible',\n                    },\n                    [theme.breakpoints.down('tablet')]: {\n                        height: 'auto',\n                        overflowX: 'hidden',\n                        overflowY: 'hidden',\n                        background: colors.primary,\n                    },\n                }}\n            >\n                <Box\n                    sx={{\n                        display: 'flex',\n                        [theme.breakpoints.down('laptop')]: {\n                            display: 'block',\n                        },\n                    }}\n                >\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            height: '100vh',\n                            width: '624px',\n                            minWidth: '448px',\n                            background: 'white',\n                            [theme.breakpoints.down('laptop')]: {\n                                width: '100%',\n                                background: 'white',\n                                pt: 0,\n                                pb: '20px',\n                                flexDirection: 'column',\n                                justifyContent: 'space-between',\n                                alignItems: 'center',\n                            },\n                            [theme.breakpoints.down('tablet')]: {\n                                width: '100%',\n                                minWidth: '360px',\n                            },\n                        }}\n                    >\n                        {isResetPage ? (\n                            <ResetPasswordBlock onClose={handleToggleReset} />\n                        ) : isRegistrationPage ? (\n                            <RegistrationBlock onClose={handleToggleRegistration} isOpen={isRegistrationPage} />\n                        ) : (\n                            <LoginForm\n                                onResetPasswordClick={handleToggleReset}\n                                onRegistrationClick={handleToggleRegistration}\n                            />\n                        )}\n                        {isLowerThanLaptop && (\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    width: '100%',\n                                    justifyContent: 'center',\n                                    mb: 3,\n                                    [theme.breakpoints.down('tablet')]: {\n                                        width: '339px',\n                                        height: '88px',\n                                        padding: '0',\n                                        margin: '0 auto',\n                                    },\n                                }}\n                            >\n                                <DownloadAppBlock />\n                            </Box>\n                        )}\n                    </Box>\n                    <Box\n                        sx={{\n                            width: '626px',\n                            height: '100vh',\n                            marginLeft: '55px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            flexDirection: 'column',\n                            justifyContent: 'space-evenly',\n                            position: 'relative',\n                            [theme.breakpoints.down('desktop')]: {\n                                marginLeft: 'auto',\n                                marginRight: 'auto',\n                            },\n                            [theme.breakpoints.down('laptop')]: {\n                                width: '100vw',\n                                height: 'max-content',\n                                margin: '60px auto',\n                            },\n                            [theme.breakpoints.down('tablet')]: {\n                                width: '375px',\n                                margin: 'auto',\n                                justifyContent: 'center',\n                            },\n                        }}\n                    >\n                        <Carousel carouselData={carouselData} hasSwitchDots={true} />\n                        {!isLowerThanLaptop && (\n                            <Box\n                                sx={{\n                                    position: 'relative',\n                                    right: '199px',\n                                    display: 'flex',\n                                    width: '32%',\n                                    alignSelf: 'flex-end',\n                                    justifyContent: 'flex-end',\n                                    pr: 3,\n                                }}\n                            >\n                                <DownloadAppBlock />\n                            </Box>\n                        )}\n                    </Box>\n                </Box>\n            </Box>\n        </PageContainer>\n    );\n};\n","import { Button, ButtonProps } from '@mui/material';\nimport React from 'react';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\n\nexport const BackArrowButton = ({ ...props }: ButtonProps) => {\n    return (\n        <Button variant=\"navigation\" startIcon={<ArrowBackIosIcon sx={{ color: '#9E9E9E' }} />} {...props}>\n            Назад\n        </Button>\n    );\n};\n","import * as Yup from 'yup';\n\nimport { controlQuestionAndAnswerSchema } from 'src/utils/validators';\n\nexport const MAX_SECURITY_QUESTION_SYMBOLS = 50;\n\nexport const ControlQuestionValidSchema = Yup.object().shape({\n    ownQuestion: controlQuestionAndAnswerSchema.max(50, 'Контрольный вопрос не должен быть длиннее 50 символов'),\n    securityAnswer: controlQuestionAndAnswerSchema.max(50, 'Ответ не должен быть длиннее 50 символов'),\n});\n","type GetHelperText = {\n    isFocus: boolean;\n    text: string;\n    symbolCount: number;\n    currentValue: string;\n    errorText?: string;\n};\n\nexport const getHelperText = ({ isFocus, text, symbolCount, currentValue, errorText }: GetHelperText) => {\n    if (!isFocus) return errorText;\n    if (currentValue) return errorText || `${symbolCount} / 50`;\n    return `${text} может содержать символы следующих групп: \n            заглавные и строчные буквы латиницы, заглавные и \n            строчные буквы кириллицы, цифры, специальные`;\n};\n","import { useState, FC, useEffect } from 'react';\n\nimport { Box, Button, Stack, Select, MenuItem, SelectChangeEvent } from '@mui/material';\n\nimport { useFormik } from 'formik';\n\nimport { CustomInput } from 'src/shared/CustomInput';\nimport { SelectArrowUpIcon, SuccessIcon } from 'src/shared/icons';\n\nimport { colors } from 'src/theme';\n\nimport { ControlQuestionValidSchema, MAX_SECURITY_QUESTION_SYMBOLS } from './constants';\nimport { getHelperText } from './utils';\n\nconst itemsList = [\n    'Девичья фамилия матери',\n    'Имя лучшего друга из детства',\n    'Любимая книга',\n    'Любимый цвет',\n    'Любимое блюдо',\n    'Написать свой вопрос',\n];\n\ntype ControlQuestionPropsType = {\n    currentQuestion?: string;\n    buttonText?: string;\n    onContinue: (value: { securityQuestion: string; securityAnswer: string }) => void;\n    error?: boolean;\n};\n\nexport const ControlQuestion: FC<ControlQuestionPropsType> = ({\n    currentQuestion,\n    onContinue,\n    buttonText = 'Продолжить',\n    error,\n}) => {\n    const [currentItem, setCurrentItem] = useState(() => itemsList[0]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [isFocusOwnQuestion, setIsFocusOwnQuestion] = useState(false);\n    const [isFocusSecurityAnswer, setIsFocusSecurityAnswer] = useState(false);\n\n    const formik = useFormik({\n        initialValues: {\n            ownQuestion: '',\n            securityAnswer: '',\n        },\n        validationSchema: ControlQuestionValidSchema,\n        onSubmit: (value, { resetForm }) => {\n            onContinue({\n                securityQuestion: value.ownQuestion || currentItem,\n                securityAnswer: value.securityAnswer,\n            });\n            resetForm();\n        },\n    });\n\n    useEffect(() => {\n        if (currentQuestion) {\n            if (!itemsList.includes(currentQuestion)) itemsList.push(currentQuestion);\n            setCurrentItem(currentQuestion);\n        }\n        return () => {\n            if (itemsList.length > 6) {\n                itemsList.pop();\n            }\n        };\n    }, [currentQuestion]);\n\n    const handleChange = (event: SelectChangeEvent) => {\n        setCurrentItem(event.target.value);\n    };\n\n    const handleOwnQuestionFocus = () => {\n        setIsFocusOwnQuestion(!isFocusOwnQuestion);\n    };\n\n    const handleSecurityAnswerFocus = () => {\n        setIsFocusSecurityAnswer(!isFocusSecurityAnswer);\n    };\n\n    const handleToggleSelect = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const handleClearClick = (value: string) => {\n        formik.setFieldValue(value, '');\n    };\n\n    const symbolsOwnQuestionLeft = MAX_SECURITY_QUESTION_SYMBOLS - formik.values.ownQuestion.length;\n    const symbolsSecurityAnswerLeft = MAX_SECURITY_QUESTION_SYMBOLS - formik.values.securityAnswer.length;\n\n    const selectStyle = {\n        fontSize: 16,\n        color: colors.primary,\n        '&.MuiOutlinedInput-root fieldset': {\n            border: 'none',\n        },\n        '& .MuiInputBase-input': {\n            padding: 0,\n            '& .MuiSvgIcon-root': {\n                display: 'none',\n            },\n        },\n    };\n\n    const isButtonDisabled =\n        (currentItem === 'Написать свой вопрос' && !formik.values.ownQuestion) ||\n        !formik.values.securityAnswer ||\n        !formik.isValid;\n\n    return (\n        <Box component=\"form\" onSubmit={formik.handleSubmit}>\n            <Stack spacing={3}>\n                <Select\n                    variant=\"outlined\"\n                    sx={selectStyle}\n                    defaultValue={currentQuestion}\n                    value={currentItem}\n                    open={isOpen}\n                    onClose={handleToggleSelect}\n                    onOpen={handleToggleSelect}\n                    onChange={handleChange}\n                    IconComponent={(props) => <SelectArrowUpIcon {...props} />}\n                >\n                    {itemsList.map((item, index) => (\n                        <MenuItem\n                            disableRipple={true}\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'space-between',\n                                alignItems: 'center',\n                                '&.MuiMenuItem-root': {\n                                    '&.Mui-selected': { background: 'none', fontWeight: 600 },\n                                },\n                            }}\n                            key={index}\n                            value={item}\n                        >\n                            {item}\n                            {currentItem === item && <SuccessIcon />}\n                        </MenuItem>\n                    ))}\n                </Select>\n                {currentItem === 'Написать свой вопрос' && (\n                    <CustomInput\n                        id=\"ownQuestion\"\n                        label=\"Введите контрольный вопрос\"\n                        type=\"text\"\n                        name=\"ownQuestion\"\n                        fullWidth={true}\n                        isClearable={true}\n                        multiline={true}\n                        value={formik.values.ownQuestion}\n                        onBlur={handleOwnQuestionFocus}\n                        onFocus={handleOwnQuestionFocus}\n                        error={symbolsOwnQuestionLeft < 0 || !!formik.errors.ownQuestion}\n                        helperText={getHelperText({\n                            isFocus: isFocusOwnQuestion,\n                            text: 'Вопрос',\n                            symbolCount: symbolsOwnQuestionLeft,\n                            currentValue: formik.values.ownQuestion,\n                            errorText: formik.errors.ownQuestion,\n                        })}\n                        onChange={formik.handleChange}\n                        onClear={() => handleClearClick('ownQuestion')}\n                    />\n                )}\n                <CustomInput\n                    id=\"securityAnswer\"\n                    label=\"Введите ответ на контрольный вопрос\"\n                    type=\"text\"\n                    name=\"securityAnswer\"\n                    fullWidth={true}\n                    isClearable={true}\n                    onBlur={handleSecurityAnswerFocus}\n                    onFocus={handleSecurityAnswerFocus}\n                    value={formik.values.securityAnswer}\n                    error={symbolsSecurityAnswerLeft < 0 || !!formik.errors.securityAnswer || error}\n                    helperText={\n                        getHelperText({\n                            isFocus: isFocusSecurityAnswer,\n                            text: 'Ответ',\n                            symbolCount: symbolsSecurityAnswerLeft,\n                            currentValue: formik.values.securityAnswer,\n                            errorText: formik.errors.securityAnswer,\n                        }) ||\n                        (error && 'Что-то не так, повторите отправку')\n                    }\n                    onChange={formik.handleChange}\n                    onClear={() => handleClearClick('securityAnswer')}\n                />\n\n                <Button\n                    sx={{ marginTop: '60px' }}\n                    fullWidth={true}\n                    variant=\"primary\"\n                    type=\"submit\"\n                    disabled={isButtonDisabled}\n                >\n                    {buttonText}\n                </Button>\n            </Stack>\n        </Box>\n    );\n};\n","import { BeforeMaskedStateChangeStates } from 'react-input-mask';\n\nconst getIsStartNumber = (startSymbol: string): boolean => {\n    switch (startSymbol) {\n        case '8':\n            return true;\n        case '9':\n            return true;\n        default:\n            return false;\n    }\n};\n\nexport function beforeMaskedStateChange({ nextState, currentState }: BeforeMaskedStateChangeStates) {\n    let { value } = nextState;\n    let selection = nextState.selection;\n    const cursorPosition = selection ? selection.start : null;\n    const lengthWithPlusSeven = 30;\n    const lengthWithEightOrNine = 29;\n\n    const startValueWithPlusSeven = currentState.value.slice(4, 6) === '+7';\n\n    const startSymbol = currentState.value.slice(4, 5);\n\n    const isStartNumber = getIsStartNumber(startSymbol);\n\n    if (currentState.value.length === lengthWithPlusSeven && startValueWithPlusSeven) {\n        value = currentState.value.slice(4, 16);\n    }\n    if (currentState.value.length === lengthWithEightOrNine && isStartNumber) {\n        value = '+7' + currentState.value.slice(5, 15);\n    }\n    if (cursorPosition && !value.includes('_')) {\n        selection = { start: value.length, end: value.length };\n    }\n\n    return {\n        value,\n        selection,\n    };\n}\n","import React, { useState } from 'react';\nimport InputMask from 'react-input-mask';\n\nimport { FormControl, FormHelperText, InputBase, InputLabel, InputBaseProps } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { DeleteIcon, ShowPassIcon, HidePassIcon } from 'src/shared/icons';\nimport { colors } from 'src/theme';\n\nimport { beforeMaskedStateChange } from './utils';\n\ntype MyInputProps = InputBaseProps & {\n    id: string;\n    label?: string;\n    value?: string;\n    type: string;\n    mask?: string;\n    helperText?: string | boolean;\n    isClearable?: boolean;\n    onClear?: VoidFunction;\n    defaultMaskedValue?: string;\n};\n\nexport const CustomInput = ({\n    id,\n    label,\n    value,\n    type,\n    error,\n    helperText,\n    isClearable,\n    onClear,\n    mask,\n    onChange,\n    defaultMaskedValue = '',\n    ...rest\n}: MyInputProps) => {\n    const [isCapslockOn, setIsCapslockOn] = useState<boolean>(false);\n    const [isShowPassword, setShowPassword] = useState(false);\n    const theme = useTheme();\n    const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        setIsCapslockOn(e.getModifierState('CapsLock'));\n    };\n    const handleTogglePasswordClick = () => {\n        setShowPassword(!isShowPassword);\n    };\n\n    const passwordShowButton = isShowPassword ? (\n        <HidePassIcon data-testid={`${id}-hideIcon`} onClick={handleTogglePasswordClick} sx={{ cursor: 'pointer' }} />\n    ) : (\n        <ShowPassIcon data-testid={`${id}-showIcon`} onClick={handleTogglePasswordClick} sx={{ cursor: 'pointer' }} />\n    );\n\n    const endAdornmentAttributes =\n        value && isClearable && value !== defaultMaskedValue ? (\n            <DeleteIcon data-testid={`${id}-deleteIcon`} onMouseDown={onClear} sx={{ cursor: 'pointer' }} />\n        ) : !isClearable && type === 'password' ? (\n            passwordShowButton\n        ) : (\n            rest.endAdornment\n        );\n\n    const style = {\n        'label + &': {\n            marginTop: 3,\n        },\n        '&.MuiInputBase-root': {\n            [theme.breakpoints.down('tablet')]: {\n                fontSize: '14px',\n                lineHeight: '24px',\n            },\n            height: '44px',\n            borderRadius: '4px',\n            border: `1px solid ${colors.neutral400}`,\n            fontSize: 16,\n            padding: '10px 16px',\n            fontFamily: 'SF Pro Display, sans-serif',\n            '&.Mui-error': {\n                border: `1px solid ${colors.alert}`,\n            },\n            '&.Mui-focused': {\n                border: `1px solid ${colors.neutral600}`,\n                '&.Mui-error': {\n                    border: `1px solid ${colors.alert}`,\n                },\n            },\n        },\n    };\n\n    const combinedHelperText = helperText || (isCapslockOn && 'Включен CapsLock');\n    return mask ? (\n        <InputMask\n            mask={mask}\n            maskPlaceholder=\"_\"\n            alwaysShowMask={true}\n            onChange={onChange}\n            type={type}\n            beforeMaskedStateChange={type === 'tel' ? beforeMaskedStateChange : undefined}\n        >\n            <FormControl variant=\"standard\">\n                <InputLabel shrink={true} htmlFor={id}>\n                    {label}\n                </InputLabel>\n                <InputBase\n                    id={id}\n                    aria-describedby={`${id}-helper-text`}\n                    error={error}\n                    value={value || defaultMaskedValue}\n                    onKeyDown={handleKeyPress}\n                    {...rest}\n                    endAdornment={endAdornmentAttributes}\n                    inputProps={{ ...rest.inputProps }}\n                    sx={style}\n                />\n                <FormHelperText error={error} id={`${id}-helper-text`} data-testid={`${id}-helpText`}>\n                    {helperText}\n                </FormHelperText>\n            </FormControl>\n        </InputMask>\n    ) : (\n        <FormControl fullWidth={rest.fullWidth} variant=\"standard\">\n            <InputLabel shrink={true} htmlFor={id}>\n                {label}\n            </InputLabel>\n            <InputBase\n                id={id}\n                aria-describedby={`${id}-helper-text`}\n                value={value}\n                type={type === 'password' && isShowPassword ? 'text' : type}\n                onChange={onChange}\n                error={error || isCapslockOn}\n                onKeyDown={handleKeyPress}\n                {...rest}\n                endAdornment={endAdornmentAttributes}\n                inputProps={{ ...rest.inputProps }}\n                sx={style}\n                data-testid={`${id}-inputWrap`}\n            />\n            <FormHelperText error={error || isCapslockOn} id={`${id}-helper-text`} data-testid={`${id}-helpText`}>\n                {combinedHelperText}\n            </FormHelperText>\n        </FormControl>\n    );\n};\n","import { memo } from 'react';\nimport { Radio, InputLabel, Box } from '@mui/material';\nimport { colors } from 'src/theme';\n\ntype DotProps = {\n    checked: boolean;\n    index: number;\n    radioChangeHandler: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const Dot = memo(({ index, checked, radioChangeHandler }: DotProps) => {\n    return (\n        <InputLabel\n            sx={{\n                margin: '0 11px 0 0',\n                '&:first-of-type': {\n                    marginLeft: '0',\n                },\n                '&:last-child': {\n                    marginRight: '0',\n                },\n            }}\n        >\n            <Radio\n                checked={checked}\n                value={index}\n                onChange={radioChangeHandler}\n                name=\"radio-buttons\"\n                sx={{\n                    position: 'absolute',\n                    opacity: 0,\n                }}\n            />\n            <Box\n                sx={{\n                    width: checked ? '40px' : '8px',\n                    height: '6px',\n                    backgroundColor: colors.secondary200,\n                    borderRadius: '10px',\n                    cursor: 'pointer',\n                    transition: 'width 0.5s ease-in-out',\n                }}\n            />\n        </InputLabel>\n    );\n});\n","import { RadioGroup } from '@mui/material';\n\nimport { useEvent } from 'src/hooks/useEvent';\n\nimport { Dot } from './Dot';\n\ntype SwitchDotsProps = {\n    currentIndex: number;\n    itemsQuantity: number;\n    switchHandler: (index: number) => void;\n};\n\nexport const SwitchDots = ({ itemsQuantity, currentIndex, switchHandler }: SwitchDotsProps) => {\n    const radioChangeHandler = useEvent((event: React.ChangeEvent<HTMLInputElement>) => {\n        switchHandler(Number(event.target.value));\n    });\n\n    return (\n        <RadioGroup row={true}>\n            {[...Array(itemsQuantity)].map((_, index) => {\n                const checked = currentIndex === index;\n                return <Dot key={index} index={index} checked={checked} radioChangeHandler={radioChangeHandler} />;\n            })}\n        </RadioGroup>\n    );\n};\n","import { useRef, useLayoutEffect, useCallback } from 'react';\n\ntype callbackType<A extends unknown[], R> = (...args: A) => R;\n\nexport const useEvent = <A extends unknown[], R>(handler: callbackType<A, R>): callbackType<A, R> => {\n    const handlerRef = useRef(handler);\n\n    useLayoutEffect(() => {\n        handlerRef.current = handler;\n    });\n\n    return useCallback((...args) => {\n        const fn = handlerRef.current;\n        return fn(...args);\n    }, []);\n};\n","export const formatNumberToSpacingString = (num: number) => {\n    return new Intl.NumberFormat('ru-RU', { maximumFractionDigits: 2 }).format(num);\n};\n\nexport const formatInputToSpacingString = (str: string) => {\n    if (str.match(/[^\\s\\d.,]/)) return '';\n    if (Number(str.match(/[,.]/g)?.length) > 1) return '';\n    const dividerPosition = str.match(/[,.]/);\n    if (dividerPosition && Number(dividerPosition.index) < str.length - 3) return '';\n    return str.replaceAll(' ', '').replace(/(\\d)(?=(\\d{3})+([^\\d]|$))/g, '$1 ');\n};\n\nexport const convertToNumber = (value: string) => +value.replaceAll(/\\s/g, '').replace(',', '.');\n\nexport const formatPhoneNumberOutput = (phoneNumber: string) => {\n    const pattern = new RegExp(`(^\\\\d{${phoneNumber.length % 10}})(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2}$)`);\n    return phoneNumber.replace(pattern, '+$1 ($2) $3 $4 $5');\n};\n\nexport const formatAmountOutput = (value: string) => value.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, `$1 `);\n\nexport const separateStringByN = (string: string, n: number) => {\n    let result = '';\n    for (let i = 0; i < string.length; i++) {\n        result += string[i];\n        if ((i + 1) % n === 0 && i < string.length - 1) result += ' ';\n    }\n    return result;\n};\n","import * as Yup from 'yup';\nimport YupPassword from 'yup-password';\n\nYupPassword(Yup);\n\nexport const passportPattern = /^[A-Z-0-9]*$/;\n\nexport const questionsPattern = /^[А-ЯЁA-Z]([0-9-a-zа-яё#*+%\\s])[^-]*$/u;\n\nexport const phonePattern = /^[0-9\\s+(\\)']*$/;\n\nexport const userInfoPattern = /^[А-ЯЁA-Z]([-'\\sА-ЯЁA-Zа-яёa-z])*[А-ЯЁA-Zа-яёa-z]$/;\n\nexport const passwordLengthErrorText = 'Длина пароля должна быть от 6 до 20 символов';\n\nexport const minLengthErrorText = 'Недостаточное количество символов';\n\nexport const passportMaxLengthErrorText = 'Длина номера паспорта не может превышать более 15 символов';\n\nexport const passwordErrorText =\n    'Пароль должен содержать символы следующих групп: заглавные и строчные латинские буквы, цифры, специальные';\n\nexport const passwordSchema = Yup.string()\n    .min(6, passwordLengthErrorText)\n    .max(20, passwordLengthErrorText)\n    .minUppercase(1, passwordErrorText)\n    .minLowercase(1, passwordErrorText)\n    .minNumbers(1, passwordErrorText)\n    .minSymbols(1, passwordErrorText)\n    .matches(/^[^\\sА-ЯЁа-яё]*$/, passwordErrorText);\n\nexport const controlQuestionAndAnswerSchema = Yup.string()\n    .min(2, minLengthErrorText)\n    .matches(questionsPattern, 'Использованы недопустимые символы');\n\nexport const validateConverterInput = (value: string): boolean => {\n    const pattern = /(?:[1-9.][0-9.]*)$|^$/;\n\n    const lastIndex = value.length - 1;\n\n    if (!pattern.test(value)) {\n        return false;\n    }\n\n    if (value[lastIndex] === '.' && value.indexOf('.') < lastIndex) {\n        return false;\n    }\n\n    return true;\n};\n"],"names":["Congrats","_ref","title","bodyText","buttonText","onClose","dispatch","useAppDispatch","_jsxs","Stack","spacing","sx","display","alignItems","children","_jsx","Box","component","src","CongratsImg","alt","ml","width","height","Typography","variant","justifyContent","textAlign","Button","fullWidth","onClick","clearAllResetData","Connector","styled","StepConnector","_ref2","left","right","_defineProperty","concat","stepConnectorClasses","color","colors","border","span","borderColor","theme","StepIconRoot","ownerState","_objectSpread","active","marginTop","borderRadius","backgroundColor","StepIcon","completed","className","CheckCircleIcon","viewBox","Stepper","memo","dataTestId","activeStep","gap","connectorLeft","connectorRight","stepData","useTheme","MuiStepper","alternativeLabel","connector","padding","breakpoints","down","columnGap","map","item","Step","step","StepLabel","StepIconComponent","lineHeight","fontFamily","fontWeight","fontSize","label","StepwiseFormContainer","onContinue","extraInfo","errorMessage","FormComponent","stepInfo","CreatePasswordValidSchema","Yup","shape","newPassword","passwordSchema","confirmPassword","oneOf","CreatePasswordForm","_ref$buttonText","_useState","useState","_useState2","_slicedToArray","isFocusNewPassword","setIsFocusNewPassword","formik","useFormik","initialValues","validationSchema","onSubmit","value","handleNewPasswordFocus","handleSubmit","CustomInput","id","name","type","values","onBlur","onFocus","onChange","handleChange","error","errors","helperText","disabled","isValid","cutAllButDigits","str","replace","SmsCodeInput","inputLength","sendedText","onInputFinished","code","setCode","_useState3","_useState4","activeIndex","setActiveIndex","activeInputRef","useRef","useEffect","_activeInputRef$curre","current","focus","length","test","handleCellChange","i","e","val","target","isDeletionCase","slice","handleKeyDown","key","preventDefault","stopPropagation","htmlFor","fontStyle","marginBottom","onPaste","pastedText","clipboardData","getData","Array","fill","el","Input","inputProps","autoComplete","inputRef","disableUnderline","onKeyDown","background","FormHelperText","SmsTimer","minutes","seconds","tryCounter","onRefreshSms","isOver","setIsOver","_useState4$","m","s","setTime","reset","min","sec","timerID","setInterval","clearInterval","Link","toString","padStart","SmsCodeForm","setTryCounter","isSmsCodeError","setIsSmsCodeError","_useGetSmsCodeQuery","useGetSmsCodeQuery","mobilePhone","data","isSuccess","refetch","userService","alert","verificationCode","smsCode","inputPhone","currentBlock","formatPhoneNumberOutput","smsErrorHelperText","setFieldValue","prev","mt","PasportValidSchema","passNumber","matches","passportPattern","minLengthErrorText","max","passportMaxLengthErrorText","clearErrorMessage","isClearable","onClear","ResetPasswordBlock","setStep","_useAppSelector","useAppSelector","selectResetPassData","token","successMsg","margin","BackArrowButton","requestPhoneNumber","passportNumber","requestVerificateStatus","smsVerificationCode","needTokenInReturn","requestChangePassword","CallToAction","opacity","subtitle","image","link","maxWidth","position","bottom","transition","letterSpacing","Carousel","_ref4","_ref5","carouselData","_ref$hasSwitchDots","hasSwitchDots","_ref$interval","interval","currentIndex","setCurrentIndex","_useMatchesScreen","useMatchesScreen","isMobile","isTablet","isLowerThanLaptop","carouselItemsQuantity","slideInterval","setTimeout","clearTimeout","IconButton","disableRipple","disableTouchRipple","zIndex","index","ArrowBackIcon","marginLeft","flexDirection","h2","h6","SwitchDots","itemsQuantity","switchHandler","checkedRadioIndex","RouterLink","to","ArrowForwardIcon","a","LoginSchema","passport","password","LoginForm","onResetPasswordClick","onRegistrationClick","isFocusPassword","setIsFocusPassword","navigate","useNavigate","auth","selectAuthToken","_useLogInMutation","useLogInMutation","_useLogInMutation2","loginUser","_useLogInMutation2$","isLoading","isError","phone","handleLoginClick","AppRoutes","formattedPhone","handlePasswordFocus","isPhoneInvalid","includes","alignSelf","paddingLeft","ErrCircleIcon","mask","defaultMaskedValue","handleBlur","setFieldTouched","touched","DownloadAppBlock","MobileStoreButtons","radioStyle","pr","ResidenceRadio","currentResidence","event","RadioGroup","row","FormControlLabel","control","Radio","checked","mr","userInfoValidation","userInfoPattern","PersonalInfoFormValidSchema","firstName","lastName","middleName","pasNumber","stepDataNotCLient","selectedResidence","setSelectedResidence","residence","handleClearClick","isButtonDisabled","ControlQuestion","stepDataCLient","Agreement","linkText","defaultFontSize","isOpen","setIsOpen","isStartVisible","setIsStartVisible","_useState5","_useState6","isEndVisible","setIsEndVisible","_useState7","_useState8","isDialogLoaded","setIsDialogLoaded","dialogRef","startRef","endRef","handleClose","handleStartIntersect","entries","isIntersecting","handleEndIntersect","options","root","rootMargin","threshold","startObserver","IntersectionObserver","endObserver","startElem","endElem","observe","unobserve","_Fragment","verticalAlign","Dialog","open","onTransitionEnd","overflow","backdropFilter","p","mobile","tablet","desktop","maxHeight","Suspense","DialogContent","ref","top","pointerEvents","Close","cursor","flexShrink","py","PrivacyPolicy","lazilyLoadNameExportedComponent","TermsAndConditions","UserPhoneCheckForm","onConfirmedUser","setChecked","selectRegistrationData","clientStatus","userPhone","isUserPhoneInvalid","checkUserInfo","clearAllRegisterData","pt","pb","Checkbox","icon","NonCheckedIcon","checkedIcon","CheckedIcon","RegistrationBlock","securityQuestion","securityAnswer","userInfo","setUserInfo","isConfirmedUser","setIsConfirmedUser","_useCreateNewUserMuta","useCreateNewUserMutation","_useCreateNewUserMuta2","createNewUser","isNewUserSuccess","_useCreateUserMutatio","useCreateUserMutation","_useCreateUserMutatio2","createUser","isUserSuccess","sendNewUser","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","wrap","_context","next","passwordEncoded","email","identificationPassportNumber","residentOfRussia","stop","_x","_x2","_x3","_x4","apply","arguments","sendUser","_ref3","_callee2","_context2","phoneNumber","_x5","_x6","_x7","_x8","clearDataExcludingPhone","state","IndexPage","isResetPage","setIsResetPage","isRegistrationPage","setIsRegistrationPage","handleToggleReset","handleToggleRegistration","useTabTitle","PageContainer","headerPosition","headerProps","overflowX","overflowY","minWidth","mb","marginRight","props","Object","assign","_objectDestructuringEmpty","startIcon","ArrowBackIosIcon","ControlQuestionValidSchema","ownQuestion","controlQuestionAndAnswerSchema","getHelperText","isFocus","text","symbolCount","currentValue","errorText","itemsList","currentQuestion","currentItem","setCurrentItem","isFocusOwnQuestion","setIsFocusOwnQuestion","isFocusSecurityAnswer","setIsFocusSecurityAnswer","resetForm","push","pop","handleOwnQuestionFocus","handleSecurityAnswerFocus","handleToggleSelect","symbolsOwnQuestionLeft","symbolsSecurityAnswerLeft","selectStyle","Select","defaultValue","onOpen","IconComponent","SelectArrowUpIcon","MenuItem","SuccessIcon","multiline","beforeMaskedStateChange","nextState","currentState","selection","cursorPosition","start","startValueWithPlusSeven","isStartNumber","startSymbol","getIsStartNumber","end","_MuiInputBaseRoot","_ref$defaultMaskedVal","rest","_objectWithoutProperties","_excluded","isCapslockOn","setIsCapslockOn","isShowPassword","setShowPassword","handleKeyPress","getModifierState","handleTogglePasswordClick","passwordShowButton","HidePassIcon","ShowPassIcon","endAdornmentAttributes","DeleteIcon","onMouseDown","endAdornment","style","combinedHelperText","InputMask","maskPlaceholder","alwaysShowMask","undefined","FormControl","InputLabel","shrink","InputBase","Dot","radioChangeHandler","handler","handlerRef","useLayoutEffect","useCallback","useEvent","Number","_toConsumableArray","_","formatNumberToSpacingString","num","Intl","NumberFormat","maximumFractionDigits","format","formatInputToSpacingString","_str$match","match","dividerPosition","replaceAll","convertToNumber","pattern","RegExp","formatAmountOutput","separateStringByN","string","n","result","YupPassword","passwordLengthErrorText","passwordErrorText","minUppercase","minLowercase","minNumbers","minSymbols"],"sourceRoot":""}