{"version":3,"file":"static/js/161.2b04538e.chunk.js","mappings":"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","sources":["utils/calculateDurationMonths.ts","components/MainPage/Deposits/DepositDetails.tsx","components/MainPage/Deposits/constants.ts","shared/cards/Deposit.tsx"],"sourcesContent":["export const calculateDurationMonths = (end: string, start: string) => {\n    const [endYear, endMonth]: string[] = end.split('-');\n    const [startYear, startMonth]: string[] = start.split('-');\n\n    let result = parseInt(endMonth) - parseInt(startMonth);\n    if (parseInt(endMonth) - parseInt(startMonth) === 0) {\n        result = Math.abs((parseInt(endYear) - parseInt(startYear)) * 12);\n    }\n\n    return result;\n};\n","import { useState, ChangeEvent, useMemo } from 'react';\nimport { Box, Button, Stack, Switch, Typography, Link } from '@mui/material';\nimport { Link as RouterLink, useParams } from 'react-router-dom';\n\nimport { DepositCard } from 'src/shared/cards/Deposit';\n\nimport { ComingSoonModal } from 'src/shared/ComingSoonModal';\n\nimport { colors } from 'src/theme';\n\nimport { separateStringByN } from 'src/utils/inputFormatters';\nimport { calculateDurationMonths } from 'src/utils/calculateDurationMonths';\n\nimport { BackArrowButton } from 'src/shared/BackArrowButton';\nimport {\n    useGetDepositDetailsQuery,\n    useUpdateActiveStatusMutation,\n    useUpdateRenewalStatusMutation,\n} from 'src/redux/apis/depositService';\n\nimport { AppRoutes } from 'src/constants';\nimport { Plate } from 'src/shared/Plate';\n\nimport { useTabTitle } from 'src/hooks/useTabTitle';\n\nimport { InfoTable } from 'src/shared/InfoTable';\n\nconst switchStyle = {\n    pr: 0,\n    pl: '18px',\n    '& .MuiButtonBase-root': {\n        '&.MuiSwitch-switchBase': {\n            pl: '18px',\n            color: colors.neutral0,\n            '&:hover': {\n                background: 'none',\n            },\n            '& + .MuiSwitch-track': {\n                background: colors.neutral400,\n            },\n            '&.Mui-checked': {\n                color: colors.secondary600,\n                '& + .MuiSwitch-track': {\n                    background: colors.secondary200,\n                },\n            },\n        },\n    },\n};\n\nexport const DepositDetails = () => {\n    const [open, setOpen] = useState(false);\n    const { id = '' } = useParams();\n    const { data: depositDetails } = useGetDepositDetailsQuery(id);\n    const [updateRenewalStatus] = useUpdateRenewalStatusMutation();\n    const [updateActiveStatus, { isError }] = useUpdateActiveStatusMutation();\n\n    useTabTitle(depositDetails?.name || '');\n    const handleRenewableStatus = (e: ChangeEvent<HTMLInputElement>) =>\n        updateRenewalStatus({\n            agreementId: id,\n            autoRenewal: e.target.checked,\n        });\n\n    const handleDepositRevocation = () => {\n        updateActiveStatus({ agreementId: id, accountNumber: depositDetails?.accountNumber });\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const depositTableData = useMemo(() => {\n        return depositDetails\n            ? [\n                  { id: 1, title: 'Название депозита', info: `${depositDetails.name}`, copyButton: false },\n                  {\n                      id: 2,\n                      title: 'Номер счета',\n                      info: `${separateStringByN(depositDetails.accountNumber, 4)}`,\n                      copyButton: true,\n                  },\n                  {\n                      id: 3,\n                      title: 'Процентная ставка',\n                      info: `${String(depositDetails.interestRate)} %`,\n                      copyButton: false,\n                  },\n                  { id: 4, title: 'Срок действия', info: `Действует до ${depositDetails.endDate}`, copyButton: false },\n                  {\n                      id: 5,\n                      title: 'Капитализация',\n                      info: `${depositDetails.capitalization ? 'Предусмотрено' : 'Не предусмотрено'}`,\n                      copyButton: false,\n                  },\n                  {\n                      id: 6,\n                      title: 'Досрочное расторжение',\n                      info: `${depositDetails.revocable ? 'Предусмотрено' : 'Не предусмотрено'}`,\n                      copyButton: false,\n                  },\n              ]\n            : null;\n    }, [depositDetails]);\n\n    return (\n        <Box sx={{ padding: { tablet: '0 36px', mobile: '0 24px' } }}>\n            <Stack spacing=\"44px\">\n                <Link component={RouterLink} to={AppRoutes.depositsRoute} underline=\"none\">\n                    <BackArrowButton sx={{ color: colors.primary, svg: { color: colors.primary } }} />\n                </Link>\n                {depositDetails === undefined ? (\n                    <Plate message=\"Нет информации по данному депозиту\" />\n                ) : (\n                    <>\n                        <Typography variant=\"subtitle2Semibold\" sx={{ lineHeight: '30px' }}>\n                            {`Депозит «${depositDetails.name}»`}\n                        </Typography>\n                        <Stack direction=\"row\" spacing={2}>\n                            <Stack spacing=\"56px\" alignItems=\"flex-start\">\n                                <Stack spacing=\"24px\" maxWidth=\"282px\">\n                                    <DepositCard\n                                        currencyCode={depositDetails.currencyCode}\n                                        name={depositDetails.name}\n                                        amountMin={depositDetails.currentBalance}\n                                        durationMonths={calculateDurationMonths(\n                                            depositDetails.endDate,\n                                            depositDetails.startDate\n                                        )}\n                                        size=\"large\"\n                                    />\n                                    <Button\n                                        variant=\"primary\"\n                                        sx={{ marginTop: '20px' }}\n                                        onClick={handleDepositRevocation}\n                                    >\n                                        Отозвать депозит\n                                    </Button>\n                                    {isError ? (\n                                        <Plate\n                                            message=\"Не удалось отозвать депозит\"\n                                            sx={{ border: 1, borderColor: colors.alert }}\n                                        />\n                                    ) : null}\n                                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n                                        <Typography variant=\"descriptionRegular\">Автоматическое продление</Typography>\n                                        <Switch\n                                            sx={switchStyle}\n                                            disableRipple={true}\n                                            checked={depositDetails.autoRenewal}\n                                            onChange={handleRenewableStatus}\n                                        />\n                                    </Stack>\n                                </Stack>\n                            </Stack>\n                            <InfoTable data={depositTableData} />\n                        </Stack>\n                    </>\n                )}\n\n                <ComingSoonModal isOpen={open} onClose={handleClose} />\n            </Stack>\n        </Box>\n    );\n};\n","import depositRubleCover from 'src/images/cardCovers/depositRubleCover.png';\nimport depositDollarCover from 'src/images/cardCovers/depositDollarCover.png';\nimport depositEuroCover from 'src/images/cardCovers/depositEuroCover.png';\n\nexport const depositCardCovers = {\n    RUB: depositRubleCover,\n    USD: depositDollarCover,\n    EUR: depositEuroCover,\n    CNY: depositEuroCover,\n};\n","import { Stack, Typography } from '@mui/material';\nimport { depositCardCovers } from 'src/components/MainPage/Deposits/constants';\nimport { currencyData } from 'src/services/exchangeRatesService/currencyData';\nimport { colors } from 'src/theme';\nimport { formatAmountOutput } from 'src/utils/inputFormatters';\n\nimport { BaseCard } from './Base';\n\nexport type DepositCardProps = {\n    name: string;\n    amountMin: number;\n    durationMonths: number;\n    currencyCode: string;\n    size?: 'normal' | 'large';\n};\n\nexport const DepositCard = ({ name, amountMin, durationMonths, currencyCode, size = 'normal' }: DepositCardProps) => {\n    return (\n        <BaseCard\n            cardCover={{\n                imgSrc: depositCardCovers[currencyCode as keyof typeof depositCardCovers],\n                defaultBackgroundColor: colors.creditCoverBlue,\n            }}\n            size={size}\n        >\n            <Typography\n                variant=\"descriptionSemiBold\"\n                sx={{\n                    lineHeight: '19px',\n                    color: colors.neutral0,\n                }}\n            >\n                {`«${name}»`}\n            </Typography>\n            <Stack\n                spacing=\"33px\"\n                sx={{\n                    color: colors.neutral0,\n                }}\n            >\n                <Typography variant=\"descriptionSemiBold\" sx={{ lineHeight: '28px', fontSize: '24px' }}>\n                    {`от ${formatAmountOutput(String(amountMin))} ${\n                        currencyData[currencyCode as keyof typeof currencyData].symbol\n                    }`}\n                </Typography>\n                <Typography>{`${durationMonths} месяцев`}</Typography>\n            </Stack>\n        </BaseCard>\n    );\n};\n"],"names":["calculateDurationMonths","end","start","_end$split","split","_end$split2","_slicedToArray","endYear","endMonth","_start$split","_start$split2","startYear","startMonth","result","parseInt","Math","abs","switchStyle","pr","pl","color","colors","background","DepositDetails","_useState","useState","_useState2","open","setOpen","_useParams$id","useParams","id","depositDetails","useGetDepositDetailsQuery","data","_useUpdateRenewalStat","useUpdateRenewalStatusMutation","updateRenewalStatus","_useUpdateActiveStatu","useUpdateActiveStatusMutation","_useUpdateActiveStatu2","updateActiveStatus","isError","useTabTitle","name","depositTableData","useMemo","title","info","concat","copyButton","separateStringByN","accountNumber","String","interestRate","endDate","capitalization","revocable","_jsx","Box","sx","padding","tablet","mobile","children","_jsxs","Stack","spacing","Link","component","RouterLink","to","AppRoutes","underline","BackArrowButton","svg","undefined","Plate","message","_Fragment","Typography","variant","lineHeight","direction","alignItems","maxWidth","DepositCard","currencyCode","amountMin","currentBalance","durationMonths","startDate","size","Button","marginTop","onClick","agreementId","border","borderColor","justifyContent","Switch","disableRipple","checked","autoRenewal","onChange","e","target","InfoTable","ComingSoonModal","isOpen","onClose","depositCardCovers","RUB","depositRubleCover","USD","depositDollarCover","EUR","depositEuroCover","CNY","_ref","_ref$size","BaseCard","cardCover","imgSrc","defaultBackgroundColor","fontSize","formatAmountOutput","currencyData","symbol"],"sourceRoot":""}