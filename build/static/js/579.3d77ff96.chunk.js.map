{"version":3,"file":"static/js/579.3d77ff96.chunk.js","mappings":"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","sources":["services/regionLocationService/regionData.ts","services/regionLocationService/regionLocationService.ts","components/BranchesAndAtms/CookieBanner.tsx","components/BranchesAndAtms/MapContainer/CustomMap/MapControls.tsx","components/BranchesAndAtms/MapContainer/CustomMap/UserLocationMarker.tsx","components/BranchesAndAtms/MapContainer/CustomMap/PortalToYMark.tsx","hooks/useDelayedCallback.ts","components/BranchesAndAtms/MapContainer/CustomMap/index.tsx","utils/splitByFirstMatch.ts","components/BranchesAndAtms/MapContainer/RegionDialog.tsx","components/BranchesAndAtms/MapContainer/SearchBlock.tsx","shared/Accordion.tsx","components/BranchesAndAtms/MapContainer/SideBox/WorkingHourInfo.tsx","components/BranchesAndAtms/MapContainer/SideBox/BranchPreview.tsx","components/BranchesAndAtms/MapContainer/SideBox/constants.tsx","components/BranchesAndAtms/MapContainer/SideBox/DetailedMarkInfo.tsx","components/BranchesAndAtms/MapContainer/SideBox/Filters.tsx","components/BranchesAndAtms/MapContainer/SideBox/NoResults.tsx","components/BranchesAndAtms/MapContainer/SideBox/MobileActiveBranch.tsx","components/BranchesAndAtms/MapContainer/SideBox/MobileSideBox.tsx","components/BranchesAndAtms/MapContainer/SideBox/index.tsx","components/BranchesAndAtms/MapContainer/QuickFilters.tsx","components/BranchesAndAtms/MapContainer/index.tsx","components/BranchesAndAtms/MapContainer/RegionConfirm.tsx","components/BranchesAndAtms/index.tsx","hooks/useGeoLocation.ts","shared/ToggleButton.tsx","shared/WarningModal.tsx"],"sourcesContent":["export const popularCities = [\n    'Санкт-Петербург',\n    'Челябинск',\n    'Омск',\n    'Нижний Новгород',\n    'Ростов-на-Дону',\n    'Екатеринбург',\n    'Казань',\n    'Новосибирск',\n];\n\nexport const cities: { [key: string]: number[] } = {\n    Архангельск: [64.539304, 40.518735],\n    Астана: [71.430564, 51.128422],\n    Астрахань: [46.347869, 48.033574],\n    Барнаул: [53.356132, 83.74962],\n    Белгород: [50.597467, 36.588849],\n    Бийск: [52.541444, 85.219686],\n    Бишкек: [42.871027, 74.59452],\n    Благовещенск: [50.290658, 127.527173],\n    Братск: [56.151382, 101.634152],\n    Брянск: [53.2434, 34.364198],\n    'Великий Новгород': [58.521475, 31.275475],\n    Владивосток: [43.134019, 131.928379],\n    Владикавказ: [43.024122, 44.690476],\n    Владимир: [56.129042, 40.40703],\n    Волгоград: [48.707103, 44.516939],\n    Вологда: [59.220492, 39.891568],\n    Воронеж: [51.661535, 39.200287],\n    Грозный: [43.317992, 45.698197],\n    Донецк: [48.015877, 37.80285],\n    Екатеринбург: [56.838002, 60.597295],\n    Иваново: [57.000348, 40.973921],\n    Ижевск: [56.852775, 53.211463],\n    Иркутск: [52.286387, 104.28066],\n    Казань: [55.795793, 49.106585],\n    Калининград: [55.916229, 37.854467],\n    Калуга: [54.507014, 36.252277],\n    'Каменск-Уральский': [56.414897, 61.918905],\n    Кемерово: [55.359594, 86.087781],\n    Киев: [50.402395, 30.53269],\n    Киров: [54.079033, 34.323163],\n    'Комсомольск-на-Амуре': [50.54986, 137.007867],\n    Королев: [55.916229, 37.854467],\n    Кострома: [57.767683, 40.926418],\n    Краснодар: [45.023877, 38.970157],\n    Красноярск: [56.008691, 92.870529],\n    Курск: [51.730361, 36.192647],\n    Липецк: [52.61022, 39.594719],\n    Магнитогорск: [53.411677, 58.984415],\n    Махачкала: [42.984913, 47.504646],\n    Минск: [53.906077, 27.554914],\n    Москва: [55.751534, 37.573856],\n    Мурманск: [68.969563, 33.07454],\n    'Набережные Челны': [55.743553, 52.39582],\n    'Нижний Новгород': [56.323902, 44.002267],\n    'Нижний Тагил': [57.910144, 59.98132],\n    Новокузнецк: [53.786502, 87.155205],\n    Новороссийск: [44.723489, 37.76866],\n    Новосибирск: [55.028739, 82.906928],\n    Норильск: [69.349039, 88.201014],\n    Омск: [54.989342, 73.368212],\n    Орел: [52.970306, 36.063514],\n    Оренбург: [51.76806, 55.097449],\n    Пенза: [53.194546, 45.019529],\n    Первоуральск: [56.908099, 59.942935],\n    Пермь: [58.004785, 56.237654],\n    Прокопьевск: [53.895355, 86.744657],\n    Псков: [57.819365, 28.331786],\n    'Ростов-на-Дону': [47.227151, 39.744972],\n    Рыбинск: [58.13853, 38.573586],\n    Рязань: [54.619886, 39.744954],\n    Самара: [53.195533, 50.101801],\n    'Санкт-Петербург': [59.938806, 30.314278],\n    Саратов: [51.531528, 46.03582],\n    Севастополь: [44.616649, 33.52536],\n    Северодвинск: [64.558186, 39.82962],\n    Симферополь: [44.952116, 34.102411],\n    Сочи: [43.581509, 39.722882],\n    Ставрополь: [45.044502, 41.969065],\n    Сухум: [43.015679, 41.025071],\n    Тамбов: [52.721246, 41.452238],\n    Ташкент: [41.314321, 69.267295],\n    Тверь: [56.859611, 35.911896],\n    Тольятти: [53.511311, 49.418084],\n    Томск: [56.495116, 84.972128],\n    Тула: [54.193033, 37.617752],\n    Тюмень: [57.153033, 65.534328],\n    'Улан-Удэ': [51.833507, 107.584125],\n    Ульяновск: [54.317002, 48.402243],\n    Уфа: [54.734768, 55.957838],\n    Хабаровск: [48.472584, 135.057732],\n    Харьков: [49.993499, 36.230376],\n    Чебоксары: [56.1439, 47.248887],\n    Челябинск: [55.159774, 61.402455],\n    Шахты: [47.708485, 40.215958],\n    Энгельс: [51.498891, 46.125121],\n    'Южно-Сахалинск': [46.959118, 142.738068],\n    Якутск: [62.027833, 129.704151],\n    Ярославль: [57.626569, 39.893822],\n};\n\nexport const engToRusCities = {\n    Arkhangelsk: 'Архангельск',\n    Astana: 'Астана',\n    Astrakhan: 'Астрахань',\n    Barnaul: 'Барнаул',\n    Belgorod: 'Белгород',\n    Biysk: 'Бийск',\n    Bishkek: 'Бишкек',\n    Blagoveshchensk: 'Благовещенск',\n    Bratsk: 'Братск',\n    Bryansk: 'Брянск',\n    'Veliky Novgorod': 'Великий Новгород',\n    Vladivostok: 'Владивосток',\n    ' Vladikavkaz': 'Владикавказ',\n    Vladimir: 'Владимир',\n    Volgograd: 'Волгоград',\n    Vologda: 'Вологда',\n    Voronezh: 'Воронеж',\n    Grozny: 'Грозный',\n    Donetsk: 'Донецк',\n    Yekaterinburg: 'Екатеринбург',\n    Ivanovo: 'Иваново',\n    Izhevsk: 'Ижевск',\n    Irkutsk: 'Иркутск',\n    Kazan: 'Казань',\n    Kaliningrad: 'Калининград',\n    Kaluga: 'Калуга',\n    'Kamensk-Uralsky': 'Каменск-Уральский',\n    Kemerovo: 'Кемерово',\n    Kiev: 'Киев',\n    Kirov: 'Киров',\n    'Komsomolsk-on-Amur': 'Комсомольск-на-Амуре',\n    Korolev: 'Королев',\n    Kostroma: 'Кострома',\n    Krasnodar: 'Краснодар',\n    Krasnoyarsk: 'Красноярск',\n    Kursk: 'Курск',\n    Lipetsk: 'Липецк',\n    Magnitogorsk: 'Магнитогорск',\n    Makhachkala: 'Махачкала',\n    Minsk: 'Минск',\n    Moscow: 'Москва',\n    Murmansk: 'Мурманск',\n    'Naberezhnye Chelny': 'Набережные Челны',\n    'Nizhny Novgorod': 'Нижний Новгород',\n    'Nizhny Tagil': 'Нижний Тагил',\n    Novokuznetsk: 'Новокузнецк',\n    Novorossiysk: 'Новороссийск',\n    Novosibirsk: 'Новосибирск',\n    Norilsk: 'Норильск',\n    Omsk: 'Омск',\n    Eagle: 'Орел',\n    Orenburg: 'Оренбург',\n    Penza: 'Пенза',\n    Pervouralsk: 'Первоуральск',\n    Perm: 'Пермь',\n    Prokopyevsk: 'Прокопьевск',\n    Pskov: 'Псков',\n    'Rostov-on-Don': 'Ростов-на-Дону',\n    Rybinsk: 'Рыбинск',\n    Ryazan: 'Рязань',\n    Samara: 'Самара',\n    'Saint-Petersburg': 'Санкт-Петербург',\n    Saratov: 'Саратов',\n    Sevastopol: 'Севастополь',\n    Severodvinsk: 'Северодвинск',\n    Simferopol: 'Симферополь',\n    Sochi: 'Сочи',\n    Stavropol: 'Ставрополь',\n    Sukhum: 'Сухум',\n    Tambov: 'Тамбов',\n    Tashkent: 'Ташкент',\n    Tver: 'Тверь',\n    Tolyatti: 'Тольятти',\n    Tomsk: 'Томск',\n    Tula: 'Тула',\n    Tyumen: 'Тюмень',\n    'Ulan-Ude': 'Улан-Удэ',\n    Ulyanovsk: 'Ульяновск',\n    Ufa: 'Уфа',\n    Khabarovsk: 'Хабаровск',\n    Kharkov: 'Харьков',\n    ' Cheboksary': 'Чебоксары',\n    Chelyabinsk: 'Челябинск',\n    Shakhty: 'Шахты',\n    Engels: 'Энгельс',\n    'Yuzhno-Sakhalinsk': 'Южно-Сахалинск',\n    Yakutsk: 'Якутск',\n    Yaroslavl: 'Ярославль',\n};\n","import { IP_SERVICE_API_KEY } from '../../constants';\n\nimport { cities, popularCities } from './regionData';\n\ntype ipServiceResponse = Record<\n    'city' | 'country' | 'hostname' | 'ip' | 'loc' | 'org' | 'postal' | 'region' | 'timezone',\n    string\n>;\n\nexport const defineLocation = async () => {\n    try {\n        const response = await fetch(`https://ipinfo.io?token=${IP_SERVICE_API_KEY}`);\n\n        if (response.status !== 200) {\n            return undefined;\n        }\n\n        const { loc, city }: ipServiceResponse = await response.json();\n        const coordinates = loc.split(',').map((el: string) => Number(el)) as [number, number];\n\n        return { coordinates, city };\n    } catch (_) {\n        return undefined;\n    }\n};\n\nexport const getCityCenterLocation = (city: string | undefined) => (city ? cities[city] : cities['Москва']);\n\nexport const getAllCitiesNames = () => Object.keys(cities);\n\nexport const getPopularCities = () => popularCities.filter((city) => city in cities);\n\nconst citiesArray = Object.entries(cities);\n\nexport const getClosestCity = ([latitude, longitude]: [number, number]) => {\n    let min = Infinity;\n    return citiesArray\n        .map((el) => {\n            const cityLat = el[1][0];\n            const cityLong = el[1][1];\n            const city = el[0];\n            return { city, diff: (cityLat - latitude) ** 2 + (cityLong - longitude) ** 2 };\n        })\n        .reduce((closestCity, el) => {\n            if (min > el.diff) {\n                min = el.diff;\n                return el.city;\n            }\n            return closestCity;\n        }, '');\n};\n","import React, { FC } from 'react';\n\nimport { Stack, Typography, Button, Link } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { useMatchesScreen } from 'src/hooks/useMatchesScreen';\n\nimport { colors } from 'src/theme';\n\ntype CookieBannerProps = {\n    onClose: React.MouseEventHandler<HTMLButtonElement>;\n};\n\nexport const CookieBanner: FC<CookieBannerProps> = ({ onClose }) => {\n    const theme = useTheme();\n    const { isLaptop, isDesktop } = useMatchesScreen();\n    const isLaptopOrDesktopSize = isLaptop || isDesktop;\n    return (\n        <Stack\n            direction={isLaptopOrDesktopSize ? 'row' : 'column'}\n            sx={{\n                padding: '24px',\n                margin: '0 56px',\n                borderRadius: '4px',\n                boxShadow: '0px 2px 6px rgba(130, 168, 188, 0.08), 0px 5px 10px rgba(0, 67, 101, 0.08)',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                gap: '16px',\n                position: 'absolute',\n                zIndex: '2000',\n                bottom: '84px',\n                left: '0',\n                right: '0',\n                backgroundColor: colors.neutral0,\n                [theme.breakpoints.down('laptop')]: {\n                    margin: '0 60px',\n                    bottom: '60px',\n                    gap: '24px',\n                },\n                [theme.breakpoints.down('tablet')]: {\n                    padding: '16px 16px 24px',\n                    margin: '0 16px',\n                    bottom: '44px',\n                },\n            }}\n        >\n            <Typography\n                variant=\"descriptionRegular\"\n                sx={{\n                    alignItems: 'center',\n                    [theme.breakpoints.down('laptop')]: {\n                        width: '100%',\n                        textAlign: 'center',\n                    },\n                    [theme.breakpoints.down('tablet')]: {\n                        fontSize: '14px',\n                        lineHeight: '20px',\n                    },\n                }}\n            >\n                A-Tink Bank защищает персональные данные пользователей и обрабатывает Cookies только для персонализации\n                сервисов. Запретить обработку Cookies можно в настройках Вашего браузера. Пожалуйста, ознакомьтесь с{' '}\n                <Link\n                    href=\"#\"\n                    underline=\"hover\"\n                    sx={{\n                        textDecoration: 'underline',\n                    }}\n                >\n                    Условиями обработки персональных данных\n                </Link>{' '}\n                и{' '}\n                <Link\n                    href=\"#\"\n                    underline=\"hover\"\n                    sx={{\n                        textDecoration: 'underline',\n                    }}\n                >\n                    Cookies\n                </Link>\n                .\n            </Typography>\n            <Button onClick={onClose} variant=\"primary\" sx={{ flexShrink: 0 }}>\n                Закрыть\n            </Button>\n        </Stack>\n    );\n};\n","import { FC } from 'react';\n\nimport { Stack, SxProps, Fab } from '@mui/material';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport { PlusSignIcon, MinusSignIcon, LocatorIcon } from 'src/shared/icons';\n\ntype MapControlsProps = {\n    onZoomIn: VoidFunction;\n    onZoomOut: VoidFunction;\n    onUpdateLocation: VoidFunction;\n    sx: SxProps;\n};\n\nexport const MapControls: FC<MapControlsProps> = ({ onZoomIn, onZoomOut, onUpdateLocation, sx }) => {\n    const isLowHeight = useMediaQuery('(max-height: 700px)');\n    return (\n        <Stack spacing={isLowHeight ? '36px' : '80px'} sx={{ ...sx, pointerEvents: 'none' }}>\n            <Stack spacing=\"24px\">\n                <Fab variant=\"darkDesign\" sx={{ pointerEvents: 'auto' }} onClick={onZoomIn}>\n                    <PlusSignIcon />\n                </Fab>\n                <Fab variant=\"darkDesign\" sx={{ pointerEvents: 'auto' }} onClick={onZoomOut}>\n                    <MinusSignIcon />\n                </Fab>\n            </Stack>\n            <Fab variant=\"darkDesign\" sx={{ pointerEvents: 'auto' }} onClick={onUpdateLocation}>\n                <LocatorIcon />\n            </Fab>\n        </Stack>\n    );\n};\n","import { FC } from 'react';\n\nimport { Box } from '@mui/material';\n\nimport { colors } from 'src/theme';\n\nexport const UserLocationMarker: FC = () => {\n    return (\n        <Box\n            sx={{\n                transform: 'translate(-50%, -50%)',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '60px',\n                width: '60px',\n                fontSize: '0.8rem',\n                borderRadius: '50%',\n                backgroundColor: 'rgba(112, 215, 255, 0.2)',\n                textAlign: 'center',\n            }}\n        >\n            <Box\n                sx={{\n                    width: '16px',\n                    height: '16px',\n                    background: '#64D2FF',\n                    border: `4px solid ${colors.neutral0}`,\n                    borderRadius: '50%',\n                    transform: 'rotate(-45deg)',\n                }}\n            />\n        </Box>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDelayedCallback } from 'src/hooks/useDelayedCallback';\n\nexport const PortalToYMark = ({ id, children }: { id: string; children: React.ReactNode }) => {\n    const [isYmarkerReady, setIsYmarkerReady] = useState<boolean | undefined>();\n    const delayed = useDelayedCallback(() => {\n        document.getElementById(id) && setIsYmarkerReady(true);\n    });\n\n    useEffect(() => {\n        setIsYmarkerReady(!!document.getElementById(id));\n        let timeout: number | undefined;\n        if (isYmarkerReady === false) {\n            timeout = delayed();\n        }\n        return () => {\n            timeout && clearTimeout(timeout);\n        };\n    }, [id, isYmarkerReady, delayed]);\n\n    if (!isYmarkerReady) return null;\n\n    const elemInYmarker = document.getElementById(id);\n    const parent = elemInYmarker?.parentElement?.parentElement?.parentElement?.parentElement?.parentElement;\n    if (parent) {\n        parent.style.opacity = '0';\n    }\n    // creating portal in transparent element will make portal content transparent so we put it into its parent\n    return parent?.parentElement ? createPortal(children, parent.parentElement) : null;\n};\n","import { useState } from 'react';\n\n//Will execute callback with delay, which will increase after each call, and then will rerender component\nexport const useDelayedCallback = (callback: Function, maxTries = 20, step = 4) => {\n    const [count, setCount] = useState(0);\n\n    return (): number | undefined => {\n        if (count === maxTries) return undefined;\n        return setTimeout(() => {\n            callback();\n            setCount((value) => value + 1);\n        }, count * step) as unknown as number; //fixing typescript default nodejs timeout reference\n    };\n};\n","import { YMaps, Map, Placemark, Clusterer } from '@pbe/react-yandex-maps';\nimport { FC, useState, useMemo, useEffect } from 'react';\nimport ymaps from 'yandex-maps';\n\nimport { Box } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { MAP_MAX_ZOOM, MAP_MIN_ZOOM, MAP_DEFAULT_ZOOM, MAP_ZOOM_STEP, activeMarksImg, marksImg } from 'src/constants';\nimport { getCityCenterLocation } from 'src/services/regionLocationService';\n\nimport { MarkType } from 'src/redux/apis/infoService/types';\n\nimport { MapControls } from './MapControls';\nimport { UserLocationMarker } from './UserLocationMarker';\n\nimport { PortalToYMark } from './PortalToYMark';\n\ntype CustomMapProps = {\n    height?: string;\n    width?: string;\n    locationCoords?: number[];\n    city?: string;\n    region: string;\n    isIpServiceUsed: boolean;\n    marks: MarkType[] | undefined;\n    activeMarkId: string;\n    setActiveMarkId: React.Dispatch<React.SetStateAction<string>>;\n};\n\ntype YIconTemplate = ReturnType<typeof ymaps.templateLayoutFactory.createClass>;\n\nexport const CustomMap: FC<CustomMapProps> = ({\n    height = 'calc(100% - 1px)',\n    width = '100%',\n    city,\n    region,\n    marks,\n    locationCoords,\n    activeMarkId,\n    isIpServiceUsed,\n    setActiveMarkId,\n}) => {\n    const defaultLocation = useMemo(() => {\n        if (locationCoords || isIpServiceUsed) {\n            if (city !== region) {\n                return getCityCenterLocation(region);\n            }\n\n            return locationCoords;\n        }\n\n        return getCityCenterLocation('Москва');\n    }, [city, isIpServiceUsed, locationCoords, region]);\n    const [zoom, setZoom] = useState(MAP_DEFAULT_ZOOM);\n    const [coords, setCoords] = useState(defaultLocation);\n    const [isUserLocationVisible, setIsUserLocationVisible] = useState(false);\n    const [template, setTemplate] = useState<YIconTemplate>();\n    const [isIdReady, setIsIdReady] = useState(false);\n    const theme = useTheme();\n\n    useEffect(() => {\n        setCoords(defaultLocation);\n        setIsUserLocationVisible(false);\n        setIsIdReady(false);\n    }, [city, defaultLocation]);\n\n    const handleUpdateLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const { latitude, longitude } = position.coords;\n                    setCoords([latitude, longitude]);\n                    setIsUserLocationVisible(true);\n                },\n                null,\n                { enableHighAccuracy: true }\n            );\n        }\n    };\n\n    const handleZoomIn = () => zoom <= MAP_MAX_ZOOM - MAP_ZOOM_STEP && setZoom((value) => value + MAP_ZOOM_STEP);\n    const handleZoomOut = () => zoom >= MAP_MIN_ZOOM + MAP_ZOOM_STEP && setZoom((value) => value - MAP_ZOOM_STEP);\n\n    const handleClick = (id: string) => {\n        setActiveMarkId(activeMarkId !== id ? id : '');\n    };\n\n    return (\n        <Box\n            sx={{\n                position: 'relative',\n                height,\n                width,\n                overflow: 'hidden',\n                zIndex: 0,\n\n                '& ymaps[class*=-map-bg]': {\n                    background: '#555555',\n                },\n\n                '& ymaps[class*=-ground-pane]': {\n                    filter: ' invert(0.89) grayscale(88%) hue-rotate(190deg) brightness(170%)',\n                },\n            }}\n        >\n            <YMaps>\n                <Map\n                    defaultState={{\n                        center: defaultLocation,\n                        zoom: 9,\n                    }}\n                    state={{ zoom, center: coords }}\n                    width=\"100%\"\n                    height=\"100%\"\n                    modules={['templateLayoutFactory']}\n                    onLoad={(ymaps) => {\n                        setTemplate(() => ymaps.templateLayoutFactory.createClass(`<div id=\"myLocation\">Hello</div>`));\n                    }}\n                >\n                    {isUserLocationVisible && (\n                        <Placemark\n                            geometry={coords}\n                            options={{\n                                preset: 'islands#circleIcon',\n                                iconContentLayout: template,\n                            }}\n                            onLoad={(ymaps) => {\n                                if (ymaps) {\n                                    setIsIdReady(true);\n                                }\n                            }}\n                        />\n                    )}\n                    <Clusterer\n                        options={{\n                            preset: 'islands#darkGreenClusterIcons',\n                            groupByCoordinates: false,\n                        }}\n                    >\n                        {marks?.map((data) => {\n                            return (\n                                <Placemark\n                                    key={data.id}\n                                    options={{\n                                        iconLayout: 'default#image',\n                                        iconImageHref:\n                                            activeMarkId === data.id\n                                                ? activeMarksImg[data.name as keyof typeof activeMarksImg]\n                                                : marksImg[data.name as keyof typeof marksImg],\n                                        iconImageSize: [44, 56],\n                                        iconImageOffset: [-22, -56], // actual place is top-left corner by default\n                                    }}\n                                    geometry={data.coordinates}\n                                    onClick={() => handleClick(data.id)}\n                                />\n                            );\n                        })}\n                    </Clusterer>\n                </Map>\n            </YMaps>\n            <MapControls\n                sx={{\n                    height: '100%',\n                    position: 'absolute',\n                    right: '56px',\n                    bottom: '0',\n                    justifyContent: 'center',\n                    [theme.breakpoints.down('laptop')]: {\n                        right: '60px',\n                        zIndex: '1',\n                    },\n                    [theme.breakpoints.down('tablet')]: {\n                        right: '16px',\n                    },\n                }}\n                onZoomIn={handleZoomIn}\n                onZoomOut={handleZoomOut}\n                onUpdateLocation={handleUpdateLocation}\n            />\n            {isIdReady && (\n                <PortalToYMark id=\"myLocation\">\n                    {/* put custom mark element inside here */}\n                    <UserLocationMarker />\n                </PortalToYMark>\n            )}\n        </Box>\n    );\n};\n","export const splitByFirstMatch = (target: string, matchString: string) => {\n    const matchPattern = new RegExp(matchString, 'i');\n    const matchIndex = target.match(matchPattern)?.index;\n    if (matchIndex === undefined) throw new Error('Target string must contain matchString (non-case-sensitive)');\n    const startingContent = target.slice(0, matchIndex);\n    const matchingContent = target.slice(matchIndex, matchIndex + matchString.length);\n    const restContent = target.slice(matchIndex + matchString.length);\n\n    return [startingContent, matchingContent, restContent];\n};\n","import { FC, useState, SyntheticEvent } from 'react';\nimport {\n    Box,\n    Typography,\n    Autocomplete,\n    InputBase,\n    Stack,\n    IconButton,\n    Dialog,\n    createFilterOptions,\n    Chip,\n    Paper,\n} from '@mui/material';\n\nimport { styled, useTheme } from '@mui/material/styles';\nimport { getAllCitiesNames, getPopularCities } from 'src/services/regionLocationService';\nimport { SearchIcon, DeleteIcon, LocationIcon, CloseIcon } from 'src/shared/icons';\nimport { splitByFirstMatch } from 'src/utils/splitByFirstMatch';\nimport { colors } from 'src/theme';\n\ntype RegionDialogProps = {\n    open: boolean;\n    onClose: VoidFunction;\n    onAutocompleteSelect: (e: SyntheticEvent, value: string | null) => void;\n    onPopularSelect: (e: SyntheticEvent) => void;\n    region?: string;\n};\n\nexport const RegionDialog: FC<RegionDialogProps> = ({\n    open,\n    onClose,\n    onAutocompleteSelect,\n    onPopularSelect,\n    region = 'Москва',\n}) => {\n    const [selectedValue, setSelectedValue] = useState<string | null>(null);\n    const [inputValue, setInputValue] = useState('');\n    const [isListOpen, setIsListOpen] = useState(false);\n    const theme = useTheme();\n\n    const handleToggleList = () => {\n        setIsListOpen(!isListOpen);\n    };\n\n    const handleChange = (event: SyntheticEvent<Element, Event>, newValue: string | null) => {\n        onAutocompleteSelect(event, newValue);\n        setInputValue('');\n    };\n\n    const handleClearClick = () => {\n        setInputValue('');\n        setSelectedValue(null);\n    };\n\n    const renderThreeStringArr = (arr: string[]) => (\n        <>\n            {arr[0]}\n            <Typography component=\"span\" sx={{ fontWeight: 600, color: colors.primary }}>\n                {arr[1]}\n            </Typography>\n            {arr[2]}\n        </>\n    );\n\n    const CustomPaper = styled(Paper)({\n        borderRadius: 0,\n        boxShadow: '4px 4px 16px rgba(194, 194, 194, 0.3)',\n    });\n\n    return (\n        <Dialog\n            open={open}\n            maxWidth={false}\n            onClose={onClose}\n            sx={{\n                '& .MuiDialog-container': { backdropFilter: 'blur(8px)' },\n                '& .MuiDialog-paper': {\n                    [theme.breakpoints.down('tablet')]: {\n                        maxWidth: '448px',\n                        minWidth: '342px',\n                    },\n                },\n            }}\n        >\n            <Box\n                sx={{\n                    position: 'relative',\n                    width: '490px',\n                    height: '440px',\n                    zIndex: '1000',\n                    background: '#fff',\n                    borderRadius: '4px',\n                    padding: '60px',\n                    [theme.breakpoints.down('tablet')]: {\n                        width: '100%',\n                        height: 'fit-content',\n                        padding: '61px 24px 24px',\n                    },\n                }}\n            >\n                <IconButton\n                    sx={{ position: 'absolute', top: '16px', right: '16px', color: colors.primary }}\n                    onClick={onClose}\n                    disableRipple={true}\n                >\n                    <CloseIcon />\n                </IconButton>\n                <Typography variant=\"subtitle2New\" sx={{ display: 'block', marginBottom: '18px' }}>\n                    Ваш регион: <Typography variant=\"subtitle2Semibold\">{region}</Typography>\n                </Typography>\n                <Autocomplete\n                    sx={{\n                        width: '368px',\n                        marginBottom: '32px',\n                        [theme.breakpoints.down('tablet')]: {\n                            width: 'auto',\n                        },\n                    }}\n                    open={isListOpen}\n                    onClose={handleToggleList}\n                    onOpen={handleToggleList}\n                    PaperComponent={CustomPaper}\n                    ListboxProps={{ style: { maxHeight: '230px' } }}\n                    value={selectedValue}\n                    inputValue={inputValue}\n                    noOptionsText={\n                        <Stack direction=\"row\">\n                            <LocationIcon sx={{ color: colors.primary }} />\n                            <Typography sx={{ marginLeft: '12px' }}>Результатов не найдено</Typography>\n                        </Stack>\n                    }\n                    options={getAllCitiesNames()}\n                    filterOptions={createFilterOptions({ matchFrom: 'start' })}\n                    onChange={handleChange}\n                    onInputChange={(e, newInputValue) => {\n                        setInputValue(newInputValue);\n                    }}\n                    renderInput={(params) => (\n                        <InputBase\n                            placeholder=\"Введите название города\"\n                            ref={params.InputProps.ref}\n                            inputProps={params.inputProps}\n                            autoFocus={true}\n                            sx={{\n                                width: '368px',\n                                height: '48px',\n                                border: `1px solid ${colors.neutral400}`,\n                                borderRadius: '4px',\n                                '&.Mui-focused': {\n                                    borderColor: colors.neutral600,\n                                    borderRadius: isListOpen ? '4px 4px 0 0' : '4px',\n                                },\n                                [theme.breakpoints.down('tablet')]: {\n                                    width: '100%',\n                                },\n                            }}\n                            startAdornment={\n                                <SearchIcon\n                                    viewBox=\"0 0 18 18\"\n                                    sx={{\n                                        height: '18px',\n                                        width: '18px',\n                                        color: colors.primary,\n                                        marginRight: '15px',\n                                        marginLeft: '19px',\n                                        pointerEvents: 'none',\n                                    }}\n                                />\n                            }\n                            endAdornment={\n                                inputValue && (\n                                    <DeleteIcon\n                                        onClick={handleClearClick}\n                                        sx={{ '&:hover': { cursor: 'pointer' }, marginRight: '14px' }}\n                                    />\n                                )\n                            }\n                        />\n                    )}\n                    renderOption={(props, option) => (\n                        <Box\n                            component=\"li\"\n                            sx={{\n                                '&.MuiAutocomplete-option': {\n                                    minHeight: '32px',\n                                    '&.Mui-focused': {\n                                        background: 'white',\n                                    },\n                                    '&:hover': {\n                                        color: colors.secondary600,\n                                        background: 'white',\n                                        '& .MuiTypography-root': {\n                                            color: colors.secondary600,\n                                            fontWeight: 600,\n                                        },\n                                    },\n                                },\n                            }}\n                            {...props}\n                        >\n                            <LocationIcon />\n                            <Typography sx={{ marginLeft: '12px', color: colors.neutral600 }}>\n                                {inputValue ? renderThreeStringArr(splitByFirstMatch(option, inputValue)) : option}\n                            </Typography>\n                        </Box>\n                    )}\n                />\n                <Typography variant=\"subtitle2New\" sx={{ display: 'block', fontWeight: '400', marginBottom: '16px' }}>\n                    Популярные города\n                </Typography>\n                <Stack\n                    direction=\"row\"\n                    justifyContent=\"flex-start\"\n                    alignItems=\"flex-start\"\n                    sx={{\n                        flexWrap: 'wrap',\n                        gap: '12px',\n                        overflow: 'hidden',\n                        maxHeight: '156px',\n                        [theme.breakpoints.down('tablet')]: {\n                            maxHeight: 'fit-content',\n                        },\n                    }}\n                    onClick={onPopularSelect}\n                >\n                    {getPopularCities().map((city, index) => (\n                        <Chip variant=\"custom\" label={city} key={index} />\n                    ))}\n                </Stack>\n            </Box>\n        </Dialog>\n    );\n};\n","import { Box, IconButton, OutlinedInput } from '@mui/material';\n\nimport { SearchIcon, DeleteIcon, FiltersIcon } from 'src/shared/icons';\n\nimport { colors } from 'src/theme';\n\ntype SearchBlockProps = {\n    isOpen: boolean;\n    inputValue: string;\n    onToggle: VoidFunction;\n    onOpenClick: VoidFunction;\n    onClearInputClick: VoidFunction;\n    onInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const SearchBlock = ({\n    onToggle,\n    onOpenClick,\n    isOpen,\n    onInputChange,\n    onClearInputClick,\n    inputValue,\n}: SearchBlockProps) => {\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n                alignSelf: 'start',\n                alignItems: 'center',\n                gap: '17px',\n                pointerEvents: 'none',\n                paddingRight: {\n                    tablet: '48px',\n                    mobile: '16px',\n                },\n                width: {\n                    laptop: 'auto',\n                    mobile: '100%',\n                },\n\n                '& > *': {\n                    pointerEvents: 'all',\n                },\n            }}\n        >\n            <OutlinedInput\n                startAdornment={\n                    <SearchIcon\n                        viewBox=\"0 0 18 18\"\n                        sx={{\n                            height: '18px',\n                            width: '18px',\n                            color: isOpen ? colors.primary : 'white',\n                            marginRight: '15px',\n                            marginLeft: '5px',\n                            pointerEvents: 'none',\n                        }}\n                    />\n                }\n                endAdornment={\n                    inputValue && <DeleteIcon onClick={onClearInputClick} sx={{ '&:hover': { cursor: 'pointer' } }} />\n                }\n                placeholder=\"Введите адрес\"\n                onFocus={() => isOpen || onToggle()}\n                value={inputValue}\n                onChange={onInputChange}\n                sx={{\n                    color: isOpen ? colors.primary : 'white',\n                    background: isOpen ? 'white' : colors.primary,\n                    width: {\n                        laptop: '294px',\n                        mobile: '100%',\n                    },\n                    height: '48px',\n                    transition: 'all 0.2s ease-in-out',\n                    '&> fieldset': {\n                        border: `1px solid ${isOpen ? colors.neutral400 : colors.primary} !important`,\n                    },\n                }}\n            />\n            <IconButton disableRipple={true} onClick={onOpenClick} sx={{ '&:hover': { background: 'transparent' } }}>\n                <FiltersIcon sx={{ color: isOpen ? colors.primary : 'white' }} />\n            </IconButton>\n        </Box>\n    );\n};\n","import { Box } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport MuiAccordion, { AccordionProps as MuiAccordionProps } from '@mui/material/Accordion';\nimport MuiAccordionSummary, { AccordionSummaryProps } from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { styled } from '@mui/material/styles';\n\nconst CustomAccordion = styled((props: MuiAccordionProps) => (\n    <MuiAccordion disableGutters={true} elevation={0} square={true} {...props} />\n))(() => ({\n    border: 'none',\n    margin: '0 20px 0 35px',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n        borderBottom: 0,\n    },\n    '&:before': {\n        display: 'none',\n    },\n    '&.Mui-disabled': {\n        opacity: '1',\n        backgroundColor: 'white',\n        '.MuiTypography-root': {\n            width: '100%',\n        },\n    },\n}));\n\nconst AccordionSummary = styled((props: AccordionSummaryProps) => (\n    <MuiAccordionSummary expandIcon={<ExpandMoreIcon sx={{ fontSize: 'small' }} />} {...props} />\n))(() => ({\n    border: 'none',\n    padding: '0',\n    margin: 0,\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n        transform: 'rotate(180deg)',\n    },\n    '& .MuiAccordionSummary-content': {\n        marginLeft: '0',\n    },\n    '& .MuiButtonBase-root-MuiAccordionSummary-root': {\n        padding: '0',\n    },\n    '&.Mui-disabled': {\n        opacity: '1',\n        backgroundColor: 'white',\n    },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(() => ({\n    padding: '0',\n    margin: '0',\n    border: 'none',\n}));\n\ntype AccordionProps = {\n    isDisabled?: boolean;\n    id: string;\n    'aria-controls': string;\n    title: JSX.Element;\n    text: JSX.Element;\n};\n\nexport const Accordion = ({ isDisabled, id, 'aria-controls': ariaControls, title, text }: AccordionProps) => {\n    return (\n        <CustomAccordion disabled={isDisabled}>\n            <AccordionSummary expandIcon={!isDisabled && <ExpandMoreIcon />} aria-controls={ariaControls} id={id}>\n                {title}\n            </AccordionSummary>\n            <AccordionDetails>\n                <Box>{text}</Box>\n            </AccordionDetails>\n        </CustomAccordion>\n    );\n};\n","import { Box, Typography } from '@mui/material';\n\nimport { colors } from 'src/theme';\n\ntype WorkingHourInfoProps = {\n    isWorking: boolean;\n    workingHours: string;\n    isDisabledAccordion: boolean;\n};\n\nexport const WorkingHourInfo = ({ isWorking, workingHours, isDisabledAccordion }: WorkingHourInfoProps) => (\n    <Box sx={{ width: isDisabledAccordion ? '100%' : '185px', display: 'flex', justifyContent: 'space-between' }}>\n        <Typography sx={{ color: isWorking ? '#4F9F57' : colors.alert, lineHeight: '24px' }}>\n            {isWorking ? 'Открыто' : 'Закрыто'}\n        </Typography>\n\n        <Typography sx={{ color: colors.neutral600, lineHeight: '24px', textAlign: 'right' }}>\n            {workingHours}\n        </Typography>\n    </Box>\n);\n","import { Box, Stack, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { MarkType } from 'src/redux/apis/infoService/types';\n\nimport { Accordion } from 'src/shared/Accordion';\n\nimport { colors } from 'src/theme';\nimport { marksImg } from 'src/constants';\n\nimport { splitByFirstMatch } from 'src/utils/splitByFirstMatch';\n\nimport { WorkingHourInfo } from './WorkingHourInfo';\n\ntype BranchPreviewProps = {\n    isDisabledAccordion: boolean;\n    matchString?: string;\n    info: MarkType;\n};\n\nexport const BranchPreview = ({ isDisabledAccordion, info, matchString }: BranchPreviewProps) => {\n    const theme = useTheme();\n    const textContent = info.cityName + ', ' + info.branchAddress;\n    const today = new Date().getDay();\n    const isOpen24 = info.name === 'ATM';\n    const openHours = today > 4 || today < 1 ? info.shortenedDay : info.workingHours;\n    const schedule = isOpen24 ? info.workingHours : openHours;\n\n    const renderThreeStringArr = (arr: string[]) => (\n        <>\n            {arr[0]}\n            <Typography component=\"span\" sx={{ fontWeight: 600, color: colors.primary }}>\n                {arr[1]}\n            </Typography>\n            {arr[2]}\n        </>\n    );\n    return (\n        <Box>\n            <Box sx={{ display: 'flex' }}>\n                <Box sx={{ width: '36px', height: '30px', overflow: 'hidden', flexShrink: '0' }}>\n                    <Box\n                        component=\"img\"\n                        src={marksImg[info.name as keyof typeof marksImg]}\n                        alt=\"background\"\n                        sx={{\n                            width: '56px',\n                            height: '56px',\n                            position: 'relative',\n                            left: 'calc(-50% + 1px)',\n                            bottom: '6px',\n                        }}\n                    />\n                </Box>\n                <Box sx={{ flexGrow: 1 }}>\n                    <Stack\n                        sx={{\n                            [theme.breakpoints.down('tablet')]: {\n                                whiteSpace: 'normal',\n                            },\n                        }}\n                    >\n                        <Typography\n                            variant=\"descriptionSemiBold\"\n                            sx={{\n                                fontSize: '20px',\n                                lineHeight: '30px',\n                            }}\n                        >\n                            {info.name}\n                        </Typography>\n                        <Typography sx={{ lineHeight: '24px', color: colors.neutral600 }}>\n                            {matchString\n                                ? renderThreeStringArr(splitByFirstMatch(textContent, matchString))\n                                : textContent}\n                        </Typography>\n                    </Stack>\n                    <Box\n                        sx={{\n                            [theme.breakpoints.down('laptop')]: { width: '246px' },\n                            '& >*': {\n                                margin: '0px !important',\n                            },\n                        }}\n                    >\n                        <Accordion\n                            isDisabled={isDisabledAccordion}\n                            id=\"detailed-info\"\n                            aria-controls=\"detailed-info-content\"\n                            title={\n                                <WorkingHourInfo\n                                    isWorking={!!info.isOpen}\n                                    workingHours={schedule}\n                                    isDisabledAccordion={isDisabledAccordion}\n                                />\n                            }\n                            text={\n                                <Stack spacing={2} sx={{ display: 'flex', width: '100%' }}>\n                                    <Box sx={{ color: colors.neutral600, lineHeight: '24px' }}>\n                                        <Box sx={{ display: 'flex', gap: '16px' }}>\n                                            <Typography>Пн-Чт</Typography>\n                                            {info.workingHours}\n                                        </Box>\n                                        <Box sx={{ display: 'flex', gap: '16px' }}>\n                                            <Typography>Пт</Typography>\n                                            {isOpen24 ? info.workingHours : info.shortenedDay}\n                                        </Box>\n                                        {info.workAtWeekends ? (\n                                            <Box sx={{ display: 'flex', gap: '16px' }}>\n                                                <Typography>Сб-Вс</Typography>\n                                                {info.workingHours}\n                                            </Box>\n                                        ) : (\n                                            <Box sx={{ display: 'flex', gap: '16px' }}>\n                                                <Typography>Сб-Вс</Typography>\n                                                <Typography>Выходной</Typography>\n                                            </Box>\n                                        )}\n                                    </Box>\n                                </Stack>\n                            }\n                        />\n                    </Box>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n","import { CheckRounded } from '@mui/icons-material';\nimport {\n    Access24Icon,\n    ArrowDownIcon,\n    ArrowRightUpIcon,\n    ArrowUpIcon,\n    CurrencyIcon,\n    TransferIcon,\n    WithoutCardIcon,\n    WeekendIcon,\n    RampIcon,\n    ConsultIcon,\n    InsuranceIcon,\n    ExoticCurrencyIcon,\n} from 'src/shared/icons';\n\nimport { MarkType } from 'src/redux/apis/infoService/types';\n\nexport type branchDataType = {\n    [key in keyof MarkType]?: { title: string; icon: React.ReactNode; group: typeof groups[number] };\n};\n\nexport const groups = ['Основные услуги', 'График работы', 'Дополнительно'];\n\nexport const branchData: branchDataType = {\n    cashWithdraw: {\n        title: 'Снять',\n        icon: <ArrowDownIcon />,\n        group: 'Основные услуги',\n    },\n    replenishCard: { title: 'Пополнить', icon: <ArrowUpIcon />, group: 'Основные услуги' },\n    acceptPayment: { title: 'Оплатить', icon: <ArrowRightUpIcon />, group: 'Основные услуги' },\n    currencyExchange: { title: 'Обмен валют', icon: <CurrencyIcon />, group: 'Основные услуги' },\n    moneyTransfer: { title: 'Перевести', icon: <TransferIcon />, group: 'Основные услуги' },\n    replenishAccount: {\n        title: 'Пополнить без карты',\n        icon: <WithoutCardIcon />,\n        group: 'Основные услуги',\n    },\n    isOpen: { title: 'Открыто', icon: <CheckRounded />, group: 'График работы' },\n    open24: { title: 'Круглосуточно', icon: <Access24Icon />, group: 'График работы' },\n    workAtWeekends: { title: 'Выходные', icon: <WeekendIcon />, group: 'График работы' },\n    ramp: { title: 'Пандус', icon: <RampIcon />, group: 'Дополнительно' },\n    consultation: { title: 'Консультация', icon: <ConsultIcon />, group: 'Дополнительно' },\n    insurance: { title: 'Страхование', icon: <InsuranceIcon />, group: 'Дополнительно' },\n    exoticCurrency: {\n        title: 'Обмен экзотической валюты',\n        icon: <ExoticCurrencyIcon />,\n        group: 'Дополнительно',\n    },\n};\n\nexport const getFilterTitle = (filterName: string) => branchData[filterName as keyof MarkType]?.title;\n\nexport const getByGroupName = (name: string) =>\n    Object.entries(branchData)\n        .filter((el) => el[1].group === name)\n        .map((el) => ({ value: el[0], title: el[1].title, icon: el[1].icon }));\n\nexport const getMarkFilterGroups = (mark: MarkType) =>\n    groups\n        .map((group) => {\n            const options = Object.entries(branchData)\n                .filter((el) => el[1].group === group)\n                .filter((el) => mark[el[0] as keyof MarkType])\n                .map((el) => el[1].title);\n            return options.length ? { group, options } : null;\n        })\n        .filter(Boolean);\n","import { FC } from 'react';\nimport { Box, Stack, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { MarkType } from 'src/redux/apis/infoService/types';\n\nimport { BulletIcon } from 'src/shared/icons';\n\nimport { colors } from 'src/theme';\n\nimport { BranchPreview } from './BranchPreview';\nimport { getMarkFilterGroups } from './constants';\n\ntype DetailedMarkInfoProps = { info: MarkType };\n\nexport const DetailedMarkInfo: FC<DetailedMarkInfoProps> = ({ info }) => {\n    const theme = useTheme();\n    return (\n        <Stack\n            sx={{\n                width: '342px',\n                margin: '0 40px',\n                [theme.breakpoints.down('laptop')]: {\n                    width: '100%',\n                    height: 'auto',\n                    margin: '0 44px',\n                },\n                [theme.breakpoints.down('tablet')]: {\n                    margin: '0',\n                },\n            }}\n        >\n            <Box\n                sx={{\n                    width: '100%',\n                    padding: '16px 0 12px',\n                    [theme.breakpoints.down('laptop')]: {\n                        padding: '0 0 12px',\n                    },\n                }}\n            >\n                <BranchPreview info={info} isDisabledAccordion={false} />\n            </Box>\n            <Box>\n                {getMarkFilterGroups(info).map((el, index) => (\n                    <Stack key={index} sx={{ display: 'flex', width: '100%', padding: '12px 16px 12px 0' }}>\n                        <Typography\n                            variant=\"descriptionSemiBold\"\n                            sx={{ mb: '20px', fontSize: '20px', lineHeight: '30px' }}\n                        >\n                            {el?.group}\n                        </Typography>\n                        <Box\n                            sx={{\n                                width: '342px',\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                fontSize: '16px',\n                                lineHeight: '24px',\n                                color: colors.neutral600,\n                                gap: '16px',\n                                [theme.breakpoints.down('laptop')]: { width: '100%' },\n                            }}\n                        >\n                            {el?.options.map((option, index) => (\n                                <Box key={index} sx={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n                                    <BulletIcon />\n                                    <Typography>{option}</Typography>\n                                </Box>\n                            ))}\n                        </Box>\n                    </Stack>\n                ))}\n            </Box>\n        </Stack>\n    );\n};\n","import { Box, Typography, Stack, Button } from '@mui/material';\nimport { ToggleButton } from 'src/shared/ToggleButton';\n\nimport { groups, getByGroupName } from './constants';\n\ntype FiltersProps = {\n    filters: string[];\n    resultsLength: number | undefined;\n    onClearClick: VoidFunction;\n    onToggleFilter: (e: React.MouseEvent<HTMLElement>, value: string) => void;\n    onShowResultsClick: VoidFunction;\n};\n\nexport const Filters = ({ filters, resultsLength, onClearClick, onToggleFilter, onShowResultsClick }: FiltersProps) => {\n    const renderFilterGroup = (groupName: string, groupData: ReturnType<typeof getByGroupName>) => (\n        <Stack key={groupName} spacing=\"16px\">\n            <Typography variant=\"subtitle2Semibold\" component=\"h4\">\n                {groupName}\n            </Typography>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: '12px' }}>\n                {groupData.map((el, i) => (\n                    <ToggleButton\n                        isActiveToggle={filters.includes(el.value)}\n                        value={el.value}\n                        title={el.title}\n                        icon={el.icon}\n                        key={i}\n                        onToggle={onToggleFilter}\n                    />\n                ))}\n            </Box>\n        </Stack>\n    );\n    return (\n        <Stack\n            spacing=\"24px\"\n            sx={{\n                alignItems: 'flex-start',\n                padding: {\n                    laptop: '0 40px',\n                    tablet: '0 60px',\n                    mobile: '0 16px',\n                },\n            }}\n        >\n            <Button variant=\"textButton\" onClick={onClearClick}>\n                Очистить\n            </Button>\n            {groups\n                .map((group) => [group, getByGroupName(group)] as [string, ReturnType<typeof getByGroupName>])\n                .map((el) => renderFilterGroup(el[0], el[1]))}\n            <Button variant=\"primary\" onClick={onShowResultsClick} sx={{ width: '100%' }}>\n                Показать результаты({resultsLength})\n            </Button>\n        </Stack>\n    );\n};\n","import { Stack, Typography, Box } from '@mui/material';\n\nimport imageSrc from 'src/images/branchesAndATM/noResultsImage.png';\nimport { theme } from 'src/theme';\n\nexport const NoResults = () => (\n    <Box sx={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <Stack\n            spacing=\"24px\"\n            sx={{\n                alignSelf: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                margin: 'auto 0',\n                [theme.breakpoints.down('laptop')]: {\n                    whiteSpace: 'normal',\n                },\n                [theme.breakpoints.down('tablet')]: {\n                    margin: 'auto 16px',\n                },\n            }}\n        >\n            <Box component=\"img\" src={imageSrc} alt=\"Нет результатов\" sx={{ flexGrow: 0, width: '170px' }} />\n            <Typography component=\"p\" variant=\"bold24\" sx={{ textAlign: 'center', maxWidth: '260px' }}>\n                Результатов не найдено\n            </Typography>\n            <Typography component=\"p\" variant=\"subtitle2New\" sx={{ textAlign: 'center' }}>\n                Пожалуйста, введите другие данные\n            </Typography>\n        </Stack>\n    </Box>\n);\n","import { Box, ClickAwayListener, styled, SwipeableDrawer } from '@mui/material';\nimport { useState } from 'react';\nimport { MarkType } from 'src/redux/apis/infoService/types';\n\nimport { useMatchesScreen } from 'src/hooks/useMatchesScreen';\nimport { colors } from 'src/theme';\n\nimport { DetailedMarkInfo } from './DetailedMarkInfo';\n\ntype MobileActiveBranchProps = {\n    isActiveMark: MarkType;\n    onClickAway: VoidFunction;\n};\n\nconst SWIPE_AREA_TABLET = 204;\nconst SWIPE_AREA_MOBILE = 180;\nconst Puller = styled(Box)(() => ({\n    width: 40,\n    height: 4,\n    backgroundColor: colors.neutral400,\n    borderRadius: 3,\n    margin: '8px auto 40px',\n}));\n\nexport const MobileActiveBranch = ({ isActiveMark, onClickAway }: MobileActiveBranchProps) => {\n    const { isMobile } = useMatchesScreen();\n    const [open, setOpen] = useState(false);\n    const toggleDrawer = () => {\n        setOpen((open) => !open);\n    };\n\n    return (\n        <ClickAwayListener onClickAway={onClickAway}>\n            <SwipeableDrawer\n                anchor=\"bottom\"\n                open={open}\n                onClose={toggleDrawer}\n                onOpen={toggleDrawer}\n                swipeAreaWidth={isMobile ? SWIPE_AREA_MOBILE : SWIPE_AREA_TABLET}\n                ModalProps={{\n                    keepMounted: true,\n                }}\n                sx={{\n                    '.MuiPaper-root': {\n                        overflow: 'visible',\n                    },\n                }}\n            >\n                <Box\n                    onClick={toggleDrawer}\n                    sx={{\n                        position: 'absolute',\n                        borderRadius: '4px 4px 0px 0px',\n                        visibility: 'visible',\n                        right: 0,\n                        left: 0,\n                        backgroundColor: colors.neutral0,\n                        cursor: 'pointer',\n                        pointerEvents: 'all',\n                        zIndex: '5',\n                        top: isMobile ? -SWIPE_AREA_MOBILE : -SWIPE_AREA_TABLET,\n                        height: isMobile ? SWIPE_AREA_MOBILE + '1px' : SWIPE_AREA_TABLET + '1px',\n                        padding: isMobile ? '0 16px 36px' : '8px 60px 60px',\n                    }}\n                >\n                    <Puller onClick={toggleDrawer} />\n                    <Box sx={{ overflow: 'hidden', height: open ? 'auto' : '92px' }}>\n                        <DetailedMarkInfo info={isActiveMark} />\n                    </Box>\n                </Box>\n                <Box sx={{ height: isMobile ? '452px' : '372px' }} />\n            </SwipeableDrawer>\n        </ClickAwayListener>\n    );\n};\n","import { SwipeableDrawer, Box } from '@mui/material';\n\ntype MobileSideBoxProps = {\n    isFiltersVisible: boolean;\n    children: JSX.Element | false;\n    isOpen: boolean;\n    onToggleOpen: VoidFunction;\n};\n\nexport const MobileSideBox = ({ children, isFiltersVisible, isOpen, onToggleOpen }: MobileSideBoxProps) => {\n    return (\n        <SwipeableDrawer\n            anchor=\"left\"\n            open={isOpen}\n            onClose={onToggleOpen}\n            onOpen={onToggleOpen}\n            disableRestoreFocus={true}\n            disableAutoFocus={true}\n            sx={{\n                width: '100%',\n                minWidth: '280px',\n                height: '100vh',\n                position: 'absolute',\n                zIndex: isFiltersVisible ? '11' : '5',\n                pointerEvents: 'auto',\n                display: 'flex',\n                flexDirection: 'column',\n                '.MuiDrawer-paper': {\n                    width: '100%',\n                    padding: {\n                        tablet: `${isFiltersVisible ? '196' : '216'}px 0 60px 0`,\n                        mobile: `${isFiltersVisible ? '156' : '176'}px 0 16px 0`,\n                    },\n                },\n                '.MuiBackdrop-root': {\n                    backgroundColor: 'transparent',\n                },\n            }}\n        >\n            <Box\n                sx={{\n                    height: '100%',\n                    overflowY: 'scroll',\n                    overflowX: 'hidden',\n                    whiteSpace: 'nowrap',\n                }}\n            >\n                {children}\n            </Box>\n        </SwipeableDrawer>\n    );\n};\n","import { FC } from 'react';\n\nimport { Box, Chip, SvgIcon, Stack, IconButton, Button } from '@mui/material';\nimport ClearRoundedIcon from '@mui/icons-material/ClearRounded';\nimport { ArrowLeftRounded, ArrowRightRounded, ArrowBackIos } from '@mui/icons-material';\n\nimport { colors } from 'src/theme';\n\nimport { useMatchesScreen } from 'src/hooks/useMatchesScreen';\n\nimport { MarkType } from 'src/redux/apis/infoService/types';\n\nimport { DetailedMarkInfo } from './DetailedMarkInfo';\nimport { Filters } from './Filters';\nimport { BranchPreview } from './BranchPreview';\nimport { NoResults } from './NoResults';\nimport { MobileActiveBranch } from './MobileActiveBranch';\n\nimport { getFilterTitle } from './constants';\nimport { MobileSideBox } from './MobileSideBox';\n\ntype SideBoxProps = {\n    resultsLimit?: number;\n    isOpen: boolean;\n    isMobileActiveBranchOpen: boolean;\n    marks: MarkType[] | undefined;\n    searchInput: string;\n    activeMarkId: string;\n    filters: string[];\n    isFiltersVisible: boolean;\n    onClearClick: VoidFunction;\n    onToggleFilter: (e: React.MouseEvent<HTMLElement>, value: string) => void;\n    onShowResultsClick: VoidFunction;\n    onToggleOpen: VoidFunction;\n    onBranchClick: (id: string) => void;\n    onBackClick: VoidFunction;\n    onClickAway: VoidFunction;\n};\n\nexport const SideBox: FC<SideBoxProps> = ({\n    isOpen,\n    isMobileActiveBranchOpen,\n    marks,\n    searchInput,\n    activeMarkId,\n    filters,\n    isFiltersVisible,\n    resultsLimit,\n    onClearClick,\n    onToggleFilter,\n    onShowResultsClick,\n    onBranchClick,\n    onToggleOpen,\n    onBackClick,\n    onClickAway,\n}) => {\n    const isActiveMark = marks?.find((m) => activeMarkId === m.id);\n    const { isMobile, isTablet } = useMatchesScreen();\n\n    const renderFilterList = () => (\n        <Box\n            sx={{\n                display: 'flex',\n                gap: '12px',\n                flexWrap: 'wrap',\n                marginBottom: '44px',\n                width: '100%',\n                padding: {\n                    laptop: '0 40px',\n                    tablet: '0 60px',\n                    mobile: '0 16px',\n                },\n            }}\n        >\n            {filters.map((el) => (\n                <Chip\n                    variant=\"darkDesignFilter\"\n                    icon={\n                        <SvgIcon>\n                            <ClearRoundedIcon />\n                        </SvgIcon>\n                    }\n                    key={el}\n                    label={getFilterTitle(el)}\n                    onClick={(e) => onToggleFilter(e, el)}\n                />\n            ))}\n        </Box>\n    );\n\n    const renderResults = () =>\n        marks?.length ? (\n            <Stack\n                sx={{\n                    padding: {\n                        laptop: '0 40px',\n                        tablet: '0 60px',\n                        mobile: '0 16px',\n                    },\n                }}\n            >\n                {marks?.slice(0, resultsLimit).map((el) => (\n                    <Box\n                        key={el.id}\n                        sx={{\n                            padding: '16px 0 0 0',\n                            borderBottom: `1px solid ${colors.neutral200}`,\n\n                            '&:hover': {\n                                cursor: 'pointer',\n                            },\n                        }}\n                        onClick={() => onBranchClick(el.id)}\n                    >\n                        <BranchPreview info={el} matchString={searchInput} isDisabledAccordion={true} />\n                    </Box>\n                ))}\n            </Stack>\n        ) : (\n            <NoResults />\n        );\n\n    const Content = (\n        <>\n            {!!filters.length && !activeMarkId && !isFiltersVisible && renderFilterList()}\n            {!activeMarkId && !isFiltersVisible && renderResults()}\n            {isFiltersVisible && (\n                <Filters\n                    resultsLength={marks?.length}\n                    filters={filters}\n                    onClearClick={onClearClick}\n                    onToggleFilter={onToggleFilter}\n                    onShowResultsClick={onShowResultsClick}\n                />\n            )}\n        </>\n    );\n\n    return (\n        <Box>\n            {!(isMobile || isTablet) ? (\n                <Box\n                    sx={{\n                        position: 'absolute',\n                        top: '0px',\n                        height: '100%',\n                        transform: isOpen ? 'translateX(0)' : 'translateX(-454px)',\n                        transitionProperty: 'transform',\n                        transitionDuration: '0.5s',\n                        transitionTimingFunction: 'ease-in-out',\n                        background: 'transparent',\n                        pointerEvents: 'none',\n                        display: 'flex',\n                        alignItems: 'center',\n                        zIndex: isFiltersVisible ? 11 : 5,\n                    }}\n                >\n                    <Box\n                        sx={{\n                            height: '100%',\n                            width: '454px',\n                            background: 'white',\n                            pointerEvents: 'auto',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            padding: `${isFiltersVisible ? '140' : '180'}px 16px 56px 16px`,\n                            overflow: 'hidden',\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                height: '100%',\n                                overflowX: 'hidden',\n                                overflowY: 'auto',\n                            }}\n                        >\n                            {Content}\n                            {!isFiltersVisible && isActiveMark && (\n                                <Box>\n                                    <Button\n                                        onClick={onBackClick}\n                                        sx={{\n                                            alignSelf: 'start',\n                                            mb: '44px',\n                                            padding: '0 52px',\n                                        }}\n                                        startIcon={<ArrowBackIos />}\n                                        variant=\"navigation\"\n                                    >\n                                        Назад к результатам поиска\n                                    </Button>\n                                    <DetailedMarkInfo info={isActiveMark} />\n                                </Box>\n                            )}\n                        </Box>\n                    </Box>\n                    <IconButton\n                        disableRipple={true}\n                        disableTouchRipple={true}\n                        onClick={onToggleOpen}\n                        sx={{\n                            borderRadius: '0px 4px 4px 0px',\n                            background: 'white',\n                            height: '40px',\n                            width: '18px',\n                            pointerEvents: 'auto',\n                        }}\n                    >\n                        {isOpen ? <ArrowLeftRounded /> : <ArrowRightRounded />}\n                    </IconButton>\n                </Box>\n            ) : (\n                <Box>\n                    {!isActiveMark && !isMobileActiveBranchOpen && (\n                        <MobileSideBox isFiltersVisible={isFiltersVisible} onToggleOpen={onToggleOpen} isOpen={isOpen}>\n                            {Content}\n                        </MobileSideBox>\n                    )}\n                    {!isFiltersVisible && !isOpen && isActiveMark && isMobileActiveBranchOpen && (\n                        <MobileActiveBranch isActiveMark={isActiveMark} onClickAway={onClickAway} />\n                    )}\n                </Box>\n            )}\n        </Box>\n    );\n};\n","import { useEffect, FC } from 'react';\nimport { CurrencyIcon, ArrowUpIcon, ArrowDownIcon, TransferIcon, ArrowRightUpIcon } from 'src/shared/icons';\nimport { ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useAppDispatch, useAppSelector } from 'src/redux/hooks';\nimport { QuickFiltersEnum, setQuickFilter } from 'src/redux/slices/branchesAndATMs';\nimport { selectQuickFilter } from 'src/redux/selectors';\nimport { theme, colors } from 'src/theme';\n\nconst quickFilterData = [\n    {\n        key: QuickFiltersEnum.cashWithdraw,\n        icon: <ArrowDownIcon />,\n        name: 'Снять',\n    },\n    {\n        key: QuickFiltersEnum.replenishCard,\n        icon: <ArrowUpIcon />,\n        name: 'Пополнить',\n    },\n    {\n        key: QuickFiltersEnum.currencyExchange,\n        icon: <CurrencyIcon />,\n        name: 'Обмен валют',\n    },\n    {\n        key: QuickFiltersEnum.moneyTransfer,\n        icon: <TransferIcon />,\n        name: 'Перевести',\n    },\n    {\n        key: QuickFiltersEnum.acceptPayment,\n        icon: <ArrowRightUpIcon />,\n        name: 'Оплатить',\n    },\n];\n\nconst quickFilterButtonStyle = {\n    textTransform: 'none',\n    mr: '10px',\n    paddingLeft: '8px',\n    maxHeight: '36px',\n    background: colors.primary,\n    color: colors.neutral400,\n    border: 'none',\n    [theme.breakpoints.down('laptop')]: {\n        ml: '0',\n    },\n    [theme.breakpoints.down('tablet')]: {},\n    '&.MuiToggleButtonGroup-grouped': {\n        '&:first-of-type': {\n            borderRadius: '4px',\n        },\n        '&:not(:first-of-type)': {\n            borderRadius: '4px',\n        },\n    },\n    '&.Mui-selected': {\n        background: colors.secondary200,\n        color: colors.primary,\n        '&:hover': {\n            background: colors.secondary200,\n            color: colors.primary,\n        },\n    },\n    '&:disabled': {\n        border: 'none',\n        background: colors.primary,\n        color: colors.neutral400,\n    },\n    '&:hover': {\n        background: colors.primary,\n        color: colors.neutral400,\n    },\n};\n\ntype QuickFiltersProps = { disabledFilters: boolean };\n\nexport const QuickFilters: FC<QuickFiltersProps> = ({ disabledFilters }) => {\n    const theme = useTheme();\n    const dispatch = useAppDispatch();\n    const currentFilter = useAppSelector(selectQuickFilter);\n\n    const handleFilterChange = (event: React.MouseEvent<HTMLElement>, newFilter: QuickFiltersEnum | null) => {\n        dispatch(setQuickFilter(newFilter));\n    };\n\n    useEffect(() => {\n        if (disabledFilters) dispatch(setQuickFilter(null));\n    }, [dispatch, disabledFilters]);\n\n    return (\n        <ToggleButtonGroup\n            value={currentFilter}\n            exclusive={true}\n            onChange={handleFilterChange}\n            sx={{\n                borderRadius: '4px',\n                flexWrap: 'wrap',\n                rowGap: '10px',\n                [theme.breakpoints.down('laptop')]: {\n                    flexWrap: 'nowrap',\n                    overflowY: 'hidden',\n                    overflowX: 'scroll',\n                    whiteSpace: 'nowrap',\n                    scrollbarWidth: 'none',\n                    '&::-webkit-scrollbar': {\n                        display: 'none',\n                    },\n                },\n            }}\n        >\n            {quickFilterData.map((item) => (\n                <ToggleButton\n                    key={item.key}\n                    value={item.key}\n                    disableRipple={true}\n                    sx={quickFilterButtonStyle}\n                    disabled={disabledFilters}\n                >\n                    {item.icon}\n                    <Typography variant=\"descriptionRegular\" sx={{ pl: '8px' }}>\n                        {item.name}\n                    </Typography>\n                </ToggleButton>\n            ))}\n        </ToggleButtonGroup>\n    );\n};\n","import { useEffect, useState, SyntheticEvent, FC } from 'react';\nimport { Box } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { useAppSelector } from 'src/redux/hooks';\n\nimport { selectQuickFilter } from 'src/redux/selectors';\nimport { useGetBranchesDataQuery } from 'src/redux/apis/infoService';\n\nimport { useMatchesScreen } from 'src/hooks/useMatchesScreen';\n\nimport { WarningModal } from 'src/shared/WarningModal';\n\nimport { CustomMap } from './CustomMap';\nimport { RegionDialog } from './RegionDialog';\nimport { SearchBlock } from './SearchBlock';\nimport { SideBox } from './SideBox';\nimport { QuickFilters } from './QuickFilters';\n\ntype MapContainerProps = {\n    region: string;\n    isRegionDialogVisible: boolean;\n    setIsConfirmVisible: (value: boolean) => void;\n    setRegion: (value: string) => void;\n    toggleVisibility: VoidFunction;\n    isIpServiceUsed: boolean;\n    locationCoords?: number[];\n    city?: string;\n};\n\nexport const MapContainer: FC<MapContainerProps> = ({\n    region,\n    isRegionDialogVisible,\n    isIpServiceUsed,\n    setIsConfirmVisible,\n    setRegion,\n    toggleVisibility,\n    locationCoords,\n    city,\n}) => {\n    const theme = useTheme();\n    const { isMobile, isTablet } = useMatchesScreen();\n    const isLowerThanLaptop = isMobile || isTablet;\n\n    const { data: branchesData, error } = useGetBranchesDataQuery();\n\n    const [isSideBoxOpen, setIsSideBoxOpen] = useState(false);\n    const [isMobileActiveBranchOpen, setIsMobileActiveBranchOpen] = useState(false);\n    const [activeMarkId, setActiveMarkId] = useState('');\n    const [activeFilters, setActiveFilters] = useState<string[]>([]);\n    const [isFiltersVisible, setIsFiltersVisible] = useState(false);\n    const [searchInput, setSearchInput] = useState('');\n    const [isErrorModalOpened, setIsErrorModalOpened] = useState(false);\n\n    const filteredMarks = branchesData\n        ?.filter((el) => activeFilters.every((filter) => el[filter as keyof typeof el]))\n        .filter((el) =>\n            searchInput\n                ? (el.branchAddress + ', ' + el.cityName).toLowerCase().includes(searchInput.toLowerCase())\n                : true\n        );\n\n    const quickFilter = useAppSelector(selectQuickFilter);\n\n    const quickFilteredBranchesData = quickFilter\n        ? branchesData?.filter((branch) => branch[quickFilter as keyof typeof branch])\n        : branchesData;\n\n    const handleShowResultsClick = () => {\n        setIsFiltersVisible(false);\n    };\n\n    const handleClearFilters = () => {\n        setActiveFilters([]);\n    };\n\n    const handleToggleFilter = (e: React.MouseEvent<HTMLElement>, value: string) => {\n        activeFilters.includes(value)\n            ? setActiveFilters((filters) => filters.filter((el) => el !== value))\n            : setActiveFilters((filters) => [...filters, value]);\n    };\n\n    const handleAutocompleteSelect = (e: SyntheticEvent, value: string | null) => {\n        if (value) {\n            setRegion(value);\n            toggleVisibility();\n            setIsConfirmVisible(false);\n        }\n    };\n    const handlePopularSelect = (e: SyntheticEvent) => {\n        const target = e.target as Element;\n        const currentTarget = e.currentTarget as Element;\n        if (target !== currentTarget && target.textContent) {\n            setRegion(target.textContent);\n            toggleVisibility();\n            setIsConfirmVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        if (activeMarkId && !isLowerThanLaptop) {\n            setIsSideBoxOpen(!!activeMarkId);\n            setIsFiltersVisible(false);\n        }\n        if (activeMarkId && isLowerThanLaptop) {\n            setIsMobileActiveBranchOpen(!!activeMarkId);\n            setIsSideBoxOpen(false);\n            setIsFiltersVisible(false);\n        }\n    }, [activeMarkId, isLowerThanLaptop]);\n\n    useEffect(() => {\n        if (error) {\n            setIsErrorModalOpened(true);\n        }\n    }, [error]);\n\n    return (\n        <Box sx={{ position: 'relative', height: '1px', minHeight: '100%' }}>\n            <Box\n                sx={{\n                    position: 'relative',\n                    overflow: 'visible',\n                    background: '#eeeeee',\n                }}\n            >\n                <Box\n                    sx={{\n                        position: 'absolute',\n                        left: '56px',\n                        top: '100px',\n                        display: 'flex',\n                        alignItems: 'center',\n                        zIndex: 10,\n                        columnGap: '20px',\n                        [theme.breakpoints.down('laptop')]: {\n                            width: 'calc(100vw - 60px)',\n                            left: '60px',\n                            top: '144px',\n                            flexWrap: 'wrap',\n                            gap: '24px',\n                            overflow: 'hidden',\n                        },\n                        [theme.breakpoints.down('tablet')]: {\n                            width: 'calc(100vw - 16px)',\n                            top: '104px',\n                            left: '16px',\n                        },\n                    }}\n                >\n                    <SearchBlock\n                        isOpen={isSideBoxOpen}\n                        onToggle={() => {\n                            setIsSideBoxOpen((isOpen) => !isOpen);\n                            setIsFiltersVisible(false);\n                            if (isLowerThanLaptop) {\n                                setIsMobileActiveBranchOpen(false);\n                                setActiveMarkId('');\n                            }\n                        }}\n                        inputValue={searchInput}\n                        onInputChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                            setSearchInput(e.target.value);\n                        }}\n                        onClearInputClick={() => {\n                            setSearchInput('');\n                        }}\n                        onOpenClick={() => {\n                            setIsSideBoxOpen(true);\n                            setIsFiltersVisible(true);\n                            setActiveMarkId('');\n                            setIsMobileActiveBranchOpen(false);\n                        }}\n                    />\n                    {!isLowerThanLaptop && <QuickFilters disabledFilters={isSideBoxOpen} />}\n                    {isLowerThanLaptop && !isSideBoxOpen && <QuickFilters disabledFilters={isSideBoxOpen} />}\n                </Box>\n                <RegionDialog\n                    open={isRegionDialogVisible}\n                    region={region}\n                    onClose={toggleVisibility}\n                    onAutocompleteSelect={handleAutocompleteSelect}\n                    onPopularSelect={handlePopularSelect}\n                />\n            </Box>\n            <SideBox\n                isOpen={isSideBoxOpen}\n                isMobileActiveBranchOpen={isMobileActiveBranchOpen}\n                marks={filteredMarks}\n                activeMarkId={activeMarkId}\n                searchInput={searchInput}\n                filters={activeFilters}\n                resultsLimit={5}\n                onClearClick={handleClearFilters}\n                onToggleFilter={handleToggleFilter}\n                onBranchClick={(id: string) => {\n                    setActiveMarkId(id);\n                }}\n                isFiltersVisible={isFiltersVisible}\n                onShowResultsClick={handleShowResultsClick}\n                onToggleOpen={() => setIsSideBoxOpen((isOpen) => !isOpen)}\n                onBackClick={() => setActiveMarkId('')}\n                onClickAway={() => {\n                    setIsMobileActiveBranchOpen(false);\n                    setActiveMarkId('');\n                }}\n            />\n\n            <CustomMap\n                locationCoords={locationCoords}\n                city={city}\n                isIpServiceUsed={isIpServiceUsed}\n                region={region}\n                marks={isSideBoxOpen ? filteredMarks : quickFilteredBranchesData}\n                activeMarkId={activeMarkId}\n                setActiveMarkId={setActiveMarkId}\n            />\n            <WarningModal\n                message=\"Сервис временно недоступен.\"\n                isOpen={isErrorModalOpened}\n                onClose={() => setIsErrorModalOpened(false)}\n            />\n        </Box>\n    );\n};\n","import { Box, Button, Stack, Typography } from '@mui/material';\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\nimport { styled } from '@mui/material/styles';\nimport { LocationIcon } from 'src/shared/icons';\n\ntype RegionConfirmProps = {\n    city?: string;\n    isModalOpen?: boolean;\n    onOpen?: VoidFunction;\n    onConfirm?: VoidFunction;\n    onDeny?: VoidFunction;\n};\n\nconst LocationTooltip = styled(({ className, ...props }: TooltipProps) => (\n    <Tooltip {...props} classes={{ popper: className }} />\n))(() => ({\n    [`& .${tooltipClasses.tooltip}`]: {\n        backgroundColor: 'transparent',\n    },\n}));\n\nexport const RegionConfirm = ({ city, isModalOpen, onOpen, onConfirm, onDeny }: RegionConfirmProps) => {\n    return (\n        <Box sx={{ display: 'flex', justifyItems: 'center' }}>\n            <LocationTooltip\n                open={isModalOpen}\n                title={\n                    <Box\n                        sx={{\n                            position: 'relative',\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                position: 'absolute',\n                                top: '-10px',\n                                left: '0',\n                                borderWidth: '10px',\n                                borderStyle: 'solid',\n                                borderColor: 'transparent transparent transparent #fff',\n                            }}\n                        />\n                        <Stack\n                            spacing={2}\n                            sx={{\n                                width: '240px',\n                                background: '#fff',\n                                color: 'black',\n                                padding: '16px',\n                                borderRadius: '4px',\n                            }}\n                        >\n                            <Typography variant=\"descriptionSemiBold\">Ваш регион {city}?</Typography>\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                <Button variant=\"textButton\" sx={{ mr: 3 }} onClick={onDeny}>\n                                    Нет, изменить\n                                </Button>\n                                <Button variant=\"primary\" onClick={onConfirm}>\n                                    Да\n                                </Button>\n                            </Box>\n                        </Stack>\n                    </Box>\n                }\n                placement=\"bottom-start\"\n            >\n                <Button\n                    variant=\"textButton\"\n                    sx={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        color: '#fff',\n                    }}\n                    onClick={onOpen}\n                >\n                    {city && <LocationIcon sx={{ '&:hover': { color: '#4F9F57' }, mr: 1 }} />}\n                    {city}\n                </Button>\n            </LocationTooltip>\n        </Box>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { useGeoLocation } from 'src/hooks/useGeoLocation';\n\nimport { getClosestCity } from 'src/services/regionLocationService';\n\nimport { PageContainer } from 'src/shared/containers/PageContainer';\n\nimport { CookieBanner } from './CookieBanner';\nimport { MapContainer } from './MapContainer';\nimport { RegionConfirm } from './MapContainer/RegionConfirm';\n\nexport const BranchesAndAtms = () => {\n    const { locationCoords, city, geoLocationError } = useGeoLocation();\n    const [region, setRegion] = useState('Москва');\n\n    useEffect(() => {\n        if (locationCoords) {\n            setRegion(getClosestCity(locationCoords));\n        }\n    }, [locationCoords]);\n\n    const [isShowCookieBanner, setIsShowCookieBanner] = useState(true);\n    const [isConfirmVisible, setIsConfirmVisible] = useState(true);\n    const [isRegionDialogVisible, setIsRegionDialogVisible] = useState(false);\n\n    const toggleVisibility = () => {\n        setIsRegionDialogVisible(!isRegionDialogVisible);\n    };\n\n    const handleConfirm = () => {\n        setRegion(region);\n        setIsConfirmVisible(false);\n    };\n\n    const handleDeny = () => {\n        toggleVisibility();\n        setIsConfirmVisible(false);\n    };\n\n    const handleOpen = () => {\n        setIsConfirmVisible(!isConfirmVisible);\n    };\n\n    const handleClick = () => {\n        setIsShowCookieBanner(false);\n    };\n\n    const locationTitle = (\n        <RegionConfirm\n            city={region}\n            isModalOpen={isConfirmVisible}\n            onOpen={handleOpen}\n            onConfirm={handleConfirm}\n            onDeny={handleDeny}\n        />\n    );\n\n    return (\n        <PageContainer\n            theme=\"black\"\n            headerPosition=\"absolute\"\n            headerProps={{ extraItem: locationTitle, withBlur: true }}\n            hasSideMenu={false}\n        >\n            <MapContainer\n                locationCoords={locationCoords}\n                city={city}\n                isIpServiceUsed={geoLocationError}\n                region={region}\n                isRegionDialogVisible={isRegionDialogVisible}\n                setIsConfirmVisible={setIsConfirmVisible}\n                setRegion={setRegion}\n                toggleVisibility={toggleVisibility}\n            />\n            {isShowCookieBanner ? <CookieBanner onClose={handleClick} /> : null}\n        </PageContainer>\n    );\n};\n","import { useState, useEffect } from 'react';\n\nimport { engToRusCities } from 'src/services/regionLocationService/regionData';\nimport { defineLocation, getClosestCity } from 'src/services/regionLocationService';\n\nexport const useGeoLocation = () => {\n    const [city, setCity] = useState<string | undefined>('Москва');\n    const [locationCoords, setLocationCoords] = useState<[number, number] | undefined>();\n    const [geoLocationError, setGeoLocationError] = useState<boolean>(false);\n    const [fetchingError, setFetchingError] = useState<boolean>();\n    const [toggle, setToggle] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const { latitude, longitude } = position.coords;\n                    setLocationCoords([latitude, longitude]);\n                    setCity(getClosestCity([latitude, longitude]));\n                },\n                (_) => {\n                    setGeoLocationError(true);\n                    defineLocation().then((res) => {\n                        if (!res) {\n                            setFetchingError(true);\n                        } else {\n                            setLocationCoords(res.coordinates);\n                            setCity(engToRusCities[res.city as keyof typeof engToRusCities]);\n                        }\n                    });\n                }\n            );\n        } else {\n            setGeoLocationError(true);\n            defineLocation().then((res) => {\n                if (!res) {\n                    setFetchingError(true);\n                } else {\n                    setLocationCoords(res.coordinates);\n                    setCity(engToRusCities[res.city as keyof typeof engToRusCities]);\n                }\n            });\n        }\n    }, [toggle]);\n\n    return { locationCoords, city, fetchingError, geoLocationError, retry: setToggle };\n};\n","import { ToggleButton as MuiToggleButton } from '@mui/material';\nimport { colors } from 'src/theme';\n\ntype ToggleButtonProps = {\n    isActiveToggle: boolean;\n    value: string;\n    onToggle: (event: React.MouseEvent<HTMLElement>, status: string) => void;\n    title: string;\n    icon?: React.ReactNode;\n};\n\nexport const ToggleButton = ({ isActiveToggle, value, onToggle, title, icon }: ToggleButtonProps) => {\n    return (\n        <MuiToggleButton\n            selected={isActiveToggle}\n            disableRipple={true}\n            value={value}\n            onChange={onToggle}\n            sx={{\n                color: colors.neutral600,\n                border: 'none',\n                borderRadius: '4px',\n                background: colors.neutral100,\n                padding: '8px 12px',\n                textTransform: 'none',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                gap: '8px',\n\n                '&.Mui-selected': {\n                    background: colors.secondary200,\n                    color: colors.primary,\n\n                    '&:hover': {\n                        background: colors.secondary200,\n                        color: colors.primary,\n                    },\n                },\n            }}\n        >\n            {!!icon && icon}\n            {title}\n        </MuiToggleButton>\n    );\n};\n","import { Box, Dialog, IconButton, Paper, Stack, Typography } from '@mui/material';\nimport errorImg from 'src/images/routesError/errorImg.png';\nimport { colors } from 'src/theme';\n\nimport { CloseIcon } from './icons';\n\nexport type WarningModalProps = {\n    message: string;\n    isOpen: boolean;\n    onClose: VoidFunction;\n};\nexport const WarningModal = ({ message, isOpen, onClose }: WarningModalProps) => {\n    return (\n        <Dialog sx={{ zIndex: 100000 }} onClose={onClose} open={isOpen}>\n            <Paper\n                elevation={0}\n                sx={{\n                    height: { tablet: '445px', mobile: 'auto' },\n                    width: { tablet: '416px', mobile: 'auto' },\n                    p: { tablet: '60px 37px', mobile: '60px 37px 50px' },\n                    borderRadius: '4px',\n                }}\n            >\n                <IconButton onClick={onClose} sx={{ position: 'absolute', right: '16px', top: '16px' }}>\n                    <CloseIcon fontSize=\"medium\" />\n                </IconButton>\n                <Stack spacing=\"24px\" alignItems=\"center\" justifyContent=\"center\">\n                    <Box\n                        component=\"img\"\n                        src={errorImg}\n                        sx={{ width: '168px', height: '176px', mb: { tablet: '0', mobile: '8px' } }}\n                    />\n                    <Stack\n                        spacing=\"8px\"\n                        alignItems=\"center\"\n                        sx={{ textAlign: 'center', color: colors.primary, whiteSpace: 'pre' }}\n                    >\n                        <Typography component=\"div\" variant=\"subtitle2Semibold\" sx={{ mb: { tablet: '8px' } }}>\n                            {message}\n                        </Typography>\n                        <Typography component=\"div\" variant=\"descriptionRegular\">\n                            {`Приносим свои извинения \\nза доставленные неудобства.`}\n                        </Typography>\n                    </Stack>\n                </Stack>\n            </Paper>\n        </Dialog>\n    );\n};\n"],"names":["popularCities","cities","Архангельск","Астана","Астрахань","Барнаул","Белгород","Бийск","Бишкек","Благовещенск","Братск","Брянск","Владивосток","Владикавказ","Владимир","Волгоград","Вологда","Воронеж","Грозный","Донецк","Екатеринбург","Иваново","Ижевск","Иркутск","Казань","Калининград","Калуга","Кемерово","Киев","Киров","Королев","Кострома","Краснодар","Красноярск","Курск","Липецк","Магнитогорск","Махачкала","Минск","Москва","Мурманск","Новокузнецк","Новороссийск","Новосибирск","Норильск","Омск","Орел","Оренбург","Пенза","Первоуральск","Пермь","Прокопьевск","Псков","Рыбинск","Рязань","Самара","Саратов","Севастополь","Северодвинск","Симферополь","Сочи","Ставрополь","Сухум","Тамбов","Ташкент","Тверь","Тольятти","Томск","Тула","Тюмень","Ульяновск","Уфа","Хабаровск","Харьков","Чебоксары","Челябинск","Шахты","Энгельс","Якутск","Ярославль","engToRusCities","Arkhangelsk","Astana","Astrakhan","Barnaul","Belgorod","Biysk","Bishkek","Blagoveshchensk","Bratsk","Bryansk","Vladivostok","Vladimir","Volgograd","Vologda","Voronezh","Grozny","Donetsk","Yekaterinburg","Ivanovo","Izhevsk","Irkutsk","Kazan","Kaliningrad","Kaluga","Kemerovo","Kiev","Kirov","Korolev","Kostroma","Krasnodar","Krasnoyarsk","Kursk","Lipetsk","Magnitogorsk","Makhachkala","Minsk","Moscow","Murmansk","Novokuznetsk","Novorossiysk","Novosibirsk","Norilsk","Omsk","Eagle","Orenburg","Penza","Pervouralsk","Perm","Prokopyevsk","Pskov","Rybinsk","Ryazan","Samara","Saratov","Sevastopol","Severodvinsk","Simferopol","Sochi","Stavropol","Sukhum","Tambov","Tashkent","Tver","Tolyatti","Tomsk","Tula","Tyumen","Ulyanovsk","Ufa","Khabarovsk","Kharkov","Chelyabinsk","Shakhty","Engels","Yakutsk","Yaroslavl","defineLocation","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_yield$response$json","loc","city","coordinates","wrap","_context","prev","next","fetch","concat","IP_SERVICE_API_KEY","sent","status","abrupt","undefined","json","split","map","el","Number","t0","stop","apply","arguments","getCityCenterLocation","citiesArray","Object","entries","getClosestCity","_ref2","_ref3","_slicedToArray","latitude","longitude","min","Infinity","cityLat","cityLong","diff","Math","pow","reduce","closestCity","CookieBanner","onClose","theme","useTheme","_useMatchesScreen","useMatchesScreen","isLaptop","isDesktop","isLaptopOrDesktopSize","_jsxs","Stack","direction","sx","padding","margin","borderRadius","boxShadow","alignItems","justifyContent","gap","position","zIndex","bottom","left","right","backgroundColor","colors","_defineProperty","breakpoints","down","children","Typography","variant","width","textAlign","fontSize","lineHeight","_jsx","Link","href","underline","textDecoration","Button","onClick","flexShrink","MapControls","onZoomIn","onZoomOut","onUpdateLocation","isLowHeight","useMediaQuery","spacing","_objectSpread","pointerEvents","Fab","PlusSignIcon","MinusSignIcon","LocatorIcon","UserLocationMarker","Box","transform","display","height","background","border","PortalToYMark","_elemInYmarker$parent","_elemInYmarker$parent2","_elemInYmarker$parent3","_elemInYmarker$parent4","id","_useState","useState","_useState2","isYmarkerReady","setIsYmarkerReady","delayed","callback","maxTries","length","step","count","setCount","setTimeout","value","useDelayedCallback","document","getElementById","useEffect","timeout","clearTimeout","elemInYmarker","parent","parentElement","style","opacity","createPortal","CustomMap","_ref$height","_ref$width","region","marks","locationCoords","activeMarkId","isIpServiceUsed","setActiveMarkId","defaultLocation","useMemo","MAP_DEFAULT_ZOOM","zoom","setZoom","_useState3","_useState4","coords","setCoords","_useState5","_useState6","isUserLocationVisible","setIsUserLocationVisible","_useState7","_useState8","template","setTemplate","_useState9","_useState10","isIdReady","setIsIdReady","overflow","filter","YMaps","Map","defaultState","center","state","modules","onLoad","ymaps","templateLayoutFactory","createClass","Placemark","geometry","options","preset","iconContentLayout","Clusterer","groupByCoordinates","data","iconLayout","iconImageHref","activeMarksImg","name","marksImg","iconImageSize","iconImageOffset","MAP_MAX_ZOOM","MAP_ZOOM_STEP","MAP_MIN_ZOOM","navigator","geolocation","getCurrentPosition","_position$coords","enableHighAccuracy","splitByFirstMatch","target","matchString","_target$match","matchPattern","RegExp","matchIndex","match","index","Error","slice","RegionDialog","open","onAutocompleteSelect","onPopularSelect","_ref$region","selectedValue","setSelectedValue","inputValue","setInputValue","isListOpen","setIsListOpen","handleToggleList","handleClearClick","CustomPaper","styled","Paper","Dialog","maxWidth","backdropFilter","minWidth","IconButton","top","color","disableRipple","CloseIcon","marginBottom","Autocomplete","onOpen","PaperComponent","ListboxProps","maxHeight","noOptionsText","LocationIcon","marginLeft","keys","filterOptions","createFilterOptions","matchFrom","onChange","event","newValue","onInputChange","e","newInputValue","renderInput","params","InputBase","placeholder","ref","InputProps","inputProps","autoFocus","borderColor","startAdornment","SearchIcon","viewBox","marginRight","endAdornment","DeleteIcon","cursor","renderOption","props","option","component","minHeight","fontWeight","arr","_Fragment","flexWrap","Chip","label","SearchBlock","onToggle","onOpenClick","isOpen","onClearInputClick","alignSelf","paddingRight","tablet","mobile","laptop","OutlinedInput","onFocus","transition","FiltersIcon","CustomAccordion","MuiAccordion","disableGutters","elevation","square","borderBottom","AccordionSummary","MuiAccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","MuiAccordionDetails","Accordion","isDisabled","ariaControls","title","text","disabled","WorkingHourInfo","isWorking","workingHours","isDisabledAccordion","BranchPreview","info","textContent","cityName","branchAddress","today","Date","getDay","isOpen24","openHours","shortenedDay","schedule","src","alt","flexGrow","whiteSpace","workAtWeekends","groups","branchData","cashWithdraw","icon","ArrowDownIcon","group","replenishCard","ArrowUpIcon","acceptPayment","ArrowRightUpIcon","currencyExchange","CurrencyIcon","moneyTransfer","TransferIcon","replenishAccount","WithoutCardIcon","CheckRounded","open24","Access24Icon","WeekendIcon","ramp","RampIcon","consultation","ConsultIcon","insurance","InsuranceIcon","exoticCurrency","ExoticCurrencyIcon","getFilterTitle","filterName","_branchData","DetailedMarkInfo","Boolean","mb","BulletIcon","Filters","filters","resultsLength","onClearClick","onToggleFilter","onShowResultsClick","groupName","groupData","i","ToggleButton","isActiveToggle","includes","NoResults","imageSrc","Puller","MobileActiveBranch","isActiveMark","onClickAway","isMobile","setOpen","toggleDrawer","ClickAwayListener","SwipeableDrawer","anchor","swipeAreaWidth","ModalProps","keepMounted","visibility","SWIPE_AREA_MOBILE","SWIPE_AREA_TABLET","MobileSideBox","isFiltersVisible","onToggleOpen","disableRestoreFocus","disableAutoFocus","flexDirection","overflowY","overflowX","SideBox","isMobileActiveBranchOpen","searchInput","resultsLimit","onBranchClick","onBackClick","find","m","isTablet","Content","SvgIcon","ClearRoundedIcon","transitionProperty","transitionDuration","transitionTimingFunction","startIcon","ArrowBackIos","disableTouchRipple","ArrowLeftRounded","ArrowRightRounded","quickFilterData","key","QuickFiltersEnum","quickFilterButtonStyle","_quickFilterButtonSty","textTransform","mr","paddingLeft","ml","QuickFilters","disabledFilters","dispatch","useAppDispatch","currentFilter","useAppSelector","selectQuickFilter","setQuickFilter","ToggleButtonGroup","exclusive","newFilter","rowGap","scrollbarWidth","item","pl","MapContainer","isRegionDialogVisible","setIsConfirmVisible","setRegion","toggleVisibility","isLowerThanLaptop","_useGetBranchesDataQu","useGetBranchesDataQuery","branchesData","error","isSideBoxOpen","setIsSideBoxOpen","setIsMobileActiveBranchOpen","activeFilters","setActiveFilters","setIsFiltersVisible","_useState11","_useState12","setSearchInput","_useState13","_useState14","isErrorModalOpened","setIsErrorModalOpened","filteredMarks","every","toLowerCase","quickFilter","quickFilteredBranchesData","branch","columnGap","currentTarget","_toConsumableArray","WarningModal","message","LocationTooltip","className","_objectWithoutProperties","_excluded","Tooltip","classes","popper","tooltipClasses","RegionConfirm","isModalOpen","onConfirm","onDeny","justifyItems","borderWidth","borderStyle","placement","BranchesAndAtms","_useGeoLocation","setCity","setLocationCoords","geoLocationError","setGeoLocationError","fetchingError","setFetchingError","toggle","setToggle","_","then","res","retry","useGeoLocation","isShowCookieBanner","setIsShowCookieBanner","isConfirmVisible","setIsRegionDialogVisible","locationTitle","PageContainer","headerPosition","headerProps","extraItem","withBlur","hasSideMenu","MuiToggleButton","selected","p","errorImg"],"sourceRoot":""}