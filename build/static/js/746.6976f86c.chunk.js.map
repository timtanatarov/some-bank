{"version":3,"file":"static/js/746.6976f86c.chunk.js","mappings":"0PAgBaA,EAAe,CACxBC,IAAK,CACDC,K,6qEACAC,KAAM,2BACNC,OAAQ,UAEZC,IAAK,CACDH,K,ytHACAC,KAAM,0DACNC,OAAQ,KAEZE,IAAK,CACDJ,K,i7DACAC,KAAM,kFACNC,OAAQ,QAEZG,IAAK,CACDL,K,ygEACAC,KAAM,8FACNC,OAAQ,WAIHI,EAAkB,SAACC,GAAY,IAAAC,EAAA,OAAoD,QAApDA,EAAKV,EAAaS,UAAkC,IAAAC,OAAA,EAA/CA,EAAiDP,IAAK,EAE1FQ,EAAU,CAAEF,KAAM,MAAOG,QAASJ,EAAgB,OAAQK,UAAW,EAAGC,WAAY,GAEpFC,EAAiB,SAC1BC,EACAC,EACAC,EACAC,GACE,IAADC,EACD,GAAIH,IAAiBC,EAAY,OAAOF,EAExC,IACMK,GADQC,EAAAA,EAAAA,IAAgBN,KACuC,QAA3CI,EAAAD,EAAKI,MAAK,SAACC,GAAE,OAAKA,EAAGf,OAASQ,CAAY,WAAC,IAAAG,OAAA,EAA3CA,EAA6CP,YAAa,GAC9EY,EAAaN,EAAKI,MAAK,SAACC,GAAE,OAAKA,EAAGf,OAASS,CAAU,IACrDQ,EAAsBL,IAAaM,OAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYZ,WAAac,OAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYX,aAAe,GAAK,GAChH,OAAOc,EAAAA,EAAAA,IAA4BF,EACvC,EAEaG,EAAkB,SAC3BC,EACAb,EACAC,EACAC,GACE,IAADY,EACD,GAAId,IAAiBC,EAAY,OAAOY,EAExC,IAAME,GAAQV,EAAAA,EAAAA,IAAgBQ,GACxBL,EAAaN,EAAKI,MAAK,SAACC,GAAE,OAAKA,EAAGf,OAASS,CAAU,IAErDe,IADaN,OAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYZ,WAAac,OAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYX,aAAe,GAAK,GAAKkB,IACtB,QAA3CD,EAAAZ,EAAKI,MAAK,SAACC,GAAE,OAAKA,EAAGf,OAASQ,CAAY,WAAC,IAAAc,OAAA,EAA3CA,EAA6ClB,YAAaqB,KACxF,OAAON,EAAAA,EAAAA,IAA4BK,EACvC,C,0KC7DaE,EAAkB,SAAHC,GAAmD,IAA7CC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QACtC,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,GAAI,CAAEC,OAAQ,KAAUJ,QAASA,EAASK,KAAMN,EAAOO,UAC3DC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACFC,UAAW,EACXN,GAAI,CACAO,OAAQ,CAAEC,OAAQ,QAASC,OAAQ,QACnCC,MAAO,CAAEF,OAAQ,QAASC,OAAQ,QAClCE,EAAG,CAAEH,OAAQ,YAAaC,OAAQ,kBAClCG,aAAc,OAChBT,SAAA,EAEFL,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACC,QAASjB,EAASG,GAAI,CAAEe,SAAU,WAAYC,MAAO,OAAQC,IAAK,QAASd,UACnFL,EAAAA,EAAAA,KAACoB,EAAAA,GAAS,CAACC,SAAS,cAExBf,EAAAA,EAAAA,MAACgB,EAAAA,EAAK,CAACC,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAAQpB,SAAA,EAC7DL,EAAAA,EAAAA,KAAC0B,EAAAA,EAAG,CACAC,UAAU,MACVC,IAAKC,EACL3B,GAAI,CAAEU,MAAO,QAASH,OAAQ,QAASqB,GAAI,CAAEpB,OAAQ,IAAKC,OAAQ,WAEtEL,EAAAA,EAAAA,MAACgB,EAAAA,EAAK,CACFC,QAAQ,MACRC,WAAW,SACXtB,GAAI,CAAE6B,UAAW,SAAUC,MAAOC,EAAAA,EAAAA,QAAgBC,WAAY,OAAQ7B,SAAA,EAEtEL,EAAAA,EAAAA,KAACmC,EAAAA,EAAU,CAACR,UAAU,MAAMS,QAAQ,oBAAoBlC,GAAI,CAAE4B,GAAI,CAAEpB,OAAQ,QAAUL,SAAA,kPAGtFL,EAAAA,EAAAA,KAACmC,EAAAA,EAAU,CAACR,UAAU,MAAMS,QAAQ,qBAAoB/B,SAAA,qSAQhF,C,kHC3CagC,EAAQ,SAAHxC,GAAA,IAAMyC,EAAOzC,EAAPyC,QAASpC,EAAEL,EAAFK,GAAE,OAC/BF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAG,CACAxB,IAAEqC,EAAAA,EAAAA,GAAA,CACE1B,EAAG,YACH2B,QAAS,OACTC,WAAYR,EAAAA,EAAAA,WACZxB,OAAQ,OACRe,WAAY,SACZC,eAAgB,SAChBX,aAAc,OACXZ,GACLG,UAEFL,EAAAA,EAAAA,KAACmC,EAAAA,EAAU,CAACC,QAAQ,qBAAqBlC,GAAI,CAAE6B,UAAW,UAAW1B,SAChEiC,KAEH,C,qNCLGI,GAASC,EAAAA,EAAAA,OAAK,SAAA9C,GAA8C,IAA3CQ,EAAQR,EAARQ,SAAQuC,EAAA/C,EAAE0B,QAAAA,OAAO,IAAAqB,EAAG,GAAEA,EAC1CC,GAAQC,EAAAA,EAAAA,KACRC,GAAwBC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,GAAG,WACjEC,GAAgCC,EAAAA,EAAAA,UAAS,IAAM7B,GAAQ8B,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAwCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA0CT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA9CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAkDb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA1DE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GACxCG,GAAcC,EAAAA,EAAAA,QAA2B,MACzCC,GAAkBD,EAAAA,EAAAA,QAA2B,MAE7CE,GAAUb,EAAeJ,EAEzBkB,GAAQC,EAAAA,EAAAA,UACV,kBACKC,MAAMC,QAAQvE,GAAYA,EAAW,CAACA,IAAWwE,KAAI,SAACC,EAAMC,EAAOC,GAAK,OACrEhF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAG,CACAxB,GAAI,CAAEO,OAAQ,OAAQG,MAAO,cAE7BqE,IAAKF,IAAUC,EAAME,OAAS,EAAIb,OAAcc,EAAU9E,SAEzDyE,GAHIC,EAIH,GACR,GACN,CAAC1E,IAGC+E,EAAQX,EAAMS,OAEdG,EAAkB,SAACC,GACrBlB,EAAqBkB,EAAQ,GAAGC,eACpC,EAEMC,EAAWnB,EAAYoB,SAE7BC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,CACZC,KAAMrB,EAAgBkB,QACtBI,WAAY,MACZC,UAAW,GAGTC,EAAW,IAAIC,qBAAqBX,EAAiBM,GAG3D,OAFAH,GAAYO,EAASE,QAAQT,GAEtB,WACHA,GAAYO,EAASG,UAAUV,EACnC,CACJ,GAAG,CAACA,KAEJE,EAAAA,EAAAA,YAAU,WACNF,GAAYhC,EAAYgC,EAASW,YAAc5E,EACnD,GAAG,CAACiE,EAAUjE,IAmCd,OACIjB,EAAAA,EAAAA,MAACoB,EAAAA,EAAG,CAACxB,GAAI,CAAEkG,SAAU,UAAW/F,SAAA,EAC5BC,EAAAA,EAAAA,MAACoB,EAAAA,EAAG,CAACuD,IAAKV,EAAiBrE,GAAI,CAAEe,SAAU,YAAaZ,SAAA,EACpDL,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CACF+E,UAAU,MACV9E,QAAO,GAAA+E,OAAK/E,EAAO,MACnBgF,aA3BS,SAACC,GACtBxC,EAAiBwC,EAAEC,QAAQ,GAAGC,QAClC,EA0BgBC,YAxBQ,SAACH,GACrB,GAAKzC,EAAL,CAEA,IAAM6C,EAAkBJ,EAAEC,QAAQ,GAAGC,QAC/BL,EAAYtC,EAAgB6C,EAE9BP,EAAY,IAAM1C,EAAeyB,EAAQ,IAAMjB,GAC/CP,EAAgBD,EAAe,GAG/B0C,GAAa,IAAM1C,EAAe,GAClCC,EAAgBD,EAAe,GAGnCK,EAAiB,EAbS,CAc9B,EAUgB9D,GAAI,CACAe,SAAU,WACV4F,GAAI,CACAnG,OAAQ,OACRC,OAAQ,QAEZmG,UAAU,cAADR,OAAgB9B,EAAM,OAC/BuC,WAAY,kBACd1G,SAEDoE,IAEJd,EAAe,IAAMZ,IAA0BiE,EAAAA,MAC5ChH,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACPC,QAnDD,WACf4C,EAAgBD,EAAe,EACnC,EAkDoBzD,GAAI,CACAU,MAAO,OACPH,OAAQ,OACRgC,WAAYR,EAAAA,EAAAA,SACZnB,aAAc,MACdG,SAAU,WACVE,IAAK,MACLD,MAAO,OACP+F,KAAM,OACNH,UAAW,wBACX,UAAW,CACPI,gBAAiBjF,EAAAA,EAAAA,WAEvB5B,UAEFL,EAAAA,EAAAA,KAACmH,EAAAA,EAAe,CAAC9F,SAAS,aAGhC8C,GAAqBR,EAAeyB,EAAQ,IAAMrC,IAA0BiE,EAAAA,MAC1EhH,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACPC,QApEA,WAChB4C,EAAgBD,EAAe,EACnC,EAmEoBzD,GAAI,CACAU,MAAO,OACPH,OAAQ,OACRyG,gBAAiBjF,EAAAA,EAAAA,SACjBnB,aAAc,MACdK,IAAK,MACLD,MAAO,IACP+F,KAAM,OACNH,UAAW,wBACX7F,SAAU,WACV,UAAW,CACPiG,gBAAiBjF,EAAAA,EAAAA,WAEvB5B,UAEFL,EAAAA,EAAAA,KAACoH,EAAAA,EAAgB,CAAC/F,SAAS,gBAIvCrB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAG,CACAxB,IAAEqC,EAAAA,EAAAA,GAAA,CACE8E,OAAQ,iBACJjC,EAAQ,GAAK,CACbkC,QAAS,EACTC,cAAe,SAErBlH,UAEFL,EAAAA,EAAAA,KAACwH,EAAAA,EAAU,CAACC,cAAerC,EAAOzB,aAAcA,EAAc+D,cAzGjD,SAACC,GACtB/D,EAAgB+D,EACpB,QA2GJ,G,oJCvKaC,GAAMjF,EAAAA,EAAAA,OAAK,SAAA9C,GAAuD,IAApDkF,EAAKlF,EAALkF,MAAO8C,EAAOhI,EAAPgI,QAASC,EAAkBjI,EAAlBiI,mBACvC,OACIxH,EAAAA,EAAAA,MAACyH,EAAAA,EAAU,CACP7H,GAAI,CACAmH,OAAQ,aACR,kBAAmB,CACfW,WAAY,KAEhB,eAAgB,CACZC,YAAa,MAEnB5H,SAAA,EAEFL,EAAAA,EAAAA,KAACkI,EAAAA,EAAK,CACFL,QAASA,EACTpI,MAAOsF,EACPoD,SAAUL,EACVlK,KAAK,gBACLsC,GAAI,CACAe,SAAU,WACVqG,QAAS,MAGjBtH,EAAAA,EAAAA,KAAC0B,EAAAA,EAAG,CACAxB,GAAI,CACAU,MAAOiH,EAAU,OAAS,MAC1BpH,OAAQ,MACRyG,gBAAiBjF,EAAAA,EAAAA,aACjBnB,aAAc,OACdsH,OAAQ,UACRrB,WAAY,8BAKhC,ICjCaS,EAAa,SAAH3H,GAAyE,IAAnE4H,EAAa5H,EAAb4H,cAAe9D,EAAY9D,EAAZ8D,aAAc+D,EAAa7H,EAAb6H,cAChDI,ECTc,SAAyBO,GAC7C,IAAMC,GAAahE,EAAAA,EAAAA,QAAO+D,GAM1B,OAJAE,EAAAA,EAAAA,kBAAgB,WACZD,EAAW7C,QAAU4C,CACzB,KAEOG,EAAAA,EAAAA,cAAY,WAEf,OADWF,EAAW7C,QACbgD,WAAC,EAADC,UACb,GAAG,GACP,CDF+BC,EAAS,SAACC,GACjClB,EAActI,OAAOwJ,EAAMC,OAAOpJ,OACtC,IAEA,OACIO,EAAAA,EAAAA,KAAC8I,EAAAA,EAAU,CAACC,KAAK,EAAK1I,UACjB2I,EAAAA,EAAAA,GAAIrE,MAAM8C,IAAgB5C,KAAI,SAACoE,EAAGlE,GAC/B,IAAM8C,EAAUlE,IAAiBoB,EACjC,OAAO/E,EAAAA,EAAAA,KAAC4H,EAAG,CAAa7C,MAAOA,EAAO8C,QAASA,EAASC,mBAAoBA,GAA3D/C,EACrB,KAGZ,C,6FEfamE,EAA8B,SAAHrJ,GAAkD,IAADsJ,EAAAtJ,EAA3CuJ,KAAAA,OAAI,IAAAD,EAAG,SAAQA,EAAEE,EAASxJ,EAATwJ,UAAWhJ,EAAQR,EAARQ,SACtE,OACIC,EAAAA,EAAAA,MAACgB,EAAAA,EAAK,CACFC,QAAkB,UAAT6H,EAAmB,OAAS,OACrClJ,GAAI,CACAU,MAAgB,UAATwI,EAAmB,QAAO,QACjCE,SAAmB,UAATF,EAAmB,QAAU,QACvC3I,OAAiB,UAAT2I,EAAmB,QAAU,QACrCG,QAAS,OACTpJ,OAAQ,IACRc,SAAU,WACVe,MAAO,UACPlB,aAAc,OACd0I,WAAY,8CACdnJ,SAAA,CAEDA,GACDL,EAAAA,EAAAA,KAAC0B,EAAAA,EAAG,CACAxB,GAAI,CACAU,MAAgB,UAATwI,EAAmB,QAAU,QACpC3I,OAAiB,UAAT2I,EAAmB,QAAU,QACrCnI,SAAU,WACVd,OAAQ,KACRgB,IAAc,UAATiI,EAAmB,QAAU,QAClCnC,KAAM,MACNnG,aAAc,OACdoG,gBAAgB,GAADZ,OAAc,OAAT+C,QAAS,IAATA,OAAS,EAATA,EAAWI,4BAGvCzJ,EAAAA,EAAAA,KAAC0B,EAAAA,EAAG,CACAC,UAAU,MACVC,IAAc,OAATyH,QAAS,IAATA,OAAS,EAATA,EAAWK,OAChBxJ,GAAI,CACAU,MAAgB,UAATwI,EAAmB,QAAU,QACpC3I,OAAiB,UAAT2I,EAAmB,QAAU,QACrCnI,SAAU,WACVd,OAAQ,KACRgB,IAAc,UAATiI,EAAmB,QAAU,QAClCnC,KAAM,SAK1B,C,gLCrDO,IAAM5H,EAA8B,SAACsK,GACxC,OAAO,IAAIC,KAAKC,aAAa,QAAS,CAAEC,sBAAuB,IAAKC,OAAOJ,EAC/E,EAEaK,EAA6B,SAACC,GAAiB,IAADC,EACvD,GAAID,EAAIE,MAAM,aAAc,MAAO,GACnC,GAAI/K,OAAyB,QAAnB8K,EAACD,EAAIE,MAAM,gBAAQ,IAAAD,OAAA,EAAlBA,EAAoBhF,QAAU,EAAG,MAAO,GACnD,IAAMkF,EAAkBH,EAAIE,MAAM,QAClC,OAAIC,GAAmBhL,OAAOgL,EAAgBrF,OAASkF,EAAI/E,OAAS,EAAU,GACvE+E,EAAII,WAAW,IAAK,IAAIC,QAAQ,6BAA8B,MACzE,EAEavL,EAAkB,SAACU,GAAa,OAAMA,EAAM4K,WAAW,MAAO,IAAIC,QAAQ,IAAK,IAAK,EAEpFC,EAA0B,SAACC,GACpC,IAAMC,EAAU,IAAIC,OAAO,SAADpE,OAAUkE,EAAYtF,OAAS,GAAE,wCAC3D,OAAOsF,EAAYF,QAAQG,EAAS,oBACxC,EAEaE,EAAqB,SAAClL,GAAa,OAAKA,EAAM6K,QAAQ,kCAAkC,MAAQ,EAEhGM,EAAoB,SAACC,EAAgBC,GAE9C,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIH,EAAO3F,OAAQ8F,IAC/BD,GAAUF,EAAOG,IACZA,EAAI,GAAKF,IAAM,GAAKE,EAAIH,EAAO3F,OAAS,IAAG6F,GAAU,KAE9D,OAAOA,CACX,C","sources":["services/exchangeRatesService/currencyData.ts","shared/ComingSoonModal.tsx","shared/Plate.tsx","shared/Slider.tsx","shared/SwitchDots/Dot.tsx","shared/SwitchDots/index.tsx","hooks/useEvent.ts","shared/cards/Base.tsx","utils/inputFormatters.ts"],"sourcesContent":["import { convertToNumber, formatNumberToSpacingString } from 'src/utils/inputFormatters';\n\nimport China from 'src/images/flags/China.png';\nimport Usa from 'src/images/flags/Usa.png';\nimport Eu from 'src/images/flags/Eu.png';\nimport Rus from 'src/images/flags/Rus.png';\n\nexport type ConverterData = {\n    code: string;\n    rusName: string;\n    buyingRub: number;\n    sellingRub: number;\n};\n\nexport type currencyKeys = keyof typeof currencyData;\n\nexport const currencyData = {\n    EUR: {\n        icon: Eu,\n        name: 'Евро',\n        symbol: '€',\n    },\n    USD: {\n        icon: Usa,\n        name: 'Доллар США',\n        symbol: '$',\n    },\n    CNY: {\n        icon: China,\n        name: 'Китайский юань',\n        symbol: '¥',\n    },\n    RUB: {\n        icon: Rus,\n        name: 'Российский рубль',\n        symbol: '₽',\n    },\n};\n\nexport const getCurrencyName = (code: string) => currencyData[code as keyof typeof currencyData]?.name;\n\nexport const rubData = { code: 'RUB', rusName: getCurrencyName('RUB'), buyingRub: 1, sellingRub: 1 };\n\nexport const convertForward = (\n    amountToConvert: string,\n    fromCurrency: string,\n    toCurrency: string,\n    data: ConverterData[]\n) => {\n    if (fromCurrency === toCurrency) return amountToConvert;\n\n    const value = convertToNumber(amountToConvert);\n    const rubValue = value * (data.find((el) => el.code === fromCurrency)?.buyingRub || 0);\n    const targetData = data.find((el) => el.code === toCurrency);\n    const targetCurrencyValue = rubValue / ((Number(targetData?.buyingRub) + Number(targetData?.sellingRub)) / 2 || 1);\n    return formatNumberToSpacingString(targetCurrencyValue);\n};\n\nexport const convertBackward = (\n    targetConverted: string,\n    fromCurrency: string,\n    toCurrency: string,\n    data: ConverterData[]\n) => {\n    if (fromCurrency === toCurrency) return targetConverted;\n\n    const value = convertToNumber(targetConverted);\n    const targetData = data.find((el) => el.code === toCurrency);\n    const rubValue = ((Number(targetData?.buyingRub) + Number(targetData?.sellingRub)) / 2 || 1) * value;\n    const fromValue = rubValue / (data.find((el) => el.code === fromCurrency)?.buyingRub || Infinity);\n    return formatNumberToSpacingString(fromValue);\n};\n","import { Box, Dialog, IconButton, Paper, Stack, Typography } from '@mui/material';\nimport errorImg from 'src/images/routesError/errorImg.png';\nimport { colors } from 'src/theme';\n\nimport { CloseIcon } from './icons';\n\nexport type ComingSoonModalProps = {\n    isOpen: boolean;\n    onClose: VoidFunction;\n};\nexport const ComingSoonModal = ({ isOpen, onClose }: ComingSoonModalProps) => {\n    return (\n        <Dialog sx={{ zIndex: 100000 }} onClose={onClose} open={isOpen}>\n            <Paper\n                elevation={0}\n                sx={{\n                    height: { tablet: '445px', mobile: 'auto' },\n                    width: { tablet: '416px', mobile: 'auto' },\n                    p: { tablet: '60px 37px', mobile: '60px 37px 50px' },\n                    borderRadius: '4px',\n                }}\n            >\n                <IconButton onClick={onClose} sx={{ position: 'absolute', right: '16px', top: '16px' }}>\n                    <CloseIcon fontSize=\"medium\" />\n                </IconButton>\n                <Stack spacing=\"24px\" alignItems=\"center\" justifyContent=\"center\">\n                    <Box\n                        component=\"img\"\n                        src={errorImg}\n                        sx={{ width: '168px', height: '176px', mb: { tablet: '0', mobile: '8px' } }}\n                    />\n                    <Stack\n                        spacing=\"8px\"\n                        alignItems=\"center\"\n                        sx={{ textAlign: 'center', color: colors.primary, whiteSpace: 'pre' }}\n                    >\n                        <Typography component=\"div\" variant=\"subtitle2Semibold\" sx={{ mb: { tablet: '8px' } }}>\n                            {`Данный раздел находится \\nв стадии разработки.`}\n                        </Typography>\n                        <Typography component=\"div\" variant=\"descriptionRegular\">\n                            {`Приносим свои извинения \\nза доставленные неудобства.`}\n                        </Typography>\n                    </Stack>\n                </Stack>\n            </Paper>\n        </Dialog>\n    );\n};\n","import { Box, Typography, SxProps } from '@mui/material';\n\nimport { colors } from 'src/theme';\n\nexport const Plate = ({ message, sx }: { message: string; sx?: SxProps }) => (\n    <Box\n        sx={{\n            p: '10px 20px',\n            display: 'flex',\n            background: colors.neutral200,\n            height: '100%',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: '4px',\n            ...sx,\n        }}\n    >\n        <Typography variant=\"descriptionRegular\" sx={{ textAlign: 'center' }}>\n            {message}\n        </Typography>\n    </Box>\n);\n","import { useEffect, useRef, useState, useMemo, memo } from 'react';\n\nimport { Stack, IconButton, Box, useMediaQuery, useTheme } from '@mui/material';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\nimport { colors } from 'src/theme';\nimport { SwitchDots } from 'src/shared/SwitchDots';\nimport { isTouchScreen } from 'src/constants';\n\nexport type SliderProps = {\n    spacing?: number;\n    children: React.ReactNode | React.ReactNode[];\n};\n\nexport const Slider = memo(({ children, spacing = 16 }: SliderProps) => {\n    const theme = useTheme();\n    const isLaptopOrDesktopSize = useMediaQuery(theme.breakpoints.up('laptop'));\n    const [pageStep, setPageStep] = useState(260 + spacing);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [touchPosition, setTouchPosition] = useState(0);\n    const [isLastElemVisible, setIsLastElemVisible] = useState(false);\n    const lastElemRef = useRef<HTMLElement | null>(null);\n    const observedAreaRef = useRef<HTMLElement | null>(null);\n\n    const offset = -currentIndex * pageStep;\n\n    const cards = useMemo(\n        () =>\n            (Array.isArray(children) ? children : [children]).map((item, index, array) => (\n                <Box\n                    sx={{ height: 'auto', width: 'fit-conent' }}\n                    key={index}\n                    ref={index === array.length - 1 ? lastElemRef : undefined}\n                >\n                    {item}\n                </Box>\n            )),\n        [children]\n    );\n\n    const pages = cards.length;\n\n    const handleIntersect = (entries: IntersectionObserverEntry[]) => {\n        setIsLastElemVisible(entries[0].isIntersecting);\n    };\n\n    const lastElem = lastElemRef.current;\n\n    useEffect(() => {\n        const options = {\n            root: observedAreaRef.current,\n            rootMargin: '0px',\n            threshold: 1.0,\n        };\n\n        const observer = new IntersectionObserver(handleIntersect, options);\n        lastElem && observer.observe(lastElem);\n\n        return () => {\n            lastElem && observer.unobserve(lastElem);\n        };\n    }, [lastElem]);\n\n    useEffect(() => {\n        lastElem && setPageStep(lastElem.clientWidth + spacing);\n    }, [lastElem, spacing]);\n\n    const handleSwitchDots = (checkedRadioIndex: number) => {\n        setCurrentIndex(checkedRadioIndex);\n    };\n\n    const handleLeft = () => {\n        setCurrentIndex(currentIndex - 1);\n    };\n\n    const handleRight = () => {\n        setCurrentIndex(currentIndex + 1);\n    };\n\n    const handleTouchStart = (e: React.TouchEvent<HTMLDivElement>) => {\n        setTouchPosition(e.touches[0].clientX);\n    };\n\n    const handleTouchMove = (e: React.TouchEvent<HTMLDivElement>) => {\n        if (!touchPosition) return;\n\n        const currentPosition = e.touches[0].clientX;\n        const direction = touchPosition - currentPosition;\n\n        if (direction > 10 && currentIndex < pages - 1 && !isLastElemVisible) {\n            setCurrentIndex(currentIndex + 1);\n        }\n\n        if (direction < -10 && currentIndex > 0) {\n            setCurrentIndex(currentIndex - 1);\n        }\n\n        setTouchPosition(0);\n    };\n\n    return (\n        <Box sx={{ overflow: 'hidden' }}>\n            <Box ref={observedAreaRef} sx={{ position: 'relative' }}>\n                <Stack\n                    direction=\"row\"\n                    spacing={`${spacing}px`}\n                    onTouchStart={handleTouchStart}\n                    onTouchMove={handleTouchMove}\n                    sx={{\n                        position: 'relative',\n                        ml: {\n                            tablet: '36px',\n                            mobile: '24px',\n                        },\n                        transform: `translateX(${offset}px)`,\n                        transition: 'transform 0.5s',\n                    }}\n                >\n                    {cards}\n                </Stack>\n                {currentIndex > 0 && (isLaptopOrDesktopSize || !isTouchScreen) && (\n                    <IconButton\n                        onClick={handleLeft}\n                        sx={{\n                            width: '24px',\n                            height: '24px',\n                            background: colors.neutral0,\n                            borderRadius: '50%',\n                            position: 'absolute',\n                            top: '50%',\n                            right: 'auto',\n                            left: '28px',\n                            transform: 'translate(-50%, -50%)',\n                            '&:hover': {\n                                backgroundColor: colors.neutral0,\n                            },\n                        }}\n                    >\n                        <ChevronLeftIcon fontSize=\"small\" />\n                    </IconButton>\n                )}\n                {!isLastElemVisible && currentIndex < pages - 1 && (isLaptopOrDesktopSize || !isTouchScreen) && (\n                    <IconButton\n                        onClick={handleRight}\n                        sx={{\n                            width: '24px',\n                            height: '24px',\n                            backgroundColor: colors.neutral0,\n                            borderRadius: '50%',\n                            top: '50%',\n                            right: '0',\n                            left: 'auto',\n                            transform: 'translate(-50%, -50%)',\n                            position: 'absolute',\n                            '&:hover': {\n                                backgroundColor: colors.neutral0,\n                            },\n                        }}\n                    >\n                        <ChevronRightIcon fontSize=\"small\" />\n                    </IconButton>\n                )}\n            </Box>\n            <Box\n                sx={{\n                    margin: '24px 0 0 36px',\n                    ...(pages < 2 && {\n                        opacity: 0,\n                        pointerEvents: 'none',\n                    }),\n                }}\n            >\n                <SwitchDots itemsQuantity={pages} currentIndex={currentIndex} switchHandler={handleSwitchDots} />\n            </Box>\n        </Box>\n    );\n});\n","import { memo } from 'react';\nimport { Radio, InputLabel, Box } from '@mui/material';\nimport { colors } from 'src/theme';\n\ntype DotProps = {\n    checked: boolean;\n    index: number;\n    radioChangeHandler: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const Dot = memo(({ index, checked, radioChangeHandler }: DotProps) => {\n    return (\n        <InputLabel\n            sx={{\n                margin: '0 11px 0 0',\n                '&:first-of-type': {\n                    marginLeft: '0',\n                },\n                '&:last-child': {\n                    marginRight: '0',\n                },\n            }}\n        >\n            <Radio\n                checked={checked}\n                value={index}\n                onChange={radioChangeHandler}\n                name=\"radio-buttons\"\n                sx={{\n                    position: 'absolute',\n                    opacity: 0,\n                }}\n            />\n            <Box\n                sx={{\n                    width: checked ? '40px' : '8px',\n                    height: '6px',\n                    backgroundColor: colors.secondary200,\n                    borderRadius: '10px',\n                    cursor: 'pointer',\n                    transition: 'width 0.5s ease-in-out',\n                }}\n            />\n        </InputLabel>\n    );\n});\n","import { RadioGroup } from '@mui/material';\n\nimport { useEvent } from 'src/hooks/useEvent';\n\nimport { Dot } from './Dot';\n\ntype SwitchDotsProps = {\n    currentIndex: number;\n    itemsQuantity: number;\n    switchHandler: (index: number) => void;\n};\n\nexport const SwitchDots = ({ itemsQuantity, currentIndex, switchHandler }: SwitchDotsProps) => {\n    const radioChangeHandler = useEvent((event: React.ChangeEvent<HTMLInputElement>) => {\n        switchHandler(Number(event.target.value));\n    });\n\n    return (\n        <RadioGroup row={true}>\n            {[...Array(itemsQuantity)].map((_, index) => {\n                const checked = currentIndex === index;\n                return <Dot key={index} index={index} checked={checked} radioChangeHandler={radioChangeHandler} />;\n            })}\n        </RadioGroup>\n    );\n};\n","import { useRef, useLayoutEffect, useCallback } from 'react';\n\ntype callbackType<A extends unknown[], R> = (...args: A) => R;\n\nexport const useEvent = <A extends unknown[], R>(handler: callbackType<A, R>): callbackType<A, R> => {\n    const handlerRef = useRef(handler);\n\n    useLayoutEffect(() => {\n        handlerRef.current = handler;\n    });\n\n    return useCallback((...args) => {\n        const fn = handlerRef.current;\n        return fn(...args);\n    }, []);\n};\n","import { FC, ReactNode } from 'react';\nimport { Stack, Box } from '@mui/material';\nimport { CardBackground } from 'src/utils/getCardCover';\n\nexport type BaseCardProps = {\n    size?: 'normal' | 'large';\n    cardCover?: CardBackground;\n    children?: ReactNode;\n};\n\nexport const BaseCard: FC<BaseCardProps> = ({ size = 'normal', cardCover, children }) => {\n    return (\n        <Stack\n            spacing={size === 'large' ? '40px' : '35px'}\n            sx={{\n                width: size === 'large' ? '282px' : `260px`,\n                minWidth: size === 'large' ? '282px' : '260px',\n                height: size === 'large' ? '180px' : '166px',\n                padding: '16px',\n                zIndex: '1',\n                position: 'relative',\n                color: '#FFFFFF',\n                borderRadius: '16px',\n                textShadow: '0px 2.29088px 4.73px rgba(8, 43, 69, 0.16)',\n            }}\n        >\n            {children}\n            <Box\n                sx={{\n                    width: size === 'large' ? '277px' : '255px',\n                    height: size === 'large' ? '177px' : '163px',\n                    position: 'absolute',\n                    zIndex: '-2',\n                    top: size === 'large' ? '-39px' : '-34px',\n                    left: '2px',\n                    borderRadius: '13px',\n                    backgroundColor: `${cardCover?.defaultBackgroundColor}`,\n                }}\n            />\n            <Box\n                component=\"img\"\n                src={cardCover?.imgSrc}\n                sx={{\n                    width: size === 'large' ? '282px' : '260px',\n                    height: size === 'large' ? '180px' : '166px',\n                    position: 'absolute',\n                    zIndex: '-1',\n                    top: size === 'large' ? '-40px' : '-35px',\n                    left: '0',\n                }}\n            />\n        </Stack>\n    );\n};\n","export const formatNumberToSpacingString = (num: number) => {\n    return new Intl.NumberFormat('ru-RU', { maximumFractionDigits: 2 }).format(num);\n};\n\nexport const formatInputToSpacingString = (str: string) => {\n    if (str.match(/[^\\s\\d.,]/)) return '';\n    if (Number(str.match(/[,.]/g)?.length) > 1) return '';\n    const dividerPosition = str.match(/[,.]/);\n    if (dividerPosition && Number(dividerPosition.index) < str.length - 3) return '';\n    return str.replaceAll(' ', '').replace(/(\\d)(?=(\\d{3})+([^\\d]|$))/g, '$1 ');\n};\n\nexport const convertToNumber = (value: string) => +value.replaceAll(/\\s/g, '').replace(',', '.');\n\nexport const formatPhoneNumberOutput = (phoneNumber: string) => {\n    const pattern = new RegExp(`(^\\\\d{${phoneNumber.length % 10}})(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2}$)`);\n    return phoneNumber.replace(pattern, '+$1 ($2) $3 $4 $5');\n};\n\nexport const formatAmountOutput = (value: string) => value.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, `$1 `);\n\nexport const separateStringByN = (string: string, n: number) => {\n    let result = '';\n    for (let i = 0; i < string.length; i++) {\n        result += string[i];\n        if ((i + 1) % n === 0 && i < string.length - 1) result += ' ';\n    }\n    return result;\n};\n"],"names":["currencyData","EUR","icon","name","symbol","USD","CNY","RUB","getCurrencyName","code","_currencyData","rubData","rusName","buyingRub","sellingRub","convertForward","amountToConvert","fromCurrency","toCurrency","data","_data$find","rubValue","convertToNumber","find","el","targetData","targetCurrencyValue","Number","formatNumberToSpacingString","convertBackward","targetConverted","_data$find2","value","fromValue","Infinity","ComingSoonModal","_ref","isOpen","onClose","_jsx","Dialog","sx","zIndex","open","children","_jsxs","Paper","elevation","height","tablet","mobile","width","p","borderRadius","IconButton","onClick","position","right","top","CloseIcon","fontSize","Stack","spacing","alignItems","justifyContent","Box","component","src","errorImg","mb","textAlign","color","colors","whiteSpace","Typography","variant","Plate","message","_objectSpread","display","background","Slider","memo","_ref$spacing","theme","useTheme","isLaptopOrDesktopSize","useMediaQuery","breakpoints","up","_useState","useState","_useState2","_slicedToArray","pageStep","setPageStep","_useState3","_useState4","currentIndex","setCurrentIndex","_useState5","_useState6","touchPosition","setTouchPosition","_useState7","_useState8","isLastElemVisible","setIsLastElemVisible","lastElemRef","useRef","observedAreaRef","offset","cards","useMemo","Array","isArray","map","item","index","array","ref","length","undefined","pages","handleIntersect","entries","isIntersecting","lastElem","current","useEffect","options","root","rootMargin","threshold","observer","IntersectionObserver","observe","unobserve","clientWidth","overflow","direction","concat","onTouchStart","e","touches","clientX","onTouchMove","currentPosition","ml","transform","transition","isTouchScreen","left","backgroundColor","ChevronLeftIcon","ChevronRightIcon","margin","opacity","pointerEvents","SwitchDots","itemsQuantity","switchHandler","checkedRadioIndex","Dot","checked","radioChangeHandler","InputLabel","marginLeft","marginRight","Radio","onChange","cursor","handler","handlerRef","useLayoutEffect","useCallback","apply","arguments","useEvent","event","target","RadioGroup","row","_toConsumableArray","_","BaseCard","_ref$size","size","cardCover","minWidth","padding","textShadow","defaultBackgroundColor","imgSrc","num","Intl","NumberFormat","maximumFractionDigits","format","formatInputToSpacingString","str","_str$match","match","dividerPosition","replaceAll","replace","formatPhoneNumberOutput","phoneNumber","pattern","RegExp","formatAmountOutput","separateStringByN","string","n","result","i"],"sourceRoot":""}